[aux(use-3, Should-1), nsubj(use-3, I-2), root(ROOT-0, use-3), compound(money-5, IRA-4), dobj(use-3, money-5), mark(pay-7, to-6), advcl(use-3, pay-7), compound:prt(pay-7, down-8), nmod:poss(loans-11, my-9), compound(loans-11, student-10), dobj(pay-7, loans-11), punct(use-3, ?-12)] 	[aux(cash-3, Should-1), nsubj(cash-3, I-2), root(ROOT-0, cash-3), compound:prt(cash-3, out-4), nmod:poss(IRA-6, my-5), dobj(cash-3, IRA-6), mark(pay-8, to-7), advcl(cash-3, pay-8), nmod:poss(loans-11, my-9), compound(loans-11, student-10), dobj(pay-8, loans-11), punct(cash-3, ?-12)] 	1
[compound(Princess-2, Spain-1), nsubj(Testifies-3, Princess-2), root(ROOT-0, Testifies-3), case(Fraud-6, in-4), amod(Fraud-6, Historic-5), nmod:in(Testifies-3, Fraud-6), dobj(Testifies-3, Probe-7)] 	[compound(princess-2, Spain-1), nsubj(testifies-3, princess-2), root(ROOT-0, testifies-3), case(fraud-6, in-4), amod(fraud-6, historic-5), nmod:in(testifies-3, fraud-6), dobj(testifies-3, probe-7)] 	2
[mark(explain-2, To-1), root(ROOT-0, explain-2), amod(models-6, further-3), compound(models-6, vector-4), compound(models-6, space-5), dobj(explain-2, models-6), punct(explain-2, ,-7), advmod(characterized-12, basically-8), det(document-10, a-9), nsubjpass(characterized-12, document-10), auxpass(characterized-12, is-11), advcl(explain-2, characterized-12), case(vector-15, by-13), det(vector-15, a-14), nmod:agent(characterized-12, vector-15), punct(explain-2, .-16)] 	[det(document-2, A-1), nsubjpass(represented-4, document-2), auxpass(represented-4, is-3), root(ROOT-0, represented-4), case(vector-7, as-5), det(vector-7, a-6), nmod:as(represented-4, vector-7), punct(represented-4, .-8)] 	3
[nsubj(need-4, You-1), aux(need-4, do-2), neg(need-4, not-3), root(ROOT-0, need-4), mark(worry-6, to-5), xcomp(need-4, worry-6), punct(need-4, .-7)] 	[nsubj(have-4, You-1), aux(have-4, do-2), neg(have-4, n't-3), root(ROOT-0, have-4), mark(worry-6, to-5), xcomp(have-4, worry-6), punct(have-4, .-7)] 	4
[compound(backs-2, Driver-1), nsubj(drives-8, backs-2), case(stroller-4, into-3), nmod:into(backs-2, stroller-4), case(child-6, with-5), nmod:with(backs-2, child-6), punct(backs-2, ,-7), root(ROOT-0, drives-8), compound:prt(drives-8, off-9)] 	[compound(backs-2, Driver-1), nsubj(drives-10, backs-2), case(mom-4, into-3), nsubj(drives-10, mom-4), punct(mom-4, ,-5), appos(mom-4, stroller-6), case(child-8, with-7), nmod:with(stroller-6, child-8), advmod(drives-10, then-9), root(ROOT-0, drives-10), compound:prt(drives-10, off-11)] 	5
[advmod(make-4, How-1), aux(make-4, do-2), nsubj(make-4, I-3), root(ROOT-0, make-4), det(desk-8, a-5), compound(desk-8, height-6), amod(desk-8, adjustable-7), dobj(make-4, desk-8), punct(make-4, ?-9)] 	[advmod(build-4, How-1), aux(build-4, can-2), nsubj(build-4, I-3), root(ROOT-0, build-4), det(wall-6, a-5), nsubj(mounted-7, wall-6), xcomp(build-4, mounted-7), amod(desk-10, adjustable-8), compound(desk-10, height-9), dobj(mounted-7, desk-10), punct(build-4, ?-11)] 	6
[nsubj(weighting-9, One-1), case(schemes-6, of-2), det(schemes-6, the-3), amod(schemes-6, best-4), amod(schemes-6, known-5), nmod:of(One-1, schemes-6), cop(weighting-9, is-7), amod(weighting-9, tf-idf-8), root(ROOT-0, weighting-9), punct(see-11, -LRB--10), dep(weighting-9, see-11), det(example-13, the-12), dobj(see-11, example-13), amod(example-13, below-14), punct(see-11, -RRB--15), punct(weighting-9, .-16)] 	[nsubjpass(called-8, One-1), case(methods-6, of-2), det(methods-6, the-3), amod(methods-6, best-4), amod(methods-6, known-5), nmod:of(One-1, methods-6), auxpass(called-8, is-7), root(ROOT-0, called-8), amod(weighting-10, tf-idf-9), xcomp(called-8, weighting-10), punct(called-8, .-11)] 	7
[nsubj(have-2, You-1), root(ROOT-0, have-2), mark(decide-4, to-3), xcomp(have-2, decide-4), dobj(want-7, what-5), nsubj(want-7, you-6), ccomp(decide-4, want-7), mark(get-9, to-8), xcomp(want-7, get-9), case(this-12, out-10), mwe(out-10, of-11), nmod:out_of(get-9, this-12), punct(have-2, .-13)] 	[nsubj(have-2, You-1), root(ROOT-0, have-2), mark(know-4, to-3), xcomp(have-2, know-4), dobj(want-7, what-5), nsubj(want-7, you-6), ccomp(know-4, want-7), mark(do-9, to-8), xcomp(want-7, do-9), punct(have-2, .-10)] 	8
[nmod:poss(theorem-3, Bayes-1), case(Bayes-1, '-2), nsubj(names-5, theorem-3), cop(names-5, was-4), root(ROOT-0, names-5), case(Bayes-9, after-6), compound(Bayes-9, Rev-7), compound(Bayes-9, Thomas-8), nmod:after(names-5, Bayes-9), cc(names-5, and-10), cop(method-13, is-11), det(method-13, a-12), conj:and(names-5, method-13), acl(method-13, used-14), case(theory-17, in-15), compound(theory-17, probability-16), nmod:in(used-14, theory-17), punct(names-5, .-18)] 	[case(theorem-4, As-1), det(theorem-4, an-2), amod(theorem-4, official-3), nmod:as(valid-10, theorem-4), punct(valid-10, ,-5), nmod:poss(theorem-8, Bayes-6), case(Bayes-6, '-7), nsubj(valid-10, theorem-8), cop(valid-10, is-9), root(ROOT-0, valid-10), case(interpretations-14, in-11), det(interpretations-14, all-12), amod(interpretations-14, universal-13), nmod:in(valid-10, interpretations-14), case(probability-16, of-15), nmod:of(interpretations-14, probability-16), punct(valid-10, .-17)] 	9
[advmod(connect-4, How-1), aux(connect-4, can-2), nsubj(connect-4, I-3), root(ROOT-0, connect-4), amod(wires-6, additional-5), dobj(connect-4, wires-6), case(receptacle-9, to-7), det(receptacle-9, a-8), nmod:to(connect-4, receptacle-9), punct(connect-4, ?-10)] 	[advmod(connect-4, How-1), aux(connect-4, do-2), nsubj(connect-4, I-3), root(ROOT-0, connect-4), det(wires-6, the-5), dobj(connect-4, wires-6), case(receptacle-10, to-7), det(receptacle-10, this-8), amod(receptacle-10, USB-9), nmod:to(connect-4, receptacle-10), punct(connect-4, ?-11)] 	10
[nsubj(remained-2, I-1), root(ROOT-0, remained-2), case(tree-6, under-3), det(tree-6, the-4), compound(tree-6, banyan-5), nmod:under(remained-2, tree-6), punct(remained-2, ,-7), xcomp(remained-2, exhausted-8), case(ritual-12, by-9), nmod:poss(ritual-12, my-10), amod(ritual-12, daily-11), nmod:by(exhausted-8, ritual-12), mark(dragooning-14, of-13), acl(ritual-12, dragooning-14), det(men-16, the-15), dobj(dragooning-14, men-16), det(hours-19, every-17), nummod(hours-19, two-18), nmod:tmod(dragooning-14, hours-19), punct(remained-2, .-20)] 	[nsubj(remained-2, I-1), root(ROOT-0, remained-2), case(tree-6, under-3), det(tree-6, the-4), compound(tree-6, banyan-5), nmod:under(remained-2, tree-6), punct(remained-2, ,-7), xcomp(remained-2, exhausted-8), case(ritual-12, by-9), nmod:poss(ritual-12, my-10), amod(ritual-12, daily-11), nmod:by(exhausted-8, ritual-12), mark(herding-14, of-13), acl(ritual-12, herding-14), det(cats-16, the-15), dobj(herding-14, cats-16), det(hours-19, every-17), nummod(hours-19, two-18), nmod:tmod(herding-14, hours-19), punct(remained-2, .-20)] 	11
[nsubj(demands-2, Mayawati-1), root(ROOT-0, demands-2), nmod:poss(rule-5, president-3), case(president-3, 's-4), dobj(demands-2, rule-5), case(Kashmir-7, in-6), nmod:in(rule-5, Kashmir-7)] 	[compound(rule-4, Mayawati-1), compound(rule-4, demands-2), compound(rule-4, Presidents-3), root(ROOT-0, rule-4), case(Jammu-6, in-5), nmod:in(rule-4, Jammu-6), cc(Jammu-6, and-7), conj:and(Jammu-6, Kashmir-8)] 	12
[advmod(replace-4, How-1), aux(replace-4, can-2), nsubj(replace-4, I-3), root(ROOT-0, replace-4), det(chain-10, a-5), compound(chain-10, ceiling-6), compound(chain-10, fan-7), amod(chain-10, light-8), compound(chain-10, pull-9), dobj(replace-4, chain-10), punct(replace-4, ?-11)] 	[advmod(replace-4, How-1), aux(replace-4, can-2), nsubj(replace-4, I-3), root(ROOT-0, replace-4), nmod:poss(fixture-7, my-5), amod(fixture-7, light-6), dobj(replace-4, fixture-7), case(fan-11, with-8), det(fan-11, a-9), compound(fan-11, ceiling-10), nmod:with(fixture-7, fan-11), punct(replace-4, ?-12)] 	13
[nsubj(did-2, I-1), root(ROOT-0, did-2), det(time-5, this-3), nummod(time-5, one-4), dobj(did-2, time-5), advmod(time-5, as-6), mwe(as-6, well-7), punct(did-2, .-8)] 	[nsubj(have-2, I-1), root(ROOT-0, have-2), det(habit-4, this-3), dobj(have-2, habit-4), advmod(have-2, as-5), mwe(as-5, well-6), punct(have-2, .-7)] 	14
[mark(appears-4, If-1), det(term-3, a-2), nsubj(appears-4, term-3), root(ROOT-0, appears-4), case(document-7, in-5), det(document-7, the-6), nmod:in(non-zero-15, document-7), advmod(value-10, then-8), nmod:poss(value-10, its-9), nsubj(non-zero-15, value-10), case(vector-13, in-11), det(vector-13, the-12), nmod:in(value-10, vector-13), cop(non-zero-15, is-14), ccomp(appears-4, non-zero-15), punct(appears-4, .-16)] 	[det(document-2, A-1), nsubjpass(represented-4, document-2), auxpass(represented-4, is-3), root(ROOT-0, represented-4), case(vector-7, as-5), det(vector-7, a-6), nmod:as(represented-4, vector-7), cc(vector-7, and-8), det(dimension-10, each-9), conj:and(vector-7, dimension-10), xcomp(represented-4, corresponds-11), case(term-15, to-12), det(term-15, a-13), amod(term-15, separate-14), nmod:to(corresponds-11, term-15), punct(represented-4, .-16)] 	15
[compound(strike-3, US-1), compound(strike-3, drone-2), nsubj(kills-4, strike-3), root(ROOT-0, kills-4), dobj(kills-4, eight-5), case(Waziristan-7, in-6), nmod:in(kills-4, Waziristan-7)] 	[compound(strike-3, US-1), compound(strike-3, drone-2), nsubj(kills-4, strike-3), root(ROOT-0, kills-4), dobj(kills-4, 11-5), case(Pakistan-7, in-6), nmod:in(11-5, Pakistan-7)] 	16
[nmod:poss(condition-3, Mandela-1), case(Mandela-1, 's-2), nsubj(improved-6, condition-3), aux(improved-6, has-4), punct(improved-6, `-5), root(ROOT-0, improved-6), punct(improved-6, '-7)] 	[nmod:poss(condition-3, Mandela-1), case(Mandela-1, 's-2), nsubj(worsened-6, condition-3), aux(worsened-6, has-4), punct(worsened-6, `-5), root(ROOT-0, worsened-6), case(hours-10, over-7), amod(hours-10, past-8), nummod(hours-10, 48-9), nmod:over(worsened-6, hours-10), punct(worsened-6, '-11)] 	17
[compound(representation-3, Vector-1), compound(representation-3, space-2), nsubj(results-4, representation-3), root(ROOT-0, results-4), case(loss-7, in-5), det(loss-7, the-6), nmod:in(results-4, loss-7), case(order-10, of-8), det(order-10, the-9), nmod:of(loss-7, order-10), dobj(document-17, which-11), det(terms-13, the-12), nsubj(document-17, terms-13), cop(document-17, are-14), case(document-17, in-15), det(document-17, the-16), acl:relcl(order-10, document-17), punct(results-4, .-18)] 	[mark(occurs-4, If-1), det(term-3, a-2), nsubj(occurs-4, term-3), advcl(non-zero-13, occurs-4), case(document-7, in-5), det(document-7, the-6), nmod:in(occurs-4, document-7), punct(non-zero-13, ,-8), det(value-10, the-9), nsubj(non-zero-13, value-10), aux(non-zero-13, will-11), cop(non-zero-13, be-12), root(ROOT-0, non-zero-13), case(vector-16, in-14), det(vector-16, the-15), nmod:in(non-zero-13, vector-16), punct(non-zero-13, .-17)] 	18
[aux(need-8, Would-1), det(citizen-4, a-2), amod(citizen-4, Colombian-3), nsubj(need-8, citizen-4), case(residency-7, with-5), amod(residency-7, Canadian-6), nmod:with(citizen-4, residency-7), root(ROOT-0, need-8), det(visa-11, a-9), compound(visa-11, transit-10), dobj(need-8, visa-11), case(UK-14, for-12), det(UK-14, the-13), nmod:for(visa-11, UK-14), punct(need-8, ?-15)] 	[aux(Need-3, Will-1), nsubj(Need-3, I-2), root(ROOT-0, Need-3), det(visa-6, a-4), compound(visa-6, Transit-5), dobj(Need-3, visa-6), cc(visa-6, or-7), conj:or(visa-6, ESTA-8), case(US-11, for-9), det(US-11, the-10), nmod:for(visa-6, US-11), case(Canadian-14, as-12), det(Canadian-14, a-13), nmod:as(Need-3, Canadian-14), punct(Need-3, ?-15)] 	19
[nsubj(do-3, You-1), aux(do-3, should-2), root(ROOT-0, do-3), dobj(do-3, it-4), punct(do-3, .-5)] 	[nsubj(do-3, You-1), aux(do-3, can-2), root(ROOT-0, do-3), dobj(do-3, it-4), punct(do-3, ,-5), advmod(do-3, too-6), punct(do-3, .-7)] 	20
[case(least-2, At-1), nmod:npmod(18-3, least-2), root(ROOT-0, 18-3), acl(18-3, killed-4), case(bombing-8, in-5), compound(bombing-8, Iraq-6), compound(bombing-8, mosque-7), nmod:in(killed-4, bombing-8)] 	[advmod(60-3, More-1), mwe(More-1, than-2), nummod(funeral-7, 60-3), amod(funeral-7, killed-4), case(Iraq-6, at-5), nmod:at(killed-4, Iraq-6), root(ROOT-0, funeral-7)] 	21
[expl('s-2, There-1), root(ROOT-0, 's-2), advmod('s-2, also-3), dobj(made-8, what-4), det(string-6, the-5), nsubjpass(made-8, string-6), auxpass(made-8, is-7), ccomp('s-2, made-8), nmod(made-8, of-9), punct('s-2, .-10)] 	[expl(is-2, There-1), root(ROOT-0, is-2), advmod(is-2, also-3), det(Youtube-Version-5, a-4), nsubj(is-2, Youtube-Version-5), case(film-8, of-6), det(film-8, the-7), nmod:of(Youtube-Version-5, film-8), punct(is-2, .-9)] 	22
[nsubj(useful-4, This-1), aux(useful-4, can-2), cop(useful-4, be-3), root(ROOT-0, useful-4), advmod(considered-15, when-5), det(number-7, the-6), nsubjpass(considered-15, number-7), case(times-9, of-8), nmod:of(number-7, times-9), det(word-11, a-10), nsubj(appears-12, word-11), acl:relcl(times-9, appears-12), auxpass(considered-15, is-13), neg(considered-15, not-14), advcl(useful-4, considered-15), xcomp(considered-15, important-16), punct(useful-4, .-17)] 	[nsubj(meaning-12, One-1), case(uses-6, of-2), det(uses-6, the-3), advmod(important-5, most-4), amod(uses-6, important-5), nmod:of(One-1, uses-6), case(rank-9, of-7), compound(rank-9, page-8), nmod:of(uses-6, rank-9), cop(meaning-12, is-10), nmod:poss(meaning-12, its-11), root(ROOT-0, meaning-12), case(advertising-14, to-13), nmod:to(meaning-12, advertising-14), punct(meaning-12, .-15)] 	23
[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(repair-7, to-6), acl(way-5, repair-7), det(bathtub-10, a-8), amod(bathtub-10, cracked-9), dobj(repair-7, bathtub-10), punct(What-1, ?-11)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(fix-7, to-6), acl(way-5, fix-7), det(floor-10, this-8), compound(floor-10, garage-9), dobj(fix-7, floor-10), punct(What-1, ?-11)] 	24

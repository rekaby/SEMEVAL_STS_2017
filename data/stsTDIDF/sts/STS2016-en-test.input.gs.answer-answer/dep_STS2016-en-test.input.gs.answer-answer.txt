[nsubj(remained-2, I-1), root(ROOT-0, remained-2), case(tree-6, under-3), det(tree-6, the-4), compound(tree-6, banyan-5), nmod:under(remained-2, tree-6), punct(remained-2, ,-7), xcomp(remained-2, exhausted-8), case(ritual-12, by-9), nmod:poss(ritual-12, my-10), amod(ritual-12, daily-11), nmod:by(exhausted-8, ritual-12), mark(dragooning-14, of-13), acl(ritual-12, dragooning-14), det(men-16, the-15), dobj(dragooning-14, men-16), det(hours-19, every-17), nummod(hours-19, two-18), nmod:tmod(dragooning-14, hours-19), punct(remained-2, .-20)] 	[nsubj(remained-2, I-1), root(ROOT-0, remained-2), case(tree-6, under-3), det(tree-6, the-4), compound(tree-6, banyan-5), nmod:under(remained-2, tree-6), punct(remained-2, ,-7), xcomp(remained-2, exhausted-8), case(ritual-12, by-9), nmod:poss(ritual-12, my-10), amod(ritual-12, daily-11), nmod:by(exhausted-8, ritual-12), mark(herding-14, of-13), acl(ritual-12, herding-14), det(cats-16, the-15), dobj(herding-14, cats-16), det(hours-19, every-17), nummod(hours-19, two-18), nmod:tmod(herding-14, hours-19), punct(remained-2, .-20)] 	1
[case(US-3, In-1), det(US-3, the-2), nmod:in(depend-7, US-3), punct(depend-7, ,-4), nsubj(depend-7, it-5), aux(depend-7, will-6), root(ROOT-0, depend-7), case(school-10, on-8), det(school-10, the-9), nmod:on(depend-7, school-10), punct(depend-7, .-11)] 	[nsubj(depends-3, It-1), advmod(depends-3, really-2), root(ROOT-0, depends-3), case(school-6, on-4), det(school-6, the-5), nmod:on(depends-3, school-6), cc(school-6, and-7), det(program-9, the-8), conj:and(school-6, program-9), punct(depends-3, .-10)] 	2
[expl('s-2, There-1), root(ROOT-0, 's-2), advmod('s-2, also-3), dobj(made-8, what-4), det(string-6, the-5), nsubjpass(made-8, string-6), auxpass(made-8, is-7), ccomp('s-2, made-8), nmod(made-8, of-9), punct('s-2, .-10)] 	[expl(is-2, There-1), root(ROOT-0, is-2), advmod(is-2, also-3), det(Youtube-Version-5, a-4), nsubj(is-2, Youtube-Version-5), case(film-8, of-6), det(film-8, the-7), nmod:of(Youtube-Version-5, film-8), punct(is-2, .-9)] 	3
[nsubj(imply-3, You-1), advmod(imply-3, also-2), root(ROOT-0, imply-3), nsubjpass(paid-8, you-4), aux(paid-8, may-5), neg(paid-8, not-6), auxpass(paid-8, be-7), ccomp(imply-3, paid-8), mark(place-13, if-9), nsubj(place-13, they-10), aux(place-13, can-11), neg(place-13, not-12), advcl(paid-8, place-13), dobj(place-13, you-14), case(client-17, with-15), det(client-17, a-16), nmod:with(place-13, client-17), punct(imply-3, .-18)] 	[nsubj(do-3, You-1), aux(do-3, can-2), root(ROOT-0, do-3), dobj(do-3, it-4), punct(do-3, ,-5), cc(do-3, but-6), nsubj(professor-12, you-7), aux(professor-12, might-8), neg(professor-12, not-9), cop(professor-12, be-10), det(professor-12, a-11), conj:but(do-3, professor-12), punct(do-3, .-13)] 	4
[nsubj(did-2, I-1), root(ROOT-0, did-2), det(time-5, this-3), nummod(time-5, one-4), dobj(did-2, time-5), advmod(time-5, as-6), mwe(as-6, well-7), punct(did-2, .-8)] 	[nsubj(have-2, I-1), root(ROOT-0, have-2), det(habit-4, this-3), dobj(have-2, habit-4), advmod(have-2, as-5), mwe(as-5, well-6), punct(have-2, .-7)] 	5
[nsubj(have-3, You-1), advmod(have-3, just-2), root(ROOT-0, have-3), mark(base-5, to-4), xcomp(have-3, base-5), nmod:poss(answer-7, your-6), dobj(base-5, answer-7), mark(know-12, on-8), dobj(know-12, what-9), nsubj(know-12, you-10), aux(know-12, do-11), advcl(base-5, know-12), punct(know-12, ,-13), nsubj(is-15, which-14), ccomp(know-12, is-15), dobj(want-18, what-16), nsubj(want-18, you-17), ccomp(is-15, want-18), punct(have-3, .-19)] 	[nsubj(want-3, You-1), aux(want-3, may-2), root(ROOT-0, want-3), dobj(want-3, it-4), punct(want-3, ,-5), cc(want-3, but-6), det(process-8, the-7), nsubj(is-12, process-8), acl(process-8, given-9), case(you-11, to-10), nmod:to(given-9, you-11), conj:but(want-3, is-12), dobj(have-15, what-13), nsubj(have-15, you-14), ccomp(is-12, have-15), mark(work-17, to-16), xcomp(have-15, work-17), advmod(work-17, within-18), punct(want-3, .-19)] 	6
[nsubj(need-4, You-1), aux(need-4, do-2), neg(need-4, not-3), root(ROOT-0, need-4), mark(worry-6, to-5), xcomp(need-4, worry-6), punct(need-4, .-7)] 	[nsubj(have-4, You-1), aux(have-4, do-2), neg(have-4, n't-3), root(ROOT-0, have-4), mark(worry-6, to-5), xcomp(have-4, worry-6), punct(have-4, .-7)] 	7
[nsubj(do-3, You-1), aux(do-3, should-2), root(ROOT-0, do-3), dobj(do-3, it-4), punct(do-3, .-5)] 	[nsubj(do-3, You-1), aux(do-3, should-2), root(ROOT-0, do-3), dobj(says-6, what-4), nsubj(says-6, it-5), ccomp(do-3, says-6), punct(do-3, .-7)] 	8
[nsubj(ask-4, You-1), aux(ask-4, should-2), advmod(ask-4, just-3), root(ROOT-0, ask-4), nmod:poss(boss-6, your-5), dobj(ask-4, boss-6), dobj(wants-9, what-7), nsubj(wants-9, he-8), acl:relcl(boss-6, wants-9), dobj(wants-9, you-10), mark(do-12, to-11), xcomp(wants-9, do-12), punct(ask-4, .-13)] 	[nsubj(listen-3, You-1), aux(listen-3, should-2), root(ROOT-0, listen-3), case(boss-6, to-4), nmod:poss(boss-6, your-5), nmod:to(listen-3, boss-6), punct(listen-3, ,-7), mark(paid-12, because-8), nsubjpass(paid-12, you-9), auxpass(paid-12, 're-10), neg(paid-12, not-11), advcl(listen-3, paid-12), mark(tell-14, to-13), xcomp(paid-12, tell-14), det(boss-16, the-15), dobj(tell-14, boss-16), nsubj(do-19, what-17), mark(do-19, to-18), acl:relcl(boss-16, do-19), punct(listen-3, .-20)] 	9
[nsubj(need-2, You-1), root(ROOT-0, need-2), mark(read-4, to-3), xcomp(need-2, read-4), det(lot-6, a-5), dobj(read-4, lot-6), mark(know-8, to-7), xcomp(read-4, know-8), dobj(like-11, what-9), nsubj(like-11, you-10), ccomp(know-8, like-11), cc(like-11, and-12), dobj(do-15, what-13), nsubj(do-15, you-14), conj:and(like-11, do-15), neg(do-15, n't-16), punct(need-2, .-17)] 	[nsubj(have-2, You-1), root(ROOT-0, have-2), mark(decide-4, to-3), xcomp(have-2, decide-4), advmod(much-6, how-5), dep(want-8, much-6), nsubj(want-8, you-7), ccomp(decide-4, want-8), mark(demand-10, to-9), xcomp(want-8, demand-10), punct(have-2, ,-11), cc(have-2, and-12), det(demands-15, what-13), amod(demands-15, unmet-14), conj:and(have-2, demands-15), nsubj(live-18, you-16), aux(live-18, can-17), acl:relcl(demands-15, live-18), nmod(live-18, with-19), punct(have-2, .-20)] 	10
[nsubj(depends-2, It-1), root(ROOT-0, depends-2), mark(want-6, on-3), dobj(want-6, what-4), nsubj(want-6, you-5), advcl(depends-2, want-6), mark(have-8, to-7), xcomp(want-6, have-8), case(tank-11, in-9), nmod:poss(tank-11, your-10), nmod:in(have-8, tank-11), punct(depends-2, .-12)] 	[nsubj(think-2, i-1), root(ROOT-0, think-2), nsubj(depends-4, it-3), ccomp(think-2, depends-4), dobj(want-7, what-5), nsubj(want-7, you-6), ccomp(depends-4, want-7), punct(think-2, :-8)] 	11
[nsubj(do-3, You-1), aux(do-3, can-2), root(ROOT-0, do-3), dobj(do-3, it-4), punct(do-3, ,-5), advmod(do-3, too-6), punct(do-3, .-7)] 	[discourse(do-5, Yes-1), punct(do-5, ,-2), nsubj(do-5, you-3), aux(do-5, can-4), root(ROOT-0, do-5), dobj(do-5, it-6), punct(do-5, .-7)] 	12
[nsubj(do-3, You-1), aux(do-3, should-2), root(ROOT-0, do-3), dobj(do-3, it-4), punct(do-3, .-5)] 	[nsubj(do-3, You-1), aux(do-3, can-2), root(ROOT-0, do-3), dobj(do-3, it-4), punct(do-3, ,-5), advmod(do-3, too-6), punct(do-3, .-7)] 	13
[nsubj(have-2, You-1), root(ROOT-0, have-2), mark(decide-4, to-3), xcomp(have-2, decide-4), dobj(want-7, what-5), nsubj(want-7, you-6), ccomp(decide-4, want-7), mark(get-9, to-8), xcomp(want-7, get-9), case(this-12, out-10), mwe(out-10, of-11), nmod:out_of(get-9, this-12), punct(have-2, .-13)] 	[nsubj(have-2, You-1), root(ROOT-0, have-2), mark(know-4, to-3), xcomp(have-2, know-4), dobj(want-7, what-5), nsubj(want-7, you-6), ccomp(know-4, want-7), mark(do-9, to-8), xcomp(want-7, do-9), punct(have-2, .-10)] 	14
[nsubj(have-2, I-1), root(ROOT-0, have-2), amod(suggestions-4, few-3), dobj(have-2, suggestions-4), case(you-6, for-5), nmod:for(suggestions-4, you-6), punct(have-2, :-7)] 	[nsubj(have-2, I-1), root(ROOT-0, have-2), nummod(suggestions-4, two-3), dobj(have-2, suggestions-4), case(you-6, for-5), nmod:for(suggestions-4, you-6), punct(have-2, :-7)] 	15
[nsubj(want-2, You-1), root(ROOT-0, want-2), mark(start-4, to-3), xcomp(want-2, start-4), case(room-7, in-5), det(room-7, the-6), nmod:in(start-4, room-7), nsubj(largest-11, that-8), cop(largest-11, is-9), det(largest-11, the-10), acl:relcl(room-7, largest-11), mark(make-13, to-12), xcomp(largest-11, make-13), xcomp(make-13, sure-14), nsubj(have-16, you-15), ccomp(sure-14, have-16), det(start-19, the-17), amod(start-19, straightest-18), dobj(have-16, start-19), punct(want-2, .-20)] 	[nsubj(have-3, You-1), aux(have-3, will-2), root(ROOT-0, have-3), mark(start-5, to-4), xcomp(have-3, start-5), case(clinic.-8, with-6), det(clinic.-8, the-7), nmod:with(start-5, clinic.-8), punct(have-3, ,-9), cc(have-3, and-10), advmod(move-12, maybe-11), conj:and(have-3, move-12), case(company-17, on-13), case(company-17, to-14), det(company-17, the-15), compound(company-17, insurance-16), nmod:to(move-12, company-17), punct(have-3, .-18)] 	16
[mark(want-5, if-1), nsubj(want-5, you-2), aux(want-5, do-3), neg(want-5, n't-4), root(ROOT-0, want-5), mark(derail-7, to-6), xcomp(want-5, derail-7), det(meeting-9, the-8), dobj(derail-7, meeting-9), punct(want-5, ,-10), cc(want-5, but-11), det(key-13, the-12), nsubj(is-14, key-13), conj:but(want-5, is-14), mark(speak-16, to-15), xcomp(is-14, speak-16), compound:prt(speak-16, up-17), punct(want-5, .-18)] 	[det(thing-3, The-1), amod(thing-3, key-2), nsubj(listen-12, thing-3), nsubj(need-5, you-4), acl:relcl(thing-3, need-5), mark(do-7, to-6), xcomp(need-5, do-7), case(meeting-10, in-8), det(meeting-10, this-9), nmod:in(do-7, meeting-10), aux(listen-12, is-11), root(ROOT-0, listen-12), punct(listen-12, .-13)] 	17
[advmod(know-12, Unfortunately-1), det(answer-3, the-2), nsubjpass(know-12, answer-3), case(question-6, to-4), nmod:poss(question-6, your-5), nmod:to(answer-3, question-6), auxpass(know-12, is-7), nsubjpass(know-12, we-8), advmod(know-12, simply-9), aux(know-12, do-10), neg(know-12, not-11), root(ROOT-0, know-12), punct(know-12, .-13)] 	[nmod:poss(answer-2, My-1), root(ROOT-0, answer-2), case(question-5, to-3), nmod:poss(question-5, your-4), nmod:to(answer-2, question-5), dep(answer-2, is-6), punct(is-6, ``-7), root(``-7, Probably-8), dep(Probably-8, Not-9), punct(Not-9, ''-10), punct(Probably-8, .-11)] 	18
[advmod(soon-2, As-1), root(ROOT-0, soon-2), case(possible-4, as-3), nmod:as(soon-2, possible-4), punct(soon-2, .-5)] 	[root(ROOT-0, Start-1), dobj(Start-1, them-2), advmod(early-4, as-3), advmod(Start-1, early-4), case(possible-6, as-5), nmod:as(early-4, possible-6), punct(Start-1, .-7)] 	19
[nsubj(have-3, You-1), advmod(have-3, just-2), root(ROOT-0, have-3), mark(base-5, to-4), xcomp(have-3, base-5), nmod:poss(answer-7, your-6), dobj(base-5, answer-7), mark(know-12, on-8), dobj(know-12, what-9), nsubj(know-12, you-10), aux(know-12, do-11), advcl(base-5, know-12), punct(know-12, ,-13), nsubj(is-15, which-14), ccomp(know-12, is-15), dobj(want-18, what-16), nsubj(want-18, you-17), ccomp(is-15, want-18), punct(have-3, .-19)] 	[nsubj(depends-2, It-1), root(ROOT-0, depends-2), mark(want-6, on-3), dobj(want-6, what-4), nsubj(want-6, you-5), advcl(depends-2, want-6), mark(do-8, to-7), xcomp(want-6, do-8), dep(want-14, next-9), punct(want-14, ,-10), cc(want-14, and-11), advmod(want-14, where-12), nsubj(want-14, you-13), ccomp(do-8, want-14), mark(do-16, to-15), xcomp(want-14, do-16), dobj(do-16, it-17), punct(depends-2, .-18)] 	20
[det(answer-2, The-1), nsubj(is-6, answer-2), case(questions-5, to-3), det(questions-5, both-4), nmod:to(answer-2, questions-5), root(ROOT-0, is-6), punct(is-6, :-7), dep(is-6, Yes-8), punct(is-6, .-9)] 	[det(answer-2, The-1), nsubj(yes-9, answer-2), case(both-4, to-3), nmod:to(answer-2, both-4), case(questions-7, of-5), nmod:poss(questions-7, your-6), nmod:of(both-4, questions-7), cop(yes-9, is-8), root(ROOT-0, yes-9), punct(yes-9, .-10)] 	21
[mark(give-2, To-1), root(ROOT-0, give-2), det(answer-5, this-3), det(answer-5, an-4), dobj(give-2, answer-5), punct(give-2, :-6)] 	[nsubj(answer-3, I-1), aux(answer-3, 'll-2), root(ROOT-0, answer-3), det(question-5, this-4), dobj(answer-3, question-5), punct(answer-3, :-6)] 	22
[advmod(know-12, Unfortunately-1), det(answer-3, the-2), nsubjpass(know-12, answer-3), case(question-6, to-4), nmod:poss(question-6, your-5), nmod:to(answer-3, question-6), auxpass(know-12, is-7), nsubjpass(know-12, we-8), advmod(know-12, simply-9), aux(know-12, do-10), neg(know-12, not-11), root(ROOT-0, know-12), punct(know-12, .-13)] 	[dep(know-6, Sorry-1), punct(know-6, ,-2), nsubj(know-6, I-3), aux(know-6, do-4), neg(know-6, n't-5), root(ROOT-0, know-6), det(answer-8, the-7), dobj(know-6, answer-8), case(question-11, to-9), nmod:poss(question-11, your-10), nmod:to(answer-8, question-11), punct(know-6, .-12)] 	23
[det(rule-2, The-1), nsubj(throw-7, rule-2), punct(throw-7, --3), advmod(throw-7, When-4), case(doubt-6, in-5), nmod:in(throw-7, doubt-6), root(ROOT-0, throw-7), dobj(throw-7, it-8), compound:prt(throw-7, out-9), punct(throw-7, !-10)] 	[nsubj(go-3, I-1), advmod(go-3, always-2), root(ROOT-0, go-3), case(rule-6, by-4), det(rule-6, the-5), nmod:by(go-3, rule-6), punct(rule-6, ``-7), advmod(doubt-10, When-8), case(doubt-10, in-9), nmod:in(rule-6, doubt-10), punct(go-3, ,-11), dep(go-3, throw-12), dobj(throw-12, it-13), compound:prt(throw-12, out-14), punct(go-3, !-15)] 	24
[nsubj(idea-6, This-1), cop(idea-6, is-2), neg(idea-6, not-3), det(idea-6, a-4), amod(idea-6, good-5), root(ROOT-0, idea-6), punct(idea-6, .-7)] 	[det(sound-2, This-1), root(ROOT-0, sound-2), case(idea-7, like-3), det(idea-7, a-4), advmod(bad-6, very-5), amod(idea-7, bad-6), nmod:like(sound-2, idea-7), punct(sound-2, .-8)] 	25
[discourse(idea-8, Yes-1), punct(idea-8, ,-2), nsubj(idea-8, it-3), cop(idea-8, 's-4), advmod(idea-8, probably-5), det(idea-8, a-6), amod(idea-8, good-7), root(ROOT-0, idea-8), mark(renew-10, to-9), acl(idea-8, renew-10), nmod:poss(passport-12, your-11), dobj(renew-10, passport-12), punct(idea-8, .-13)] 	[nsubj(idea-5, It-1), cop(idea-5, 's-2), det(idea-5, a-3), amod(idea-5, good-4), root(ROOT-0, idea-5), punct(idea-5, .-6)] 	26
[nsubj(depends-3, It-1), advmod(depends-3, probably-2), root(ROOT-0, depends-3), case(cut-6, on-4), det(cut-6, the-5), nmod:on(depends-3, cut-6), case(meat-8, of-7), nmod:of(cut-6, meat-8), punct(depends-3, .-9)] 	[nsubj(depends-2, It-1), root(ROOT-0, depends-2), case(meat-5, on-3), det(meat-5, the-4), nmod:on(depends-2, meat-5), cc(meat-5, and-6), advmod(cut-10, how-7), nsubjpass(cut-10, it-8), auxpass(cut-10, 's-9), conj:and(meat-5, cut-10), punct(depends-2, .-11)] 	27
[nsubj(idea-6, It-1), cop(idea-6, 's-2), neg(idea-6, not-3), det(idea-6, a-4), amod(idea-6, good-5), root(ROOT-0, idea-6), punct(idea-6, .-7)] 	[nsubj(question-5, It-1), cop(question-5, 's-2), det(question-5, a-3), amod(question-5, good-4), root(ROOT-0, question-5), punct(question-5, .-6)] 	28
[nsubj(much-4, It-1), cop(much-4, 's-2), advmod(much-4, pretty-3), root(ROOT-0, much-4), case(you-7, up-5), case(you-7, to-6), nmod:to(much-4, you-7), punct(much-4, .-8)] 	[nsubj(better-4, It-1), cop(better-4, 's-2), advmod(better-4, much-3), root(ROOT-0, better-4), mark(ask-6, to-5), xcomp(better-4, ask-6), punct(better-4, .-7)] 	29
[advmod(is-4, Yes-1), punct(is-4, ,-2), expl(is-4, there-3), root(ROOT-0, is-4), det(reason-6, a-5), nsubj(is-4, reason-6), case(it-8, for-7), nmod:for(reason-6, it-8), punct(is-4, .-9)] 	[discourse(means-8, Yes-1), punct(means-8, ,-2), nsubj(means-8, that-3), cop(means-8, is-4), advmod(means-8, exactly-5), dobj(means-8, what-6), nsubj(means-8, it-7), root(ROOT-0, means-8), punct(means-8, .-9)] 	30
[aux(tried-3, Have-1), nsubj(tried-3, you-2), root(ROOT-0, tried-3), xcomp(tried-3, asking-4), nmod:poss(employees-6, your-5), dobj(asking-4, employees-6), punct(tried-3, ?-7)] 	[aux(tried-3, Have-1), nsubj(tried-3, you-2), root(ROOT-0, tried-3), dobj(tried-3, asking-4), punct(tried-3, ?-5)] 	31
[nsubj(guys-2, You-1), nsubj(making-4, guys-2), aux(making-4, are-3), root(ROOT-0, making-4), det(WAAAAAY-7, this-5), det(WAAAAAY-7, all-6), nsubj(complicated-9, WAAAAAY-7), advmod(complicated-9, too-8), xcomp(making-4, complicated-9), punct(making-4, .-10)] 	[nsubj(making-3, You-1), aux(making-3, are-2), root(ROOT-0, making-3), nsubj(complicated-6, this-4), advmod(complicated-6, too-5), xcomp(making-3, complicated-6), punct(making-3, .-7)] 	32
[nsubj(have-4, You-1), aux(have-4, do-2), neg(have-4, n't-3), root(ROOT-0, have-4), mark(know-6, to-5), xcomp(have-4, know-6), punct(have-4, .-7)] 	[nsubj(have-2, You-1), root(ROOT-0, have-2), neg(need-4, no-3), dobj(have-2, need-4), mark(do-6, to-5), acl(need-4, do-6), dobj(do-6, anything-7), punct(have-2, .-8)] 	33
[expl(are-2, There-1), root(ROOT-0, are-2), nummod(things-4, two-3), nsubj(are-2, things-4), mark(consider-6, to-5), acl(things-4, consider-6), punct(are-2, :-7)] 	[expl(are-2, There-1), root(ROOT-0, are-2), nummod(causes-5, two-3), amod(causes-5, possible-4), nsubj(are-2, causes-5), case(this-7, for-6), nmod:for(causes-5, this-7), punct(are-2, :-8)] 	34
[root(ROOT-0, Work-1), case(it-3, into-2), nmod:into(Work-1, it-3), advmod(Work-1, slowly-4), punct(Work-1, .-5)] 	[nsubj(seems-2, It-1), root(ROOT-0, seems-2), mark(work-4, to-3), xcomp(seems-2, work-4), punct(seems-2, .-5)] 	35
[nsubj(buy-3, You-1), aux(buy-3, can-2), root(ROOT-0, buy-3), dobj(buy-3, it-4), case(amazon-6, on-5), nmod:on(buy-3, amazon-6), case($-8, for-7), nmod:for(buy-3, $-8), nummod($-8, 5-9), punct(buy-3, .-10)] 	[nsubj(buy-3, You-1), aux(buy-3, can-2), root(ROOT-0, buy-3), dobj(buy-3, it-4), case(ebay-6, on-5), nmod:on(buy-3, ebay-6), case($-8, for-7), nmod:for(buy-3, $-8), nummod($-8, 25-9), cc($-8, and-10), advmod($-8, up-11), punct(buy-3, .-12)] 	36
[det(coffee-2, The-1), nsubj(picks-4, coffee-2), advmod(picks-4, simply-3), root(ROOT-0, picks-4), compound:prt(picks-4, up-5), det(aluminum-7, the-6), dobj(picks-4, aluminum-7), case(pot-10, from-8), det(pot-10, the-9), nmod:from(picks-4, pot-10), punct(picks-4, ,-11), mark(acidic-16, as-12), det(coffee-14, the-13), nsubj(acidic-16, coffee-14), cop(acidic-16, is-15), advcl(picks-4, acidic-16), punct(picks-4, .-17)] 	[nummod(idea-2, One-1), nsubj(cleaning-4, idea-2), aux(cleaning-4, is-3), root(ROOT-0, cleaning-4), det(residue-7, the-5), compound(residue-7, coffee-6), dobj(cleaning-4, residue-7), case(pot-11, from-8), det(pot-11, the-9), compound(pot-11, coffee-10), nmod:from(cleaning-4, pot-11), punct(cleaning-4, .-12)] 	37
[expl(are-2, There-1), root(ROOT-0, are-2), nummod(ways-4, two-3), nsubj(are-2, ways-4), mark(start-6, to-5), acl(ways-4, start-6), dep(start-6, with-7), punct(with-7, :-8), dep(with-7, plunging-9), cc(plunging-9, and-10), conj:and(plunging-9, dripping-11), punct(are-2, .-12)] 	[expl(are-2, There-1), root(ROOT-0, are-2), nummod(ways-5, two-3), amod(ways-5, traditional-4), nsubj(are-2, ways-5), mark(bend-7, to-6), acl(ways-5, bend-7), dobj(bend-7, wood-8), punct(are-2, :-9)] 	38
[nsubj(have-3, You-1), aux(have-3, might-2), root(ROOT-0, have-3), mark(try-5, to-4), xcomp(have-3, try-5), det(variety-7, a-6), dobj(try-5, variety-7), mark(find-10, before-8), nsubj(find-10, you-9), advcl(try-5, find-10), dobj(find-10, one-11), nsubj(clicks-13, that-12), acl:relcl(one-11, clicks-13), case(him-15, with-14), nmod:with(clicks-13, him-15), punct(have-3, .-16)] 	[nmod:poss(advice-2, My-1), nsubj(be-4, advice-2), aux(be-4, would-3), root(ROOT-0, be-4), mark(try-6, to-5), xcomp(be-4, try-6), det(variety-8, a-7), dobj(try-6, variety-8), case(coffees-10, of-9), nmod:of(variety-8, coffees-10), dobj(afford-14, that-11), nsubj(afford-14, you-12), aux(afford-14, can-13), acl:relcl(variety-8, afford-14), cc(afford-14, and-15), conj:and(afford-14, find-16), nummod(you-18, one-17), dobj(find-16, you-18), dep(afford-14, like-19), punct(be-4, .-20)] 	39
[nsubj(idea-6, It-1), cop(idea-6, 's-2), neg(idea-6, not-3), det(idea-6, a-4), amod(idea-6, good-5), root(ROOT-0, idea-6), punct(idea-6, .-7)] 	[nsubj(idea-6, It-1), cop(idea-6, is-2), neg(idea-6, not-3), det(idea-6, a-4), amod(idea-6, good-5), root(ROOT-0, idea-6), punct(idea-6, .-7)] 	40
[nsubj(have-3, You-1), advmod(have-3, just-2), root(ROOT-0, have-3), mark(base-5, to-4), xcomp(have-3, base-5), nmod:poss(answer-7, your-6), dobj(base-5, answer-7), mark(know-12, on-8), dobj(know-12, what-9), nsubj(know-12, you-10), aux(know-12, do-11), advcl(base-5, know-12), punct(know-12, ,-13), nsubj(is-15, which-14), ccomp(know-12, is-15), dobj(want-18, what-16), nsubj(want-18, you-17), ccomp(is-15, want-18), punct(have-3, .-19)] 	[nsubj(can-2, They-1), root(ROOT-0, can-2), punct(can-2, ,-3), cc(can-2, but-4), det(way-6, the-5), conj:but(can-2, way-6), mark(do-8, to-7), acl(way-6, do-8), nsubj(depends-10, it-9), ccomp(do-8, depends-10), mark(have-14, on-11), dobj(have-14, what-12), nsubj(have-14, you-13), advcl(depends-10, have-14), xcomp(have-14, available-15), punct(can-2, .-16)] 	41
[advmod(mention-5, Yes-1), punct(mention-5, ,-2), nsubj(mention-5, you-3), aux(mention-5, should-4), root(ROOT-0, mention-5), nmod:poss(experience-7, your-6), dobj(mention-5, experience-7), punct(mention-5, .-8)] 	[advmod(mention-5, Yes-1), punct(mention-5, ,-2), nsubj(mention-5, you-3), aux(mention-5, should-4), root(ROOT-0, mention-5), dobj(mention-5, it-6), punct(mention-5, .-7)] 	42
[mark(understand-4, From-1), dobj(understand-4, what-2), nsubj(understand-4, I-3), root(ROOT-0, understand-4), nsubj(is-6, this-5), ccomp(understand-4, is-6), dobj(do-10, what-7), nsubj(do-10, you-8), aux(do-10, can-9), ccomp(is-6, do-10), punct(understand-4, :-11)] 	[aux(do-3, Can-1), nsubj(do-3, you-2), root(ROOT-0, do-3), dobj(do-3, this-4), punct(do-3, ?-5)] 	43
[root(ROOT-0, Take-1), det(look-3, a-2), dobj(Take-1, look-3), case(these-5, at-4), nmod:at(Take-1, these-5), punct(Take-1, :-6)] 	[root(ROOT-0, Take-1), det(look-3, a-2), dobj(Take-1, look-3), case(this-5, at-4), nmod:at(Take-1, this-5), punct(Take-1, :-6)] 	44
[nsubj(say-3, I-1), aux(say-3, 'd-2), root(ROOT-0, say-3), nsubj(depends-6, it-4), advmod(depends-6, primarily-5), ccomp(say-3, depends-6), case(things-9, on-7), nummod(things-9, two-8), nmod:on(depends-6, things-9), punct(say-3, :-10)] 	[nsubj(say-3, I-1), aux(say-3, 'd-2), root(ROOT-0, say-3), nsubj(depends-5, it-4), ccomp(say-3, depends-5), case(outcome-9, on-6), det(outcome-9, the-7), amod(outcome-9, ultimate-8), nmod:on(depends-5, outcome-9), nsubj(want-11, you-10), acl:relcl(outcome-9, want-11), punct(say-3, ?-12)] 	45
[root(ROOT-0, Some-1), mark(do-6, of-2), dobj(do-6, what-3), nsubj(do-6, you-4), aux(do-6, can-5), acl(Some-1, do-6), punct(Some-1, :-7)] 	[neg(do-5, Not-1), advmod(do-5, much-2), nsubj(do-5, you-3), aux(do-5, can-4), root(ROOT-0, do-5), advmod(do-5, besides-6), punct(do-5, :-7)] 	46
[nsubj(idea-6, This-1), cop(idea-6, is-2), neg(idea-6, not-3), det(idea-6, a-4), amod(idea-6, good-5), root(ROOT-0, idea-6), punct(idea-6, .-7)] 	[cc(idea-7, But-1), nsubj(idea-7, it-2), cop(idea-7, is-3), neg(idea-7, not-4), det(idea-7, a-5), amod(idea-7, good-6), root(ROOT-0, idea-7), punct(idea-7, .-8)] 	47
[det(answers-2, The-1), nsubj(good-7, answers-2), advmod(far-4, so-3), advmod(good-7, far-4), cop(good-7, are-5), advmod(good-7, already-6), root(ROOT-0, good-7), punct(good-7, ,-8), cc(good-7, but-9), nsubj(like-12, I-10), aux(like-12, 'd-11), conj:but(good-7, like-12), mark(add-14, to-13), xcomp(like-12, add-14), det(map-16, a-15), dobj(add-14, map-16), case(Switzerland-18, for-17), nmod:for(map-16, Switzerland-18), punct(good-7, :-19)] 	[nsubj(have-2, You-1), root(ROOT-0, have-2), det(lot-4, a-3), dobj(have-2, lot-4), case(answers-6, of-5), nmod:of(lot-4, answers-6), advmod(lot-4, already-7), punct(have-2, ,-8), cc(have-2, but-9), nsubj(like-12, I-10), aux(like-12, 'd-11), conj:but(have-2, like-12), mark(add-14, to-13), xcomp(like-12, add-14), dobj(add-14, Curries-15), case(solutions-18, as-16), det(solutions-18, another-17), nmod:as(add-14, solutions-18), punct(have-2, .-19)] 	48
[nsubj(situation-6, I-1), cop(situation-6, was-2), case(situation-6, in-3), det(situation-6, a-4), amod(situation-6, similar-5), root(ROOT-0, situation-6), punct(situation-6, .-7)] 	[nsubj(had-2, I-1), root(ROOT-0, had-2), det(situation-5, a-3), amod(situation-5, similar-4), dobj(had-2, situation-5), punct(had-2, .-6)] 	49
[nsubj(had-3, I-1), aux(had-3, 've-2), root(ROOT-0, had-3), det(problem-6, this-4), amod(problem-6, same-5), dobj(had-3, problem-6), punct(had-3, .-7)] 	[nsubj(had-2, I-1), root(ROOT-0, had-2), det(problem-5, this-3), amod(problem-5, same-4), dobj(had-2, problem-5), punct(had-2, .-6)] 	50
[expl(is-2, There-1), root(ROOT-0, is-2), neg(maximum-4, no-3), nsubj(is-2, maximum-4), punct(is-2, .-5)] 	[expl(is-2, There-1), root(ROOT-0, is-2), neg(period-5, no-3), compound(period-5, quarantine-4), nsubj(is-2, period-5), punct(is-2, .-6)] 	51
[nsubj(sure-4, I-1), cop(sure-4, am-2), neg(sure-4, not-3), root(ROOT-0, sure-4), nsubj(site-9, this-5), cop(site-9, is-6), det(site-9, the-7), amod(site-9, right-8), ccomp(sure-4, site-9), case(question-12, for-10), det(question-12, the-11), nmod:for(site-9, question-12), punct(sure-4, .-13)] 	[nsubj(sure-4, I-1), cop(sure-4, am-2), neg(sure-4, not-3), root(ROOT-0, sure-4), det(question-6, this-5), nsubj(made-9, question-6), aux(made-9, would-7), aux(made-9, have-8), ccomp(sure-4, made-9), amod(sense-11, much-10), dobj(made-9, sense-11), case(Romans-14, to-12), det(Romans-14, the-13), nmod:to(made-9, Romans-14), nmod:npmod(Romans-14, themselves-15), punct(sure-4, .-16)] 	52
[nsubj(depends-2, It-1), root(ROOT-0, depends-2), mark(want-6, on-3), dobj(want-6, what-4), nsubj(want-6, you-5), advcl(depends-2, want-6), mark(do-8, to-7), xcomp(want-6, do-8), dep(want-14, next-9), punct(want-14, ,-10), cc(want-14, and-11), advmod(want-14, where-12), nsubj(want-14, you-13), ccomp(do-8, want-14), mark(do-16, to-15), xcomp(want-14, do-16), dobj(do-16, it-17), punct(depends-2, .-18)] 	[case(words-3, In-1), amod(words-3, other-2), nmod:in(depends-6, words-3), punct(depends-6, ,-4), nsubj(depends-6, it-5), root(ROOT-0, depends-6), mark(go-10, on-7), advmod(go-10, where-8), nsubj(go-10, you-9), advcl(depends-6, go-10), punct(go-10, ,-11), advmod(do-14, when-12), nsubj(do-14, you-13), advcl(go-10, do-14), advmod(do-14, there-15), cc(there-15, and-16), conj:and(there-15, how-17), punct(depends-6, .-18)] 	53
[nsubj(need-2, You-1), root(ROOT-0, need-2), mark(read-4, to-3), xcomp(need-2, read-4), det(lot-6, a-5), dobj(read-4, lot-6), mark(know-8, to-7), xcomp(read-4, know-8), dobj(like-11, what-9), nsubj(like-11, you-10), ccomp(know-8, like-11), cc(like-11, and-12), dobj(do-15, what-13), nsubj(do-15, you-14), conj:and(like-11, do-15), neg(do-15, n't-16), punct(need-2, .-17)] 	[advmod(create-5, Yes-1), punct(create-5, ,-2), nsubj(create-5, you-3), aux(create-5, should-4), root(ROOT-0, create-5), det(site-8, a-6), compound(site-8, portfolio-7), dobj(create-5, site-8), case(showcase-10, to-9), nmod:to(site-8, showcase-10), dobj(do-14, what-11), nsubj(do-14, you-12), aux(do-14, can-13), acl:relcl(showcase-10, do-14), cc(do-14, and-15), dobj(done-19, what-16), nsubj(done-19, you-17), aux(done-19, 've-18), conj:and(do-14, done-19), punct(create-5, .-20)] 	54
[nsubj(disclosing-4, You-1), aux(disclosing-4, are-2), neg(disclosing-4, not-3), root(ROOT-0, disclosing-4), amod(info-6, key-5), dobj(disclosing-4, info-6), punct(disclosing-4, .-7)] 	[dobj(not-4, No-1), nsubj(not-4, you-2), cop(not-4, are-3), root(ROOT-0, not-4), punct(not-4, .-5)] 	55
[nsubj(depends-2, It-1), root(ROOT-0, depends-2), mark(want-6, on-3), dobj(want-6, what-4), nsubj(want-6, you-5), advcl(depends-2, want-6), mark(do-8, to-7), xcomp(want-6, do-8), dep(want-14, next-9), punct(want-14, ,-10), cc(want-14, and-11), advmod(want-14, where-12), nsubj(want-14, you-13), ccomp(do-8, want-14), mark(do-16, to-15), xcomp(want-14, do-16), dobj(do-16, it-17), punct(depends-2, .-18)] 	[nsubj(guess-2, I-1), root(ROOT-0, guess-2), nsubj(depends-4, it-3), ccomp(guess-2, depends-4), mark(going-9, on-5), dobj(going-9, what-6), nsubj(going-9, you-7), aux(going-9, 're-8), advcl(depends-4, going-9), mark(do-11, to-10), xcomp(going-9, do-11), punct(guess-2, .-12)] 	56
[nsubj(have-3, You-1), advmod(have-3, just-2), root(ROOT-0, have-3), mark(base-5, to-4), xcomp(have-3, base-5), nmod:poss(answer-7, your-6), dobj(base-5, answer-7), mark(know-12, on-8), dobj(know-12, what-9), nsubj(know-12, you-10), aux(know-12, do-11), advcl(base-5, know-12), punct(know-12, ,-13), nsubj(is-15, which-14), ccomp(know-12, is-15), dobj(want-18, what-16), nsubj(want-18, you-17), ccomp(is-15, want-18), punct(have-3, .-19)] 	[nsubj(job-4, It-1), cop(job-4, is-2), nmod:poss(job-4, his-3), root(ROOT-0, job-4), mark(see-6, to-5), acl(job-4, see-6), mark(have-9, that-7), nsubj(have-9, you-8), ccomp(see-6, have-9), dobj(need-12, what-10), nsubj(need-12, you-11), ccomp(have-9, need-12), mark(do-14, to-13), xcomp(need-12, do-14), nmod:poss(job-16, your-15), dobj(do-14, job-16), punct(job-4, .-17)] 	57
[nsubj(depends-2, It-1), root(ROOT-0, depends-2), mark(want-6, on-3), dobj(want-6, what-4), nsubj(want-6, you-5), advcl(depends-2, want-6), mark(do-8, to-7), xcomp(want-6, do-8), dep(want-14, next-9), punct(want-14, ,-10), cc(want-14, and-11), advmod(want-14, where-12), nsubj(want-14, you-13), ccomp(do-8, want-14), mark(do-16, to-15), xcomp(want-14, do-16), dobj(do-16, it-17), punct(depends-2, .-18)] 	[nsubj(depends-2, It-1), root(ROOT-0, depends-2), mark(want-6, on-3), dobj(want-6, what-4), nsubj(want-6, you-5), advcl(depends-2, want-6), mark(achieve-8, to-7), xcomp(want-6, achieve-8), punct(depends-2, .-9)] 	58
[nsubj(problem-4, This-1), cop(problem-4, is-2), det(problem-4, a-3), root(ROOT-0, problem-4), dobj(has-8, that-5), det(professor-7, the-6), nsubj(has-8, professor-7), acl:relcl(problem-4, has-8), mark(deal-10, to-9), xcomp(has-8, deal-10), nmod(deal-10, with-11), punct(problem-4, .-12)] 	[nsubj(problem-5, This-1), cop(problem-5, is-2), det(problem-5, a-3), amod(problem-5, big-4), root(ROOT-0, problem-5), punct(problem-5, .-6)] 	59
[nsubj(request-6, This-1), cop(request-6, is-2), det(request-6, a-3), advmod(unusual-5, very-4), amod(request-6, unusual-5), root(ROOT-0, request-6), punct(request-6, .-7)] 	[nsubj(sounds-2, This-1), root(ROOT-0, sounds-2), det(bit-4, a-3), nmod:npmod(unusual-5, bit-4), xcomp(sounds-2, unusual-5), punct(sounds-2, .-6)] 	60
[nsubj(depends-4, It-1), advmod(much-3, very-2), advmod(depends-4, much-3), root(ROOT-0, depends-4), case(grant-7, on-5), det(grant-7, the-6), nmod:on(depends-4, grant-7), case(question-9, in-8), nmod:in(depends-4, question-9), punct(depends-4, .-10)] 	[nsubj(think-2, I-1), root(ROOT-0, think-2), nsubj(depends-4, it-3), ccomp(think-2, depends-4), advmod(much-6, very-5), dobj(depends-4, much-6), case(area-9, on-7), det(area-9, the-8), nmod:on(much-6, area-9), punct(think-2, .-10)] 	61
[nsubj(have-2, I-1), root(ROOT-0, have-2), det(thing-5, the-3), amod(thing-5, same-4), dobj(have-2, thing-5), punct(have-2, .-6)] 	[nsubj(had-3, I-1), aux(had-3, have-2), root(ROOT-0, had-3), det(problem-6, the-4), amod(problem-6, same-5), dobj(had-3, problem-6), punct(had-3, .-7)] 	62
[dep(affect-5, No-1), nsubj(affect-5, it-2), aux(affect-5, does-3), neg(affect-5, not-4), root(ROOT-0, affect-5), nmod:poss(ratings-7, your-6), dobj(affect-5, ratings-7), punct(affect-5, .-8)] 	[dobj(not-4, No-1), nsubj(not-4, it-2), cop(not-4, is-3), root(ROOT-0, not-4), punct(not-4, .-5)] 	63
[nmod:poss(answer-2, My-1), root(ROOT-0, answer-2), case(question-5, to-3), nmod:poss(question-5, your-4), nmod:to(answer-2, question-5), dep(answer-2, is-6), punct(is-6, ``-7), root(``-7, Probably-8), dep(Probably-8, Not-9), punct(Not-9, ''-10), punct(Probably-8, .-11)] 	[nsubj(think-2, I-1), root(ROOT-0, think-2), mark(is-10, that-3), det(answer-6, the-4), amod(answer-6, short-5), nsubj(is-10, answer-6), case(question-9, to-7), nmod:poss(question-9, your-8), nmod:to(answer-6, question-9), ccomp(think-2, is-10), punct(is-10, :-11), dep(is-10, No-12), punct(think-2, .-13)] 	64
[nsubj(think-4, I-1), aux(think-4, do-2), neg(think-4, n't-3), root(ROOT-0, think-4), nsubj(makes-6, it-5), ccomp(think-4, makes-6), det(difference-9, any-7), amod(difference-9, tremendous-8), dobj(makes-6, difference-9), punct(think-4, .-10)] 	[nsubj(think-4, I-1), aux(think-4, do-2), neg(think-4, n't-3), root(ROOT-0, think-4), nsubj(makes-6, it-5), ccomp(think-4, makes-6), amod(difference-8, much-7), dobj(makes-6, difference-8), punct(think-4, .-9)] 	65
[nsubj(depends-2, It-1), root(ROOT-0, depends-2), mark(are-6, on-3), dobj(are-6, what-4), nsubj(are-6, they-5), advcl(depends-2, are-6), punct(depends-2, .-7)] 	[nsubj(depends-2, It-1), root(ROOT-0, depends-2), mark(evaluating-7, on-3), dobj(evaluating-7, what-4), nsubj(evaluating-7, they-5), aux(evaluating-7, are-6), advcl(depends-2, evaluating-7), punct(evaluating-7, ,-8), cc(evaluating-7, and-9), conj:and(evaluating-7, how-10), punct(depends-2, .-11)] 	66
[expl('s-2, There-1), root(ROOT-0, 's-2), neg('s-2, not-3), det(lot-5, a-4), nsubj('s-2, lot-5), nsubj(do-8, you-6), aux(do-8, can-7), acl:relcl(lot-5, do-8), case(that-10, about-9), nmod:about(do-8, that-10), punct('s-2, .-11)] 	[expl('s-2, There-1), root(ROOT-0, 's-2), neg('s-2, not-3), det(much-5, that-4), nsubj('s-2, much-5), mark(do-9, that-6), nsubj(do-9, you-7), aux(do-9, can-8), ccomp(much-5, do-9), case(starter-13, with-10), det(starter-13, a-11), amod(starter-13, sourdough-12), nmod:with(do-9, starter-13), punct('s-2, .-14)] 	67
[nsubj(answered-2, You-1), root(ROOT-0, answered-2), nmod:poss(question-5, your-3), amod(question-5, own-4), dobj(answered-2, question-5), punct(answered-2, .-6)] 	[nsubj(answered-3, You-1), aux(answered-3, have-2), root(ROOT-0, answered-3), nmod:poss(question-6, your-4), amod(question-6, own-5), dobj(answered-3, question-6), punct(answered-3, .-7)] 	68
[nsubj(have-3, You-1), advmod(have-3, just-2), root(ROOT-0, have-3), mark(base-5, to-4), xcomp(have-3, base-5), nmod:poss(answer-7, your-6), dobj(base-5, answer-7), mark(know-12, on-8), dobj(know-12, what-9), nsubj(know-12, you-10), aux(know-12, do-11), advcl(base-5, know-12), punct(know-12, ,-13), nsubj(is-15, which-14), ccomp(know-12, is-15), dobj(want-18, what-16), nsubj(want-18, you-17), ccomp(is-15, want-18), punct(have-3, .-19)] 	[compound(answer-2, Th-1), nsubj(is-6, answer-2), case(problem-5, to-3), compound(problem-5, you-4), nmod:to(answer-2, problem-5), root(ROOT-0, is-6), mark(know-11, that-7), nsubj(know-11, you-8), nsubj(know-11, dont-9), advmod(know-11, actually-10), ccomp(is-6, know-11), dobj(getting-15, what-12), nsubj(getting-15, you-13), aux(getting-15, 're-14), ccomp(know-11, getting-15), compound:prt(getting-15, in-16), punct(is-6, .-17)] 	69
[nsubj(idea-6, This-1), cop(idea-6, is-2), neg(idea-6, not-3), det(idea-6, a-4), amod(idea-6, good-5), root(ROOT-0, idea-6), punct(idea-6, .-7)] 	[nsubj(idea-7, This-1), cop(idea-7, is-2), advmod(idea-7, probably-3), neg(idea-7, not-4), det(idea-7, a-5), amod(idea-7, good-6), root(ROOT-0, idea-7), cc(idea-7, but-8), nsubj(suggest-11, I-9), aux(suggest-11, will-10), conj:but(idea-7, suggest-11), nsubj(anyhow-13, it-12), ccomp(suggest-11, anyhow-13), punct(idea-7, .-14)] 	70
[det(thing-3, The-1), amod(thing-3, best-2), nsubj(is-7, thing-3), nsubj(do-6, you-4), aux(do-6, can-5), acl:relcl(thing-3, do-6), root(ROOT-0, is-7), mark(know-9, to-8), xcomp(is-7, know-9), nmod:poss(stuff-11, your-10), dobj(know-9, stuff-11), punct(is-7, .-12)] 	[nmod:poss(recommendation-2, My-1), nsubj(say-6, recommendation-2), aux(say-6, is-3), neg(say-6, not-4), mark(say-6, to-5), root(ROOT-0, say-6), dobj(say-6, anything-7), punct(say-6, ,-8), cc(say-6, and-9), conj:and(say-6, do-10), det(best-12, the-11), dobj(do-10, best-12), nsubj(can-14, you-13), acl:relcl(best-12, can-14), punct(say-6, .-15)] 	71
[nsubj(say-3, I-1), aux(say-3, 'd-2), root(ROOT-0, say-3), nsubj(depends-6, it-4), advmod(depends-6, primarily-5), ccomp(say-3, depends-6), case(things-9, on-7), nummod(things-9, two-8), nmod:on(depends-6, things-9), punct(say-3, :-10)] 	[nsubj(say-3, I-1), aux(say-3, 'd-2), root(ROOT-0, say-3), nsubj(depends-5, it-4), ccomp(say-3, depends-5), det(conditions-7, what-6), dobj(have-9, conditions-7), nsubj(have-9, you-8), ccomp(depends-5, have-9), punct(say-3, .-10)] 	72
[nsubj(have-4, You-1), aux(have-4, do-2), neg(have-4, n't-3), root(ROOT-0, have-4), mark(know-6, to-5), xcomp(have-4, know-6), punct(have-4, .-7)] 	[nsubj(have-4, You-1), aux(have-4, do-2), neg(have-4, n't-3), root(ROOT-0, have-4), mark(do-6, to-5), xcomp(have-4, do-6), dobj(do-6, anything-7), mark(season-9, to-8), advcl(do-6, season-9), dobj(season-9, it-10), punct(have-4, .-11)] 	73
[nsubj(have-2, I-1), root(ROOT-0, have-2), det(thing-5, the-3), amod(thing-5, same-4), dobj(have-2, thing-5), punct(have-2, .-6)] 	[nsubj(have-2, I-1), root(ROOT-0, have-2), det(situation-5, the-3), amod(situation-5, same-4), dobj(have-2, situation-5), cc(have-2, and-6), aux(traveled-8, have-7), conj:and(have-2, traveled-8), advmod(traveled-8, extensively-9), punct(have-2, .-10)] 	74
[nsubj(idea-6, It-1), cop(idea-6, 's-2), neg(idea-6, not-3), det(idea-6, a-4), amod(idea-6, good-5), root(ROOT-0, idea-6), punct(idea-6, .-7)] 	[nsubj(think-4, I-1), aux(think-4, do-2), neg(think-4, not-3), root(ROOT-0, think-4), nsubj(idea-9, it-5), cop(idea-9, 's-6), det(idea-9, a-7), amod(idea-9, good-8), ccomp(think-4, idea-9), punct(think-4, .-10)] 	75
[nsubj(path-6, You-1), cop(path-6, are-2), case(path-6, on-3), det(path-6, the-4), amod(path-6, right-5), root(ROOT-0, path-6), punct(path-6, .-7)] 	[nsubj(right-3, You-1), cop(right-3, are-2), root(ROOT-0, right-3), case(mark-6, on-4), det(mark-6, the-5), nmod:on(right-3, mark-6), punct(right-3, .-7)] 	76
[nsubj(answer-4, This-1), aux(answer-4, does-2), neg(answer-4, n't-3), root(ROOT-0, answer-4), nmod:poss(question-6, your-5), dobj(answer-4, question-6), punct(answer-4, ,-7), cc(answer-4, but-8), punct(answer-4, :-9)] 	[nsubj(answer-5, This-1), cop(answer-5, is-2), det(answer-5, a-3), compound(answer-5, part-4), root(ROOT-0, answer-5), case(question-8, to-6), nmod:poss(question-8, your-7), nmod:to(answer-5, question-8)] 	77
[advmod(proceed-4, How-1), aux(proceed-4, should-2), nsubj(proceed-4, I-3), root(ROOT-0, proceed-4), advmod(this-6, about-5), dobj(proceed-4, this-6), punct(proceed-4, ?-7)] 	[root(ROOT-0, So-1), advmod(do-5, how-2), aux(do-5, should-3), nsubj(do-5, I-4), ccomp(So-1, do-5), dobj(do-5, this-6), punct(So-1, ?-7)] 	78
[aux(answer-4, Does-1), det(page-3, this-2), nsubj(answer-4, page-3), root(ROOT-0, answer-4), nmod:poss(question-6, your-5), dobj(answer-4, question-6), punct(answer-4, ?-7)] 	[aux(answer-3, Does-1), nsubj(answer-3, this-2), root(ROOT-0, answer-3), nmod:poss(questions-5, your-4), dobj(answer-3, questions-5), punct(answer-3, ?-6)] 	79
[nsubj(use-3, You-1), aux(use-3, can-2), root(ROOT-0, use-3), dobj(use-3, it-4), punct(use-3, ,-5), advmod(use-3, too-6), punct(use-3, .-7)] 	[nsubj(use-4, You-1), aux(use-4, can-2), advmod(use-4, still-3), root(ROOT-0, use-4), dobj(use-4, it-5), case(practice-7, for-6), nmod:for(use-4, practice-7), punct(use-4, .-8)] 	80
[nsubj(depends-3, It-1), advmod(depends-3, really-2), root(ROOT-0, depends-3), advmod(depends-3, on-4), advmod(documents-8, how-5), det(employer-7, the-6), nsubj(documents-8, employer-7), dep(on-4, documents-8), dobj(documents-8, it-9), punct(depends-3, .-10)] 	[nsubj(depends-2, It-1), root(ROOT-0, depends-2), advmod(stating-6, how-3), nsubj(stating-6, you-4), aux(stating-6, 're-5), ccomp(depends-2, stating-6), dobj(stating-6, it-7), punct(depends-2, .-8)] 	81
[nsubj(had-3, I-1), aux(had-3, 've-2), root(ROOT-0, had-3), det(problem-6, this-4), amod(problem-6, same-5), dobj(had-3, problem-6), punct(had-3, .-7)] 	[nsubj(had-3, I-1), aux(had-3, 've-2), root(ROOT-0, had-3), det(problem-5, this-4), dobj(had-3, problem-5), mark(working-7, while-6), advcl(had-3, working-7), case(pubs-10, in-8), det(pubs-10, a-9), nmod:in(working-7, pubs-10), punct(had-3, .-11)] 	82
[nsubj(need-2, You-1), root(ROOT-0, need-2), mark(read-4, to-3), xcomp(need-2, read-4), det(lot-6, a-5), dobj(read-4, lot-6), mark(know-8, to-7), xcomp(read-4, know-8), dobj(like-11, what-9), nsubj(like-11, you-10), ccomp(know-8, like-11), cc(like-11, and-12), dobj(do-15, what-13), nsubj(do-15, you-14), conj:and(like-11, do-15), neg(do-15, n't-16), punct(need-2, .-17)] 	[nsubj(depends-2, It-1), root(ROOT-0, depends-2), mark(want-6, on-3), dobj(want-6, what-4), nsubj(want-6, you-5), advcl(depends-2, want-6), mark(do-8, to-7), xcomp(want-6, do-8), dep(want-14, next-9), punct(want-14, ,-10), cc(want-14, and-11), advmod(want-14, where-12), nsubj(want-14, you-13), ccomp(do-8, want-14), mark(do-16, to-15), xcomp(want-14, do-16), dobj(do-16, it-17), punct(depends-2, .-18)] 	[nsubj(depends-2, It-1), root(ROOT-0, depends-2), mark(want-6, on-3), dobj(want-6, what-4), nsubj(want-6, you-5), advcl(depends-2, want-6), mark(able-9, to-7), cop(able-9, be-8), xcomp(want-6, able-9), mark(do-11, to-10), xcomp(able-9, do-11), punct(depends-2, .-12)] 	84
[discourse(have-4, Yes-1), punct(have-4, ,-2), nsubj(have-4, you-3), root(ROOT-0, have-4), mark(file-6, to-5), xcomp(have-4, file-6), det(return-9, a-7), compound(return-9, tax-8), dobj(file-6, return-9), case(Canada-11, in-10), nmod:in(return-9, Canada-11), punct(have-4, .-12)] 	[nsubjpass(required-4, You-1), auxpass(required-4, are-2), neg(required-4, not-3), root(ROOT-0, required-4), mark(file-6, to-5), xcomp(required-4, file-6), det(return-9, a-7), compound(return-9, tax-8), dobj(file-6, return-9), case(Canada-11, in-10), nmod:in(return-9, Canada-11), mark(have-14, if-12), nsubj(have-14, you-13), advcl(file-6, have-14), neg(income-17, no-15), amod(income-17, taxable-16), dobj(have-14, income-17), punct(required-4, .-18)] 	85
[nsubj(see-4, I-1), aux(see-4, do-2), neg(see-4, n't-3), root(ROOT-0, see-4), advmod(problem-10, why-5), expl(problem-10, there-6), aux(problem-10, should-7), cop(problem-10, be-8), det(problem-10, any-9), ccomp(see-4, problem-10), case(this-12, with-11), nmod:with(problem-10, this-12), amod(this-12, whatsoever-13), punct(see-4, .-14)] 	[nsubj(see-4, I-1), aux(see-4, do-2), neg(see-4, n't-3), root(ROOT-0, see-4), advmod(problem-10, why-5), nsubj(problem-10, that-6), aux(problem-10, should-7), cop(problem-10, be-8), det(problem-10, a-9), advcl(see-4, problem-10), punct(see-4, .-11)] 	86
[root(ROOT-0, Hope-1), nsubj(is-3, this-2), acl:relcl(Hope-1, is-3), dobj(looking-7, what-4), nsubj(looking-7, you-5), aux(looking-7, are-6), ccomp(is-3, looking-7), nmod(looking-7, for-8), punct(Hope-1, .-9)] 	[mark(looking-5, If-1), dobj(looking-5, what-2), nsubj(looking-5, you-3), aux(looking-5, are-4), advcl(get-12, looking-5), mark(higher-9, for-6), cop(higher-9, is-7), advmod(higher-9, much-8), advcl(looking-5, higher-9), punct(get-12, ,-10), nsubj(get-12, they-11), root(ROOT-0, get-12), det(picture-14, the-13), dobj(get-12, picture-14), punct(get-12, .-15)] 	87
[det(thing-3, The-1), amod(thing-3, best-2), nsubj(is-7, thing-3), nsubj(do-6, you-4), aux(do-6, can-5), acl:relcl(thing-3, do-6), root(ROOT-0, is-7), mark(know-9, to-8), xcomp(is-7, know-9), nmod:poss(stuff-11, your-10), dobj(know-9, stuff-11), punct(is-7, .-12)] 	[det(thing-3, The-1), amod(thing-3, best-2), nsubj(is-6, thing-3), mark(do-5, to-4), acl(thing-3, do-5), root(ROOT-0, is-6), mark(overcome-8, to-7), xcomp(is-6, overcome-8), det(fussiness-10, the-9), dobj(overcome-8, fussiness-10), punct(is-6, .-11)] 	88
[nsubj(depends-2, It-1), root(ROOT-0, depends-2), conj:and(depends-2, depends-2'), case(dish-5, on-3), det(dish-5, the-4), nmod:on(depends-2, dish-5), cc(depends-2, and-6), advmod(amenable-8, how-7), dep(stage-13, amenable-8), nsubj(stage-13, it-9), cop(stage-13, is-10), case(stage-13, at-11), det(stage-13, the-12), nmod:at(depends-2', stage-13), nsubj(make-15, you-14), ccomp(stage-13, make-15), det(mistake-17, the-16), dobj(make-15, mistake-17), punct(depends-2, .-18)] 	[nsubj(depends-2, It-1), root(ROOT-0, depends-2), case(sauce-5, on-3), det(sauce-5, the-4), nmod:on(depends-2, sauce-5), cc(sauce-5, and-6), det(result-8, the-7), conj:and(sauce-5, result-8), nsubj(want-10, you-9), acl:relcl(result-8, want-10), punct(depends-2, .-11)] 	89
[nsubj(have-3, You-1), advmod(have-3, just-2), root(ROOT-0, have-3), mark(base-5, to-4), xcomp(have-3, base-5), nmod:poss(answer-7, your-6), dobj(base-5, answer-7), mark(know-12, on-8), dobj(know-12, what-9), nsubj(know-12, you-10), aux(know-12, do-11), advcl(base-5, know-12), punct(know-12, ,-13), nsubj(is-15, which-14), ccomp(know-12, is-15), dobj(want-18, what-16), nsubj(want-18, you-17), ccomp(is-15, want-18), punct(have-3, .-19)] 	[nsubj(have-2, You-1), root(ROOT-0, have-2), mark(do-4, to-3), xcomp(have-2, do-4), nsubj(right-7, what-5), cop(right-7, is-6), ccomp(do-4, right-7), case(you-9, for-8), nmod:for(right-7, you-9), punct(have-2, .-10)] 	90
[nsubj(have-5, You-1), advmod(have-5, PROBABLY-2), aux(have-5, do-3), neg(have-5, n't-4), root(ROOT-0, have-5), det(chance-7, any-6), dobj(have-5, chance-7), case(moment-10, at-8), det(moment-10, the-9), nmod:at(have-5, moment-10), punct(have-5, .-11)] 	[root(ROOT-0, Saying-1), punct(thanks-3, ``-2), dobj(Saying-1, thanks-3), punct(thanks-3, ,-4), nsubj(have-8, I-5), aux(have-8, do-6), neg(have-8, n't-7), acl:relcl(thanks-3, have-8), det(questions-10, any-9), dobj(have-8, questions-10), case(moment-13, at-11), det(moment-13, the-12), nmod:at(have-8, moment-13), punct(Saying-1, .-14), punct(Saying-1, ''-15)] 	91
[nsubj(matter-5, It-1), advmod(matter-5, really-2), aux(matter-5, does-3), neg(matter-5, n't-4), root(ROOT-0, matter-5), punct(matter-5, .-6)] 	[nsubj(matter-4, It-1), aux(matter-4, does-2), neg(matter-4, n't-3), root(ROOT-0, matter-4), mark(far-9, unless-5), nsubj(far-9, it-6), cop(far-9, is-7), advmod(far-9, really-8), advcl(matter-4, far-9), advmod(far-9, off-10), punct(matter-4, .-11)] 	92
[nsubj(need-4, You-1), aux(need-4, do-2), neg(need-4, n't-3), root(ROOT-0, need-4), mark(know-6, to-5), xcomp(need-4, know-6), dobj(know-6, everything-7), punct(need-4, .-8)] 	[nsubj(have-4, You-1), aux(have-4, do-2), neg(have-4, n't-3), root(ROOT-0, have-4), mark(know-6, to-5), xcomp(have-4, know-6), punct(have-4, .-7)] 	93
[nsubj(think-2, I-1), root(ROOT-0, think-2), nsubj(looking-5, you-3), aux(looking-5, 're-4), ccomp(think-2, looking-5), case(Mikey-7, for-6), nmod:for(looking-5, Mikey-7), punct(1992-9, -LRB--8), appos(Mikey-7, 1992-9), punct(1992-9, -RRB--10), punct(think-2, .-11)] 	[nsubj(think-2, I-1), root(ROOT-0, think-2), nsubj(looking-5, you-3), aux(looking-5, 're-4), ccomp(think-2, looking-5), case(movie-8, for-6), det(movie-8, the-7), nmod:for(looking-5, movie-8)] 	94
[nsubj(makes-2, It-1), root(ROOT-0, makes-2), advmod(difference-5, absolutely-3), compound(difference-5, NO-4), dobj(makes-2, difference-5), punct(makes-2, .-6)] 	[discourse(makes-4, No-1), punct(makes-4, ,-2), nsubj(makes-4, it-3), root(ROOT-0, makes-4), neg(difference-6, no-5), dobj(makes-4, difference-6), punct(makes-4, .-7)] 	95
[nsubj(think-2, I-1), root(ROOT-0, think-2), nsubj(fine-5, it-3), cop(fine-5, 's-4), ccomp(think-2, fine-5), mark(ask-7, to-6), xcomp(fine-5, ask-7), det(question-9, this-8), dobj(ask-7, question-9), punct(think-2, .-10)] 	[nsubj(think-2, I-1), root(ROOT-0, think-2), nsubj(okay-5, it-3), cop(okay-5, is-4), ccomp(think-2, okay-5), mark(ask-7, to-6), xcomp(okay-5, ask-7), det(question-9, the-8), dobj(ask-7, question-9), punct(think-2, .-10)] 	96
[nsubj(going-3, I-1), aux(going-3, 'm-2), root(ROOT-0, going-3), mark(direct-7, to-4), cop(direct-7, be-5), advmod(direct-7, very-6), xcomp(going-3, direct-7), advmod(direct-7, here-8), punct(going-3, .-9)] 	[nsubj(going-3, I-1), aux(going-3, 'm-2), root(ROOT-0, going-3), mark(blunt-6, to-4), cop(blunt-6, be-5), xcomp(going-3, blunt-6), punct(going-3, ,-7), advmod(going-3, here-8), punct(going-3, :-9), nsubj(do-11, You-10), parataxis(going-3, do-11), neg(do-11, n't-12), punct(going-3, .-13)] 	97
[nsubj(have-3, You-1), advmod(have-3, just-2), root(ROOT-0, have-3), mark(base-5, to-4), xcomp(have-3, base-5), nmod:poss(answer-7, your-6), dobj(base-5, answer-7), mark(know-12, on-8), dobj(know-12, what-9), nsubj(know-12, you-10), aux(know-12, do-11), advcl(base-5, know-12), punct(know-12, ,-13), nsubj(is-15, which-14), ccomp(know-12, is-15), dobj(want-18, what-16), nsubj(want-18, you-17), ccomp(is-15, want-18), punct(have-3, .-19)] 	[discourse(do-5, Yes-1), punct(do-5, ,-2), nsubj(do-5, you-3), aux(do-5, can-4), root(ROOT-0, do-5), advmod(want-9, exactly-6), dobj(want-9, what-7), nsubj(want-9, you-8), ccomp(do-5, want-9), mark(do-11, to-10), xcomp(want-9, do-11), punct(do-5, .-12)] 	98
[nsubj(do-3, You-1), aux(do-3, should-2), root(ROOT-0, do-3), dobj(do-3, it-4), punct(do-3, .-5)] 	[nsubj(prime-3, You-1), aux(prime-3, should-2), root(ROOT-0, prime-3), nsubj(first-5, it-4), advmod(prime-3, first-5), punct(prime-3, .-6)] 	99
[expl('s-2, There-1), root(ROOT-0, 's-2), neg('s-2, not-3), det(lot-5, a-4), nsubj('s-2, lot-5), nsubj(do-8, you-6), aux(do-8, can-7), acl:relcl(lot-5, do-8), case(that-10, about-9), nmod:about(do-8, that-10), punct('s-2, .-11)] 	[nsubj(afraid-3, I-1), cop(afraid-3, 'm-2), root(ROOT-0, afraid-3), expl('s-5, there-4), ccomp(afraid-3, 's-5), neg('s-5, not-6), advmod('s-5, really-7), det(lot-9, a-8), nsubj('s-5, lot-9), nsubj(do-12, you-10), aux(do-12, can-11), acl:relcl(lot-9, do-12), punct(afraid-3, .-13)] 	100
[det(kind-2, What-1), dep(is-5, kind-2), case(insulation-4, of-3), nmod:of(kind-2, insulation-4), root(ROOT-0, is-5), nsubj(is-5, it-6), punct(is-5, ?-7)] 	[det(kind-2, What-1), nsubj(above-6, kind-2), case(floors-4, of-3), nmod:of(kind-2, floors-4), cop(above-6, are-5), root(ROOT-0, above-6), punct(above-6, ?-7)] 	101
[nsubj(depends-2, It-1), root(ROOT-0, depends-2), advmod(depends-2, entirely-3), case(company-6, on-4), nmod:poss(company-6, your-5), nmod:on(depends-2, company-6), cc(company-6, and-7), nmod:poss(contract-9, your-8), conj:and(company-6, contract-9), punct(depends-2, .-10)] 	[nsubj(guess-2, I-1), root(ROOT-0, guess-2), nsubj(depends-4, it-3), ccomp(guess-2, depends-4), case(nature-7, on-5), det(nature-7, the-6), nmod:on(depends-4, nature-7), case(contract-10, of-8), nmod:poss(contract-10, your-9), nmod:of(nature-7, contract-10), punct(guess-2, .-11)] 	102
[nsubj(answered-2, You-1), root(ROOT-0, answered-2), nmod:poss(question-5, your-3), amod(question-5, own-4), dobj(answered-2, question-5), punct(answered-2, .-6)] 	[nsubj(answered-3, You-1), aux(answered-3, 've-2), root(ROOT-0, answered-3), nmod:poss(question-6, your-4), amod(question-6, own-5), dobj(answered-3, question-6), advmod(question-6, already-7), punct(answered-3, .-8)] 	103
[nsubj(think-4, I-1), aux(think-4, do-2), neg(think-4, n't-3), root(ROOT-0, think-4), mark('s-7, that-5), expl('s-7, there-6), ccomp(think-4, 's-7), nsubj('s-7, any-8), punct(think-4, .-9)] 	[nsubj(think-4, I-1), aux(think-4, do-2), neg(think-4, n't-3), root(ROOT-0, think-4), expl(is-6, there-5), ccomp(think-4, is-6), det(term-9, any-7), amod(term-9, universal-8), nsubj(is-6, term-9), punct(think-4, .-10)] 	104
[expl(are-2, There-1), root(ROOT-0, are-2), det(things-5, a-3), amod(things-5, few-4), nsubj(are-2, things-5), nsubj(do-8, you-6), aux(do-8, can-7), acl:relcl(things-5, do-8), punct(are-2, :-9)] 	[expl(are-2, There-1), root(ROOT-0, are-2), det(things-6, a-3), amod(things-6, few-4), amod(things-6, minimally-effective-5), nsubj(are-2, things-6), nsubj(do-9, you-7), aux(do-9, can-8), acl:relcl(things-6, do-9), case(level-13, at-10), det(level-13, the-11), amod(level-13, personal-12), nmod:at(do-9, level-13), punct(are-2, .-14)] 	105
[nsubj(tip-4, This-1), cop(tip-4, is-2), det(tip-4, the-3), root(ROOT-0, tip-4), nsubj(find-6, I-5), acl:relcl(tip-4, find-6), advmod(useful-8, most-7), xcomp(find-6, useful-8), punct(tip-4, :-9)] 	[nsubj(useful-5, Something-1), case(this-3, like-2), nmod:like(Something-1, this-3), cop(useful-5, is-4), root(ROOT-0, useful-5), punct(useful-5, :-6)] 	106
[nsubj('s-2, That-1), root(ROOT-0, 's-2), dobj(believe-5, what-3), nsubj(believe-5, I-4), ccomp('s-2, believe-5), punct('s-2, .-6)] 	[dep(believe-4, Yes-1), punct(believe-4, ,-2), nsubj(believe-4, I-3), root(ROOT-0, believe-4), nsubj(idea-9, it-5), cop(idea-9, 's-6), det(idea-9, a-7), amod(idea-9, good-8), ccomp(believe-4, idea-9), punct(believe-4, .-10)] 	107
[mark(sure-5, If-1), nsubj(sure-5, you-2), cop(sure-5, are-3), neg(sure-5, not-4), advcl(do-13, sure-5), advmod(do-8, how-6), mark(do-8, to-7), ccomp(sure-5, do-8), dobj(do-8, it-9), punct(do-13, ,-10), aux(do-13, do-11), neg(do-13, n't-12), root(ROOT-0, do-13), dobj(do-13, it-14), case(all-16, at-15), nmod:at(do-13, all-16), punct(do-13, .-17)] 	[mark(do-6, If-1), discourse(do-6, not-2), punct(do-6, ,-3), aux(do-6, do-4), neg(do-6, n't-5), root(ROOT-0, do-6), dobj(do-6, that-7), cc(do-6, and-8), conj:and(do-6, spend-9), dobj(spend-9, that-10), dep(that-10, time-11), case(something-13, with-12), nmod:with(time-11, something-13), nsubj(like-15, you-14), acl:relcl(something-13, like-15), mark(do-17, to-16), xcomp(like-15, do-17), punct(do-6, .-18)] 	108
[nsubj(all-3, It-1), cop(all-3, 's-2), root(ROOT-0, all-3), case(head-6, in-4), nmod:poss(head-6, her-5), nmod:in(all-3, head-6), punct(all-3, .-7)] 	[nsubj(all-3, It-1), cop(all-3, 's-2), root(ROOT-0, all-3), case(adhesion-5, about-4), nmod:about(all-3, adhesion-5), punct(all-3, .-6)] 	109
[mark(sure-5, If-1), nsubj(sure-5, you-2), cop(sure-5, are-3), neg(sure-5, not-4), advcl(do-13, sure-5), advmod(do-8, how-6), mark(do-8, to-7), ccomp(sure-5, do-8), dobj(do-8, it-9), punct(do-13, ,-10), aux(do-13, do-11), neg(do-13, n't-12), root(ROOT-0, do-13), dobj(do-13, it-14), case(all-16, at-15), nmod:at(do-13, all-16), punct(do-13, .-17)] 	[mark(have-5, If-1), nsubj(have-5, you-2), aux(have-5, do-3), neg(have-5, not-4), advcl(do-15, have-5), det(reason-10, a-6), advmod(strong-8, very-7), amod(reason-10, strong-8), amod(reason-10, scientific-9), dobj(have-5, reason-10), mark(do-12, to-11), acl(reason-10, do-12), dobj(do-12, it-13), punct(do-15, ,-14), root(ROOT-0, do-15), neg(do-15, n't-16), punct(do-15, .-17)] 	110
[nsubj(need-2, You-1), root(ROOT-0, need-2), mark(read-4, to-3), xcomp(need-2, read-4), det(lot-6, a-5), dobj(read-4, lot-6), mark(know-8, to-7), xcomp(read-4, know-8), dobj(like-11, what-9), nsubj(like-11, you-10), ccomp(know-8, like-11), cc(like-11, and-12), dobj(do-15, what-13), nsubj(do-15, you-14), conj:and(like-11, do-15), neg(do-15, n't-16), punct(need-2, .-17)] 	[nsubj(have-2, You-1), root(ROOT-0, have-2), mark(know-4, to-3), xcomp(have-2, know-4), dobj(want-7, what-5), nsubj(want-7, you-6), ccomp(know-4, want-7), mark(do-9, to-8), xcomp(want-7, do-9), punct(have-2, .-10)] 	111
[nsubj(say-3, I-1), aux(say-3, would-2), root(ROOT-0, say-3), nsubj(do-6, you-4), aux(do-6, can-5), ccomp(say-3, do-6), dobj(do-6, it-7), punct(say-3, ,-8), cc(say-3, but-9), nsubjpass(advised-14, it-10), aux(advised-14, would-11), neg(advised-14, n't-12), auxpass(advised-14, be-13), conj:but(say-3, advised-14), punct(say-3, .-15)] 	[advmod(say-5, Personally-1), punct(say-5, ,-2), nsubj(say-5, I-3), aux(say-5, would-4), root(ROOT-0, say-5), neg(say-5, not-6), mark(suits-9, unless-7), nsubj(suits-9, it-8), advcl(say-5, suits-9), dobj(suits-9, you-10), punct(say-5, .-11)] 	112
[aux(do-3, Can-1), nsubj(do-3, you-2), root(ROOT-0, do-3), dobj(do-3, this-4), punct(do-3, ?-5)] 	[aux(do-3, Can-1), nsubj(do-3, you-2), root(ROOT-0, do-3), dobj(do-3, it-4), punct(do-3, ?-5)] 	113
[advcl(done-5, Sure-1), punct(done-5, ,-2), nsubj(done-5, I-3), aux(done-5, 've-4), root(ROOT-0, done-5), det(trip-8, this-6), advmod(trip-8, very-7), dobj(done-5, trip-8), punct(done-5, .-9)] 	[nsubj(done-3, I-1), aux(done-3, 've-2), root(ROOT-0, done-3), det(dozens-6, this-4), amod(dozens-6, many-5), dobj(done-3, dozens-6), case(times-8, of-7), nmod:of(dozens-6, times-8), punct(done-3, .-9)] 	114
[nsubj(use-3, You-1), aux(use-3, can-2), root(ROOT-0, use-3), dobj(use-3, it-4), punct(use-3, ,-5), advmod(use-3, too-6), punct(use-3, .-7)] 	[nsubj(do-3, You-1), aux(do-3, can-2), root(ROOT-0, do-3), dobj(do-3, it-4), punct(do-3, ,-5), advmod(do-3, too-6), punct(do-3, .-7)] 	115
[advmod(do-4, How-1), aux(do-4, do-2), nsubj(do-4, you-3), root(ROOT-0, do-4), dobj(do-4, that-5), punct(do-4, ?-6)] 	[advmod(do-3, How-1), mark(do-3, to-2), root(ROOT-0, do-3), dobj(do-3, that-4), punct(do-3, ?-5)] 	116
[nsubj(say-3, I-1), aux(say-3, would-2), root(ROOT-0, say-3), nsubj(do-6, you-4), aux(do-6, can-5), ccomp(say-3, do-6), dobj(do-6, it-7), punct(say-3, ,-8), cc(say-3, but-9), nsubjpass(advised-14, it-10), aux(advised-14, would-11), neg(advised-14, n't-12), auxpass(advised-14, be-13), conj:but(say-3, advised-14), punct(say-3, .-15)] 	[nsubj(say-3, I-1), aux(say-3, would-2), root(ROOT-0, say-3), nsubj(impossible-6, it-4), cop(impossible-6, is-5), ccomp(say-3, impossible-6), mark(know-8, to-7), xcomp(impossible-6, know-8), punct(say-3, ,-9), advmod(risk-13, so-10), aux(risk-13, do-11), neg(risk-13, n't-12), parataxis(say-3, risk-13), dobj(risk-13, it-14), punct(say-3, .-15)] 	118
[advmod(know-12, Unfortunately-1), det(answer-3, the-2), nsubjpass(know-12, answer-3), case(question-6, to-4), nmod:poss(question-6, your-5), nmod:to(answer-3, question-6), auxpass(know-12, is-7), nsubjpass(know-12, we-8), advmod(know-12, simply-9), aux(know-12, do-10), neg(know-12, not-11), root(ROOT-0, know-12), punct(know-12, .-13)] 	[det(answer-2, The-1), nsubj(really-8, answer-2), case(question-5, to-3), nmod:poss(question-5, your-4), nmod:to(answer-2, question-5), cop(really-8, is-6), neg(really-8, not-7), root(ROOT-0, really-8), punct(really-8, .-9)] 	119
[mark(sure-5, If-1), nsubj(sure-5, you-2), cop(sure-5, are-3), neg(sure-5, not-4), advcl(do-13, sure-5), advmod(do-8, how-6), mark(do-8, to-7), ccomp(sure-5, do-8), dobj(do-8, it-9), punct(do-13, ,-10), aux(do-13, do-11), neg(do-13, n't-12), root(ROOT-0, do-13), dobj(do-13, it-14), case(all-16, at-15), nmod:at(do-13, all-16), punct(do-13, .-17)] 	[nsubj(work-8, You-1), dep(work-8, do-2), neg(do-2, n't-3), punct(work-8, ,-4), nsubj(work-8, it-5), aux(work-8, will-6), neg(work-8, not-7), root(ROOT-0, work-8), punct(work-8, .-9)] 	120
[nsubj(matter-5, It-1), cop(matter-5, 's-2), advmod(matter-5, also-3), det(matter-5, a-4), root(ROOT-0, matter-5), case(taste-7, of-6), nmod:of(matter-5, taste-7), punct(matter-5, .-8)] 	[nsubj(matter-6, It-1), cop(matter-6, 's-2), advmod(matter-6, definitely-3), advmod(matter-6, just-4), det(matter-6, a-5), root(ROOT-0, matter-6), case(preference-8, of-7), nmod:of(matter-6, preference-8), punct(matter-6, .-9)] 	121
[nsubj(idea-6, It-1), cop(idea-6, 's-2), neg(idea-6, not-3), det(idea-6, a-4), amod(idea-6, good-5), root(ROOT-0, idea-6), punct(idea-6, .-7)] 	[nsubj(idea-5, It-1), cop(idea-5, 's-2), det(idea-5, a-3), amod(idea-5, good-4), root(ROOT-0, idea-5), mark(do-7, to-6), acl(idea-5, do-7), dobj(do-7, both-8), punct(idea-5, .-9)] 	122
[det(answer-2, This-1), nsubjpass(based-4, answer-2), auxpass(based-4, is-3), root(ROOT-0, based-4), case(math-10, on-5), nmod:poss(math-10, my-6), compound(math-10, experience-7), compound(math-10, teaching-8), amod(math-10, undergraduate-9), nmod:on(based-4, math-10), case(US-13, in-11), det(US-13, the-12), nmod:in(math-10, US-13), punct(based-4, .-14)] 	[det(answer-2, This-1), nsubjpass(based-4, answer-2), auxpass(based-4, is-3), root(ROOT-0, based-4), case(experience-6, on-5), nmod:on(based-4, experience-6), nsubjpass(researched-10, I-7), aux(researched-10, did-8), neg(researched-10, not-9), acl:relcl(experience-6, researched-10), case(references-12, for-11), nmod:for(researched-10, references-12), punct(based-4, .-13)] 	123
[expl(are-2, There-1), root(ROOT-0, are-2), det(things-5, a-3), amod(things-5, few-4), nsubj(are-2, things-5), nsubj(think-7, I-6), acl:relcl(things-5, think-7), nsubj(do-10, you-8), aux(do-10, should-9), ccomp(think-7, do-10), punct(are-2, .-11)] 	[expl(are-2, There-1), root(ROOT-0, are-2), advmod(things-6, quite-3), det(things-6, a-4), amod(things-6, few-5), nsubj(are-2, things-6), nsubj(need-9, you-7), aux(need-9, would-8), acl:relcl(things-6, need-9), mark(do-11, to-10), xcomp(need-9, do-11), punct(are-2, ;-12)] 	124
[nsubj(want-3, You-1), aux(want-3, will-2), root(ROOT-0, want-3), mark(clean-5, to-4), xcomp(want-3, clean-5), det(area-7, the-6), dobj(clean-5, area-7), advmod(clean-5, first-8), punct(want-3, .-9)] 	[nsubj(want-4, You-1), aux(want-4, will-2), advmod(want-4, also-3), root(ROOT-0, want-4), mark(remove-6, to-5), xcomp(want-4, remove-6), det(seeds-8, the-7), dobj(remove-6, seeds-8), punct(want-4, .-9)] 	125
[nsubj(depends-2, It-1), root(ROOT-0, depends-2), mark(want-6, on-3), dobj(want-6, what-4), nsubj(want-6, you-5), advcl(depends-2, want-6), mark(have-8, to-7), xcomp(want-6, have-8), case(tank-11, in-9), nmod:poss(tank-11, your-10), nmod:in(have-8, tank-11), punct(depends-2, .-12)] 	[nsubj(depends-2, It-1), root(ROOT-0, depends-2), mark(want-6, on-3), dobj(want-6, what-4), nsubj(want-6, you-5), advcl(depends-2, want-6), mark(achieve-8, to-7), xcomp(want-6, achieve-8), punct(depends-2, .-9)] 	126
[expl(are-2, There-1), root(ROOT-0, are-2), det(couple-4, a-3), nsubj(are-2, couple-4), case(options-6, of-5), nmod:of(couple-4, options-6), dobj(consider-10, that-7), nsubj(consider-10, you-8), aux(consider-10, could-9), acl:relcl(couple-4, consider-10), punct(are-2, :-11)] 	[expl(are-2, There-1), root(ROOT-0, are-2), det(lot-4, a-3), nsubj(are-2, lot-4), case(ways-6, of-5), nmod:of(lot-4, ways-6), nsubj(go-9, that-7), aux(go-9, could-8), acl:relcl(ways-6, go-9), advmod(go-9, poorly-10), case(you-12, for-11), nmod:for(go-9, you-12), punct(are-2, .-13)] 	127
[nsubj(have-4, You-1), aux(have-4, do-2), neg(have-4, n't-3), root(ROOT-0, have-4), mark(worry-6, to-5), xcomp(have-4, worry-6), punct(have-4, .-7)] 	[mark(have-3, Since-1), nsubj(have-3, you-2), advcl(have-10, have-3), nummod(ticket-5, one-4), dobj(have-3, ticket-5), punct(have-10, ,-6), nsubj(have-10, you-7), aux(have-10, do-8), neg(have-10, n't-9), root(ROOT-0, have-10), mark(worry-12, to-11), xcomp(have-10, worry-12), punct(have-10, .-13)] 	128
[amod(citizens-2, Vietnamese-1), nsubj(need-3, citizens-2), root(ROOT-0, need-3), det(visa-5, a-4), dobj(need-3, visa-5), mark(visit-7, to-6), advcl(need-3, visit-7), det(USA-9, the-8), dobj(visit-7, USA-9), punct(need-3, .-10)] 	[amod(citizens-2, Nepalese-1), nsubj(require-3, citizens-2), root(ROOT-0, require-3), det(visa-5, a-4), dobj(require-3, visa-5), mark(visit-7, to-6), xcomp(require-3, visit-7), det(UK-9, the-8), dobj(visit-7, UK-9), punct(require-3, .-10)] 	129
[nsubj(depends-2, It-1), root(ROOT-0, depends-2), mark(used-7, on-3), advmod(used-7, how-4), nsubjpass(used-7, it-5), auxpass(used-7, 's-6), advcl(depends-2, used-7), punct(depends-2, .-8)] 	[nsubj(depends-2, It-1), root(ROOT-0, depends-2), mark(out-9, on-3), advmod(long-5, how-4), dep(out-9, long-5), nsubj(out-9, it-6), aux(out-9, 's-7), cop(out-9, been-8), advmod(depends-2, out-9), punct(depends-2, .-10)] 	130
[nsubj(see-4, I-1), aux(see-4, do-2), neg(see-4, n't-3), root(ROOT-0, see-4), advmod(problem-10, why-5), expl(problem-10, there-6), aux(problem-10, should-7), cop(problem-10, be-8), det(problem-10, any-9), ccomp(see-4, problem-10), case(this-12, with-11), nmod:with(problem-10, this-12), amod(this-12, whatsoever-13), punct(see-4, .-14)] 	[nsubj(see-4, I-1), aux(see-4, do-2), neg(see-4, n't-3), root(ROOT-0, see-4), advmod(problem-10, why-5), nsubj(problem-10, this-6), aux(problem-10, could-7), cop(problem-10, be-8), det(problem-10, a-9), ccomp(see-4, problem-10), punct(see-4, .-11)] 	131
[expl('s-2, There-1), root(ROOT-0, 's-2), neg('s-2, not-3), det(lot-5, a-4), nsubj('s-2, lot-5), nsubj(do-8, you-6), aux(do-8, can-7), acl:relcl(lot-5, do-8), case(that-10, about-9), nmod:about(do-8, that-10), punct('s-2, .-11)] 	[nsubj(think-5, I-1), advmod(think-5, really-2), aux(think-5, do-3), neg(think-5, not-4), root(ROOT-0, think-5), expl(is-7, there-6), ccomp(think-5, is-7), advmod(do-11, much-8), nsubj(do-11, you-9), aux(do-11, can-10), ccomp(is-7, do-11), case(that-13, about-12), nmod:about(do-11, that-13), punct(think-5, .-14)] 	132
[nsubj(got-2, You-1), root(ROOT-0, got-2), nsubj(right-4, it-3), xcomp(got-2, right-4), punct(got-2, .-5)] 	[root(ROOT-0, Yes-1), nsubj(got-3, you-2), ccomp(Yes-1, got-3), dobj(got-3, it-4), punct(Yes-1, .-5)] 	133
[nsubj(have-3, You-1), advmod(have-3, just-2), root(ROOT-0, have-3), mark(base-5, to-4), xcomp(have-3, base-5), nmod:poss(answer-7, your-6), dobj(base-5, answer-7), mark(know-12, on-8), dobj(know-12, what-9), nsubj(know-12, you-10), aux(know-12, do-11), advcl(base-5, know-12), punct(know-12, ,-13), nsubj(is-15, which-14), ccomp(know-12, is-15), dobj(want-18, what-16), nsubj(want-18, you-17), ccomp(is-15, want-18), punct(have-3, .-19)] 	[root(ROOT-0, Remember-1), nsubj(degree-5, this-2), cop(degree-5, is-3), nmod:poss(degree-5, your-4), ccomp(Remember-1, degree-5), nsubj(talking-8, we-6), aux(talking-8, are-7), acl:relcl(degree-5, talking-8), advmod(talking-8, about-9), punct(degree-5, ,-10), nmod:poss(up-12, its-11), advmod(degree-5, up-12), case(you-14, to-13), nmod:to(up-12, you-14), dobj(want-17, what-15), nsubj(want-17, you-16), acl:relcl(up-12, want-17), mark(do-19, to-18), xcomp(want-17, do-19), punct(Remember-1, .-20)] 	134
[advmod(do-4, How-1), aux(do-4, do-2), nsubj(do-4, you-3), root(ROOT-0, do-4), dobj(do-4, that-5), punct(do-4, ?-6)] 	[advmod(do-4, How-1), aux(do-4, should-2), nsubj(do-4, you-3), root(ROOT-0, do-4), dobj(do-4, that-5), punct(do-4, ?-6)] 	135
[nsubj(situation-6, I-1), cop(situation-6, was-2), case(situation-6, in-3), det(situation-6, a-4), amod(situation-6, similar-5), root(ROOT-0, situation-6), punct(situation-6, .-7)] 	[nsubj(situation-6, I-1), cop(situation-6, am-2), case(situation-6, in-3), det(situation-6, a-4), amod(situation-6, similar-5), root(ROOT-0, situation-6), punct(situation-6, .-7)] 	136
[root(ROOT-0, What-1), cop(What-1, is-2), nmod:poss(lid-4, your-3), nsubj(What-1, lid-4), acl(lid-4, made-5), nmod(made-5, of-6), punct(What-1, ?-7)] 	[root(ROOT-0, What-1), cop(What-1, is-2), nmod:poss(paper-4, your-3), nsubj(What-1, paper-4), acl(paper-4, for-5), punct(What-1, ?-6)] 	137
[nsubj(need-4, You-1), aux(need-4, do-2), neg(need-4, n't-3), root(ROOT-0, need-4), det(visa-6, any-5), dobj(need-4, visa-6), punct(need-4, .-7)] 	[nsubj(need-4, You-1), aux(need-4, do-2), neg(need-4, n't-3), root(ROOT-0, need-4), dobj(need-4, sauce-5), case(all-7, at-6), nmod:at(need-4, all-7), punct(need-4, .-8)] 	138
[nsubj(problem-4, That-1), cop(problem-4, is-2), nmod:poss(problem-4, your-3), root(ROOT-0, problem-4), punct(problem-4, ,-5), neg(supervisor-8, not-6), nmod:poss(supervisor-8, your-7), appos(problem-4, supervisor-8), case(supervisor-8, 's-9), punct(problem-4, .-10)] 	[root(ROOT-0, Work-1), case(supervisor-4, with-2), nmod:poss(supervisor-4, your-3), nmod:with(Work-1, supervisor-4), cc(supervisor-4, and-5), nmod:poss(team-7, your-6), conj:and(supervisor-4, team-7), mark(solve-9, to-8), acl(Work-1, solve-9), det(problem-11, the-10), dobj(solve-9, problem-11), punct(Work-1, .-12)] 	139
[nsubj(depends-2, It-1), root(ROOT-0, depends-2), mark(want-6, on-3), dobj(want-6, what-4), nsubj(want-6, you-5), advcl(depends-2, want-6), mark(do-8, to-7), xcomp(want-6, do-8), dep(want-14, next-9), punct(want-14, ,-10), cc(want-14, and-11), advmod(want-14, where-12), nsubj(want-14, you-13), ccomp(do-8, want-14), mark(do-16, to-15), xcomp(want-14, do-16), dobj(do-16, it-17), punct(depends-2, .-18)] 	[nsubj('s-2, It-1), root(ROOT-0, 's-2), advmod('s-2, up-3), case(you-5, to-4), nmod:to('s-2, you-5), dobj(want-8, what-6), nsubj(want-8, you-7), ccomp('s-2, want-8), mark(do-10, to-9), xcomp(want-8, do-10), dobj(do-10, next-11), punct('s-2, .-12)] 	140
[expl(are-2, There-1), root(ROOT-0, are-2), nummod(things-4, two-3), nsubj(are-2, things-4), mark(consider-6, to-5), acl(things-4, consider-6), punct(are-2, :-7)] 	[det(couple-2, A-1), root(ROOT-0, couple-2), appos(couple-2, things-3), mark(consider-5, to-4), acl(things-3, consider-5), punct(couple-2, :-6)] 	141
[nsubj(depends-2, It-1), root(ROOT-0, depends-2), advmod(depends-2, entirely-3), case(company-6, on-4), nmod:poss(company-6, your-5), nmod:on(depends-2, company-6), cc(company-6, and-7), nmod:poss(contract-9, your-8), conj:and(company-6, contract-9), punct(depends-2, .-10)] 	[nsubj(depends-2, It-1), root(ROOT-0, depends-2), case(company-5, on-3), nmod:poss(company-5, your-4), nmod:on(depends-2, company-5), punct(depends-2, .-6)] 	142
[det(wood-2, The-1), nsubj(rotten-6, wood-2), advmod(rotten-6, probably-3), cop(rotten-6, is-4), neg(rotten-6, n't-5), root(ROOT-0, rotten-6), punct(rotten-6, ,-7), nsubjpass(worn-11, it-8), auxpass(worn-11, 's-9), advmod(worn-11, just-10), ccomp(rotten-6, worn-11), compound:prt(worn-11, out-12), punct(rotten-6, .-13)] 	[nsubjpass(worn-4, It-1), auxpass(worn-4, 's-2), advmod(worn-4, just-3), root(ROOT-0, worn-4), compound:prt(worn-4, out-5), cc(worn-4, and-6), neg(safe-8, not-7), conj:and(worn-4, safe-8), punct(worn-4, .-9)] 	143
[advmod(put-6, Well-1), punct(put-6, ,-2), nsubj(put-6, I-3), aux(put-6, would-4), neg(put-6, n't-5), root(ROOT-0, put-6), dobj(put-6, it-7), case(cv-10, on-8), nmod:poss(cv-10, my-9), nmod:on(put-6, cv-10), punct(put-6, .-11)] 	[nsubj(put-4, I-1), aux(put-4, would-2), neg(put-4, n't-3), root(ROOT-0, put-4), det(job-6, this-5), dobj(put-4, job-6), case(resume-9, on-7), nmod:poss(resume-9, my-8), nmod:on(put-4, resume-9), punct(put-4, .-10)] 	144
[nsubj(one-5, This-1), cop(one-5, is-2), det(one-5, a-3), amod(one-5, great-4), root(ROOT-0, one-5), punct(one-5, ...-6)] 	[nsubj(one-5, This-1), cop(one-5, is-2), det(one-5, a-3), amod(one-5, difficult-4), root(ROOT-0, one-5), punct(one-5, .-6)] 	145
[det(answer-2, The-1), nsubj(is-6, answer-2), case(questions-5, to-3), det(questions-5, both-4), nmod:to(answer-2, questions-5), root(ROOT-0, is-6), punct(is-6, :-7), dep(is-6, Yes-8), punct(is-6, .-9)] 	[mark(answer-3, To-1), advmod(answer-3, directly-2), root(ROOT-0, answer-3), det(questions-6, the-4), nummod(questions-6, two-5), dobj(answer-3, questions-6), case(title-9, in-7), nmod:poss(title-9, your-8), nmod:in(questions-6, title-9), punct(answer-3, .-10)] 	146
[advmod(is-4, Yes-1), punct(is-4, ,-2), expl(is-4, there-3), root(ROOT-0, is-4), det(reason-6, a-5), nsubj(is-4, reason-6), mark(do-9, to-7), neg(do-9, not-8), acl(reason-6, do-9), dobj(propose-12, what-10), nsubj(propose-12, you-11), ccomp(do-9, propose-12), punct(is-4, .-13)] 	[amod(reasons-2, Valid-1), root(ROOT-0, reasons-2), mark(feel-4, to-3), acl(reasons-2, feel-4), det(way-6, the-5), dobj(feel-4, way-6), nsubj(do-8, you-7), acl:relcl(way-6, do-8), punct(reasons-2, ,-9), cc(reasons-2, but-10), neg(reason-13, not-11), det(reason-13, a-12), conj:but(reasons-2, reason-13), mark(resign-15, to-14), acl(reason-13, resign-15), punct(reasons-2, .-16)] 	147
[nsubj(think-2, I-1), root(ROOT-0, think-2), nsubjpass(depends-5, it-3), auxpass(depends-5, is-4), ccomp(think-2, depends-5), case(program-8, on-6), det(program-8, the-7), nmod:on(depends-5, program-8), punct(think-2, .-9)] 	[nsubj(depends-2, It-1), root(ROOT-0, depends-2), mark(used-8, on-3), advmod(used-8, how-4), det(term-6, the-5), nsubjpass(used-8, term-6), auxpass(used-8, is-7), advcl(depends-2, used-8), nsubj(think-10, I-9), ccomp(used-8, think-10), punct(depends-2, .-11)] 	148
[aux(do-3, Can-1), nsubj(do-3, you-2), root(ROOT-0, do-3), dobj(do-3, this-4), punct(do-3, ?-5)] 	[root(ROOT-0, So-1), punct(So-1, ,-2), root(,-2, CAN-3), nsubj(do-5, you-4), acl:relcl(CAN-3, do-5), dobj(do-5, this-6), punct(CAN-3, ?-7)] 	149
[nsubj(think-2, I-1), root(ROOT-0, think-2), expl(is-4, there-3), ccomp(think-2, is-4), neg(is-4, n't-5), det(answer-8, a-6), amod(answer-8, general-7), nsubj(is-4, answer-8), punct(think-2, .-9)] 	[nsubj(think-4, I-1), aux(think-4, do-2), neg(think-4, n't-3), root(ROOT-0, think-4), expl(is-6, there-5), ccomp(think-4, is-6), det(answer-8, an-7), nsubj(is-6, answer-8), case(this-10, for-9), nmod:for(answer-8, this-10), punct(think-4, .-11)] 	150
[expl(are-2, There-1), root(ROOT-0, are-2), det(things-5, a-3), amod(things-5, few-4), nsubj(are-2, things-5), nsubj(do-8, you-6), aux(do-8, can-7), acl:relcl(things-5, do-8), punct(are-2, :-9)] 	[expl(are-2, There-1), root(ROOT-0, are-2), det(couple-4, a-3), nsubj(are-2, couple-4), dep(couple-4, things-5), nsubj(try-8, you-6), aux(try-8, can-7), acl:relcl(things-5, try-8), punct(are-2, .-9)] 	151
[det(key-2, The-1), nsubj(have-5, key-2), cop(have-5, is-3), nsubj(have-5, you-4), root(ROOT-0, have-5), mark(find-7, to-6), xcomp(have-5, find-7), dobj(find-7, something-8), nsubj(works-10, that-9), acl:relcl(something-8, works-10), case(you-12, for-11), nmod:for(works-10, you-12), punct(have-5, ,-13), cc(have-5, and-14), nmod:poss(goals-16, your-15), conj:and(have-5, goals-16), punct(have-5, .-17)] 	[nsubj(want-3, You-1), aux(want-3, may-2), root(ROOT-0, want-3), dobj(want-3, it-4), punct(want-3, ,-5), cc(want-3, but-6), det(process-8, the-7), nsubj(is-12, process-8), acl(process-8, given-9), case(you-11, to-10), nmod:to(given-9, you-11), conj:but(want-3, is-12), dobj(have-15, what-13), nsubj(have-15, you-14), ccomp(is-12, have-15), mark(work-17, to-16), xcomp(have-15, work-17), advmod(work-17, within-18), punct(want-3, .-19)] 	152
[nsubj(have-4, You-1), aux(have-4, do-2), neg(have-4, n't-3), root(ROOT-0, have-4), mark(know-6, to-5), xcomp(have-4, know-6), punct(have-4, .-7)] 	[nsubj(think-2, I-1), root(ROOT-0, think-2), nsubj(done-7, you-3), aux(done-7, 've-4), advmod(much-6, pretty-5), advmod(done-7, much-6), ccomp(think-2, done-7), nmod:poss(review-9, your-8), dobj(done-7, review-9), punct(think-2, .-10)] 	[nsubj(answered-5, You-1), aux(answered-5, 've-2), advmod(answered-5, pretty-3), advmod(answered-5, much-4), root(ROOT-0, answered-5), nmod:poss(question-8, your-6), amod(question-8, own-7), dobj(answered-5, question-8), punct(answered-5, .-9)] 	154
[expl(are-2, There-1), root(ROOT-0, are-2), det(things-5, a-3), amod(things-5, few-4), nsubj(are-2, things-5), nsubj(think-7, I-6), acl:relcl(things-5, think-7), nsubj(do-10, you-8), aux(do-10, should-9), ccomp(think-7, do-10), punct(are-2, .-11)] 	[expl(are-2, There-1), root(ROOT-0, are-2), det(things-5, a-3), amod(things-5, few-4), nsubj(are-2, things-5), nsubj(understand-9, I-6), aux(understand-9, do-7), neg(understand-9, n't-8), acl:relcl(things-5, understand-9), punct(are-2, :-10)] 	155
[nsubj(burn-2, You-1), root(ROOT-0, burn-2), amod(protein-6, more-3), compound(protein-6, Calories-4), amod(protein-6, digesting-5), dobj(burn-2, protein-6), mark(do-9, than-7), nsubj(do-9, you-8), advcl(protein-6, do-9), dobj(do-9, carbohydrates-10), cc(carbohydrates-10, and-11), conj:and(carbohydrates-10, fat-12), punct(burn-2, .-13)] 	[det(you-3, The-1), amod(you-3, more-2), nsubj(sweat-4, you-3), root(ROOT-0, sweat-4), punct(sweat-4, ,-5), det(you-8, the-6), amod(you-8, faster-7), nsubj(burn-10, you-8), aux(burn-10, will-9), ccomp(sweat-4, burn-10), dobj(burn-10, calories-11), cc(calories-11, and-12), conj:and(calories-11, fat-13), punct(sweat-4, .-14)] 	156
[nsubj(depends-2, It-1), root(ROOT-0, depends-2), mark(want-6, on-3), dobj(want-6, what-4), nsubj(want-6, you-5), advcl(depends-2, want-6), mark(do-8, to-7), xcomp(want-6, do-8), dep(want-14, next-9), punct(want-14, ,-10), cc(want-14, and-11), advmod(want-14, where-12), nsubj(want-14, you-13), ccomp(do-8, want-14), mark(do-16, to-15), xcomp(want-14, do-16), dobj(do-16, it-17), punct(depends-2, .-18)] 	[nsubj(got-2, You-1), root(ROOT-0, got-2), nsubj(right-4, it-3), xcomp(got-2, right-4), punct(got-2, .-5)] 	[nsubj(got-3, You-1), aux(got-3, 've-2), root(ROOT-0, got-3), nsubj(right-5, it-4), xcomp(got-3, right-5), punct(got-3, .-6)] 	158
[nsubj(answered-2, You-1), root(ROOT-0, answered-2), nmod:poss(question-5, your-3), amod(question-5, own-4), dobj(answered-2, question-5), punct(answered-2, .-6)] 	[nsubj(answered-4, You-1), advmod(answered-4, pretty-2), advmod(answered-4, much-3), root(ROOT-0, answered-4), nmod:poss(question-7, your-5), amod(question-7, own-6), dobj(answered-4, question-7), punct(answered-4, .-8)] 	159
[nsubj(have-2, I-1), root(ROOT-0, have-2), det(thing-5, the-3), amod(thing-5, same-4), dobj(have-2, thing-5), punct(have-2, .-6)] 	[nsubj(had-2, I-1), root(ROOT-0, had-2), det(problem-5, the-3), amod(problem-5, same-4), dobj(had-2, problem-5), case(you-7, as-6), nmod:as(had-2, you-7), punct(had-2, .-8)] 	160
[dep(is-4, Yes-1), punct(is-4, ,-2), expl(is-4, there-3), root(ROOT-0, is-4), det(difference-7, a-5), compound(difference-7, chemical-6), nsubj(is-4, difference-7), punct(is-4, .-8)] 	[advmod(is-4, Yes-1), punct(is-4, ,-2), expl(is-4, there-3), root(ROOT-0, is-4), det(reason-6, a-5), nsubj(is-4, reason-6), case(it-8, for-7), nmod:for(reason-6, it-8), punct(is-4, .-9)] 	161
[nsubj(level-6, They-1), aux(level-6, can-2), cop(level-6, be-3), case(level-6, out-4), mwe(out-4, of-5), root(ROOT-0, level-6), case(bit-9, by-7), det(bit-9, a-8), nmod:by(level-6, bit-9), punct(level-6, ,-10), cc(level-6, but-11), nsubj(important-14, flat-12), cop(important-14, is-13), conj:but(level-6, important-14), punct(level-6, .-15)] 	[root(ROOT-0, Yes-1), punct(bit-8, ,-2), mark(bit-8, although-3), nsubj(bit-8, they-4), aux(bit-8, can-5), cop(bit-8, be-6), det(bit-8, a-7), parataxis(Yes-1, bit-8), xcomp(bit-8, sour-9), punct(bit-8, .-10)] 	162
[nsubj(look-3, I-1), aux(look-3, would-2), root(ROOT-0, look-3), case(this-5, at-4), nmod:at(look-3, this-5), punct(look-3, :-6), dobj(look-3, U.S.-7)] 	[nsubj(look-3, I-1), aux(look-3, would-2), root(ROOT-0, look-3), case(way-6, at-4), det(way-6, this-5), nmod:at(look-3, way-6), punct(look-3, :-7)] 	163
[nsubj(path-6, You-1), cop(path-6, are-2), case(path-6, on-3), det(path-6, the-4), amod(path-6, right-5), root(ROOT-0, path-6), punct(path-6, .-7)] 	[nsubj(path-6, You-1), cop(path-6, 're-2), case(path-6, on-3), det(path-6, the-4), amod(path-6, right-5), root(ROOT-0, path-6), punct(path-6, .-7)] 	164
[mark(should-7, If-1), nsubj(should-7, you-2), aux(should-7, have-3), discourse(should-7, n't-4), punct(should-7, ,-5), nsubj(should-7, you-6), root(ROOT-0, should-7), punct(should-7, .-8)] 	[nsubj(should-2, You-1), root(ROOT-0, should-2), punct(should-2, ,-3), cc(should-2, but-4), nsubj(have-8, you-5), aux(have-8, do-6), neg(have-8, n't-7), conj:but(should-2, have-8), nmod(have-8, to-9), punct(should-2, .-10)] 	165
[advmod(common-4, Yes-1), nsubj(common-4, it-2), cop(common-4, is-3), root(ROOT-0, common-4), punct(common-4, !-5)] 	[det(answer-3, The-1), amod(answer-3, simple-2), nsubj(yes-5, answer-3), cop(yes-5, is-4), root(ROOT-0, yes-5), punct(yes-5, !-6)] 	166
[nsubj(think-4, I-1), aux(think-4, do-2), neg(think-4, n't-3), root(ROOT-0, think-4), mark('s-7, that-5), expl('s-7, there-6), ccomp(think-4, 's-7), nsubj('s-7, any-8), punct(think-4, .-9)] 	[nsubj(think-4, I-1), aux(think-4, do-2), neg(think-4, n't-3), root(ROOT-0, think-4), expl(are-6, there-5), ccomp(think-4, are-6), det(benefits-8, any-7), nsubj(are-6, benefits-8), punct(think-4, .-9)] 	167
[nsubj(looks-2, It-1), root(ROOT-0, looks-2), case(me-4, to-3), nmod:to(looks-2, me-4), mark(set-8, that-5), nsubjpass(set-8, this-6), auxpass(set-8, is-7), ccomp(looks-2, set-8), compound:prt(set-8, up-9), mark(want-13, for-10), dobj(want-13, what-11), nsubj(want-13, you-12), advcl(set-8, want-13), punct(looks-2, :-14)] 	[nsubj(is-2, It-1), root(ROOT-0, is-2), advmod(is-2, up-3), case(you-5, to-4), nmod:to(up-3, you-5), mark(want-8, whether-6), nsubj(want-8, you-7), ccomp(is-2, want-8), mark(do-10, to-9), xcomp(want-8, do-10), dobj(do-10, that-11), punct(is-2, .-12)] 	168
[nsubj(account-8, Problem-1), cop(account-8, is-2), punct(account-8, ,-3), det(system-5, the-4), nsubj(account-8, system-5), aux(account-8, does-6), neg(account-8, n't-7), root(ROOT-0, account-8), case(people-10, for-9), nmod:for(account-8, people-10), nsubj(care-13, who-11), aux(care-13, could-12), acl:relcl(people-10, care-13), advmod(money-16, less-14), case(money-16, about-15), nmod:about(care-13, money-16), punct(money-16, ,-17), cc(money-16, or-18), conj:or(money-16, title-19), punct(account-8, .-20)] 	[det(Joker-2, The-1), nsubj(care-5, Joker-2), aux(care-5, does-3), neg(care-5, n't-4), root(ROOT-0, care-5), case(money-7, about-6), nmod:about(care-5, money-7), punct(care-5, .-8)] 	169
[case(case-4, In-1), det(case-4, the-2), amod(case-4, first-3), nmod:in(think-7, case-4), punct(think-7, ,-5), nsubj(think-7, I-6), root(ROOT-0, think-7), nsubj(need-11, you-8), aux(need-11, do-9), neg(need-11, n't-10), ccomp(think-7, need-11), dobj(need-11, it-12), punct(think-7, .-13)] 	[mark(think-5, So-1), nsubj(think-5, I-2), aux(think-5, do-3), neg(think-5, n't-4), root(ROOT-0, think-5), nsubj(need-7, you-6), ccomp(think-5, need-7), mark(put-9, to-8), xcomp(need-7, put-9), dobj(put-9, it-10), case(cover-13, on-11), det(cover-13, the-12), nmod:on(put-9, cover-13), punct(think-5, .-14)] 	170
[nsubj(impossible-3, It-1), cop(impossible-3, is-2), root(ROOT-0, impossible-3), mark(answer-5, to-4), xcomp(impossible-3, answer-5), det(question-7, this-6), dobj(answer-5, question-7), case(check-11, without-8), det(check-11, a-9), compound(check-11, form-10), nmod:without(answer-5, check-11), punct(impossible-3, .-12)] 	[nsubj(difficult-3, It-1), cop(difficult-3, is-2), root(ROOT-0, difficult-3), punct(difficult-3, ,-4), mark(impossible-7, if-5), neg(impossible-7, not-6), advcl(give-10, impossible-7), punct(give-10, ,-8), mark(give-10, to-9), ccomp(difficult-3, give-10), det(answer-13, a-11), amod(answer-13, complete-12), dobj(give-10, answer-13), case(question-16, to-14), det(question-16, this-15), nmod:to(give-10, question-16), punct(difficult-3, .-17)] 	171
[nsubj(need-2, You-1), root(ROOT-0, need-2), mark(add-4, to-3), xcomp(need-2, add-4), dobj(add-4, this-5), mark(resume-8, to-6), nmod:poss(resume-8, your-7), xcomp(add-4, resume-8), mark(position-14, because-9), nsubj(position-14, it-10), cop(position-14, is-11), det(position-14, the-12), amod(position-14, only-13), advcl(resume-8, position-14), nsubj(had-17, you-15), aux(had-17, have-16), acl:relcl(position-14, had-17), punct(need-2, .-18)] 	[nsubj(gives-2, This-1), root(ROOT-0, gives-2), iobj(gives-2, you-3), det(opportunity-5, the-4), dobj(gives-2, opportunity-5), mark(make-7, to-6), acl(opportunity-5, make-7), nmod:poss(case-9, your-8), dobj(make-7, case-9), mark(have-14, that-10), nsubj(have-14, you-11), advmod(have-14, really-12), aux(have-14, do-13), ccomp(case-9, have-14), dobj(have-14, expertise-15), case(XXX-17, in-16), nmod:in(expertise-15, XXX-17), punct(gives-2, .-18)] 	172
[root(ROOT-0, Work-1), case(it-3, into-2), nmod:into(Work-1, it-3), advmod(Work-1, slowly-4), punct(Work-1, .-5)] 	[nsubj(work-2, You-1), root(ROOT-0, work-2), case(it-4, on-3), nmod:on(work-2, it-4), advmod(work-2, slowly-5), punct(work-2, .-6)] 	173
[discourse(NEED-6, No-1), punct(NEED-6, ,-2), nsubj(NEED-6, you-3), aux(NEED-6, do-4), neg(NEED-6, not-5), root(ROOT-0, NEED-6), det(machine-9, a-7), compound(machine-9, bread-8), dobj(NEED-6, machine-9), punct(NEED-6, .-10)] 	[nsubj(need-4, You-1), aux(need-4, do-2), neg(need-4, not-3), root(ROOT-0, need-4), mark(worry-6, to-5), xcomp(need-4, worry-6), punct(need-4, .-7)] 	174
[advmod(possible-5, Yes-1), punct(possible-5, ,-2), nsubj(possible-5, it-3), cop(possible-5, is-4), root(ROOT-0, possible-5), mark(publish-7, to-6), xcomp(possible-5, publish-7), det(paper-9, a-8), dobj(publish-7, paper-9), case(analysis-12, on-10), compound(analysis-12, model-11), nmod:on(publish-7, analysis-12), punct(possible-5, .-13)] 	[advmod(hard-5, Yes-1), punct(hard-5, ,-2), nsubj(hard-5, it-3), cop(hard-5, is-4), root(ROOT-0, hard-5), mark(publish-7, to-6), xcomp(hard-5, publish-7), case(journal-12, in-8), det(journal-12, a-9), compound(journal-12, peer-10), amod(journal-12, reviewed-11), nmod:in(publish-7, journal-12), punct(hard-5, .-13)] 	175
[nsubj(have-3, You-1), advmod(have-3, just-2), root(ROOT-0, have-3), mark(base-5, to-4), xcomp(have-3, base-5), nmod:poss(answer-7, your-6), dobj(base-5, answer-7), mark(know-12, on-8), dobj(know-12, what-9), nsubj(know-12, you-10), aux(know-12, do-11), advcl(base-5, know-12), punct(know-12, ,-13), nsubj(is-15, which-14), ccomp(know-12, is-15), dobj(want-18, what-16), nsubj(want-18, you-17), ccomp(is-15, want-18), punct(have-3, .-19)] 	[advmod(have-12, So-1), mark('s-4, if-2), nsubj('s-4, that-3), advcl(have-12, 's-4), dobj(need-7, what-5), nsubj(need-7, you-6), ccomp('s-4, need-7), punct(have-12, ,-8), nsubj(have-12, you-9), advmod(have-12, really-10), aux(have-12, do-11), root(ROOT-0, have-12), mark(explicit-15, to-13), cop(explicit-15, be-14), xcomp(have-12, explicit-15), case(it-17, about-16), nmod:about(explicit-15, it-17), punct(have-12, .-18)] 	176
[advmod(mention-5, Yes-1), punct(mention-5, ,-2), nsubj(mention-5, you-3), aux(mention-5, should-4), root(ROOT-0, mention-5), nmod:poss(experience-7, your-6), dobj(mention-5, experience-7), punct(mention-5, .-8)] 	[advmod(make-5, Yes-1), punct(make-5, ,-2), nsubj(make-5, you-3), aux(make-5, should-4), root(ROOT-0, make-5), det(résumé-7, a-6), dobj(make-5, résumé-7), punct(make-5, .-8)] 	177
[nsubj(think-2, I-1), root(ROOT-0, think-2), nsubj(great-5, it-3), cop(great-5, is-4), ccomp(think-2, great-5), mark(had-8, that-6), nsubj(had-8, you-7), ccomp(great-5, had-8), det(test-10, a-9), dobj(had-8, test-10), acl(test-10, conducted-11), punct(think-2, .-12)] 	[nsubj(think-2, I-1), root(ROOT-0, think-2), nsubj(plan-7, that-3), cop(plan-7, 's-4), det(plan-7, a-5), amod(plan-7, great-6), ccomp(think-2, plan-7), punct(think-2, .-8)] 	178
[nsubj(have-4, You-1), aux(have-4, do-2), neg(have-4, n't-3), root(ROOT-0, have-4), mark(know-6, to-5), xcomp(have-4, know-6), punct(have-4, .-7)] 	[root(ROOT-0, Other-1), mark(have-7, than-2), mark(have-7, that-3), nsubj(have-7, you-4), aux(have-7, do-5), neg(have-7, n't-6), advcl(Other-1, have-7), det(issue-10, a-8), compound(issue-10, tax-9), dobj(have-7, issue-10), punct(Other-1, .-11)] 	179
[dep(is-4, Yes-1), punct(is-4, ,-2), expl(is-4, there-3), root(ROOT-0, is-4), det(rule-6, a-5), nsubj(is-4, rule-6), case(this-8, against-7), nmod:against(rule-6, this-8), punct(is-4, .-9)] 	[expl('s-2, There-1), root(ROOT-0, 's-2), neg(rule-4, no-3), nsubj('s-2, rule-4), case(it-6, against-5), nmod:against(rule-4, it-6), punct('s-2, .-7)] 	180
[root(ROOT-0, What-1), cop(What-1, are-2), nmod:poss(goals-4, your-3), nsubj(What-1, goals-4), punct(What-1, ?-5)] 	[root(ROOT-0, What-1), cop(What-1, are-2), nsubj(goals-4, you-3), nsubj(What-1, goals-4), punct(What-1, ?-5)] 	181
[nsubj(going-3, I-1), aux(going-3, 'm-2), root(ROOT-0, going-3), mark(go-5, to-4), xcomp(going-3, go-5), compound:prt(go-5, out-6), case(limb-9, on-7), det(limb-9, a-8), nmod:on(go-5, limb-9), advmod(go-5, here-10), punct(going-3, ...-11)] 	[nsubj(going-3, I-1), aux(going-3, 'm-2), root(ROOT-0, going-3), mark(direct-7, to-4), cop(direct-7, be-5), advmod(direct-7, very-6), xcomp(going-3, direct-7), advmod(direct-7, here-8), punct(going-3, .-9)] 	182
[mark(valid-9, If-1), nmod:poss(visa-5, your-2), amod(visa-5, long-3), compound(visa-5, stay-4), nsubj(valid-9, visa-5), case(Switzerland-7, for-6), nmod:for(visa-5, Switzerland-7), cop(valid-9, is-8), advcl(need-15, valid-9), punct(need-15, ,-10), advmod(need-15, then-11), nsubj(need-15, you-12), aux(need-15, will-13), neg(need-15, not-14), root(ROOT-0, need-15), det(visa-18, a-16), compound(visa-18, transit-17), dobj(need-15, visa-18), punct(need-15, .-19)] 	[nsubj(need-4, You-1), aux(need-4, do-2), neg(need-4, not-3), root(ROOT-0, need-4), det(visa-7, a-5), compound(visa-7, transit-6), dobj(need-4, visa-7), punct(need-4, ,-8), cc(need-4, but-9), mark(enter-11, to-10), conj:but(need-4, enter-11), dep(need-15, Zurich-12), nsubj(need-15, you-13), aux(need-15, will-14), ccomp(enter-11, need-15), det(visa-17, a-16), dobj(need-15, visa-17), punct(need-4, .-18)] 	183
[det(point-4, A-1), amod(point-4, few-2), amod(point-4, more-3), root(ROOT-0, point-4), mark(think-6, to-5), acl(point-4, think-6), advmod(think-6, about-7), punct(point-4, :-8)] 	[det(things-3, A-1), amod(things-3, few-2), root(ROOT-0, things-3), mark(think-5, to-4), acl(things-3, think-5), advmod(think-5, about-6), punct(things-3, :-7)] 	184
[advmod(have-5, Now-1), nsubj(have-5, you-2), aux(have-5, do-3), neg(have-5, n't-4), root(ROOT-0, have-5), mark(perfect-8, to-6), cop(perfect-8, be-7), xcomp(have-5, perfect-8), case(answer-11, on-9), det(answer-11, every-10), nmod:on(perfect-8, answer-11), punct(have-5, .-12)] 	[nsubj(have-4, You-1), aux(have-4, do-2), neg(have-4, n't-3), root(ROOT-0, have-4), mark(know-6, to-5), xcomp(have-4, know-6), punct(have-4, .-7)] 	185
[nsubj(afraid-3, I-1), cop(afraid-3, 'm-2), root(ROOT-0, afraid-3), nsubj(luck-8, we-4), cop(luck-8, are-5), case(luck-8, out-6), mwe(out-6, of-7), ccomp(afraid-3, luck-8), case(one-11, in-9), det(one-11, this-10), nmod:in(luck-8, one-11), punct(afraid-3, .-12)] 	[nsubj(think-2, I-1), root(ROOT-0, think-2), nsubj(one-5, this-3), cop(one-5, is-4), ccomp(think-2, one-5), case(things-8, of-6), det(things-8, those-7), nmod:of(one-5, things-8), advmod(luck-15, where-9), nsubj(luck-15, you-10), cop(luck-15, are-11), advmod(luck-15, just-12), case(luck-15, out-13), mwe(out-13, of-14), acl:relcl(things-8, luck-15), punct(think-2, .-16)] 	186
[nsubj(deciding-4, It-1), aux(deciding-4, is-2), advmod(deciding-4, more-3), root(ROOT-0, deciding-4), dobj(do-8, what-5), nsubj(do-8, you-6), aux(do-8, should-7), ccomp(deciding-4, do-8), cc(do-8, and-9), dobj(get-13, what-10), nsubj(get-13, you-11), aux(get-13, should-12), conj:and(do-8, get-13), dobj(get-13, others-14), mark(do-16, to-15), xcomp(get-13, do-16), punct(deciding-4, .-17)] 	[nsubj(know-4, Point-1), cop(know-4, is-2), punct(know-4, :-3), root(ROOT-0, know-4), dobj(want-7, what-5), nsubj(want-7, you-6), ccomp(know-4, want-7), cc(want-7, and-8), aux(afraid-12, do-9), neg(afraid-12, n't-10), cop(afraid-12, be-11), conj:and(want-7, afraid-12), mark(ask-14, to-13), xcomp(afraid-12, ask-14), case(it-16, for-15), nmod:for(ask-14, it-16), punct(know-4, .-17)] 	187
[nsubj(varies-2, It-1), root(ROOT-0, varies-2), case(situation-5, by-3), det(situation-5, the-4), nmod:by(varies-2, situation-5), punct(varies-2, .-6)] 	[nsubj(varies-2, This-1), root(ROOT-0, varies-2), case(institution-4, by-3), nmod:by(varies-2, institution-4), punct(varies-2, .-5)] 	188
[nsubj(have-2, I-1), root(ROOT-0, have-2), det(thing-5, the-3), amod(thing-5, same-4), dobj(have-2, thing-5), punct(have-2, .-6)] 	[nsubj(have-2, I-1), root(ROOT-0, have-2), det(problem-5, the-3), amod(problem-5, same-4), dobj(have-2, problem-5), punct(have-2, .-6)] 	189
[nsubj(have-2, I-1), root(ROOT-0, have-2), det(thing-5, the-3), amod(thing-5, same-4), dobj(have-2, thing-5), punct(have-2, .-6)] 	[nsubj(have-2, I-1), root(ROOT-0, have-2), det(problem-6, the-3), amod(problem-6, exact-4), amod(problem-6, same-5), dobj(have-2, problem-6), punct(have-2, .-7)] 	190
[nsubj(path-6, You-1), cop(path-6, are-2), case(path-6, on-3), det(path-6, the-4), amod(path-6, right-5), root(ROOT-0, path-6), punct(path-6, .-7)] 	[nsubj(right-3, You-1), cop(right-3, 're-2), root(ROOT-0, right-3), case(definition-8, on-4), case(definition-8, about-5), det(definition-8, the-6), compound(definition-8, sample-7), nmod:about(right-3, definition-8), punct(right-3, .-9)] 	191
[det(thing-3, The-1), amod(thing-3, best-2), nsubj(is-7, thing-3), nsubj(do-6, you-4), aux(do-6, can-5), acl:relcl(thing-3, do-6), root(ROOT-0, is-7), mark(know-9, to-8), xcomp(is-7, know-9), nmod:poss(stuff-11, your-10), dobj(know-9, stuff-11), punct(is-7, .-12)] 	[det(thing-3, The-1), amod(thing-3, best-2), nsubj(find-8, thing-3), nsubj(do-6, you-4), aux(do-6, can-5), acl:relcl(thing-3, do-6), aux(find-8, is-7), root(ROOT-0, find-8), nsubj(interesting-11, something-9), advmod(interesting-11, else-10), xcomp(find-8, interesting-11), mark(do-13, to-12), xcomp(interesting-11, do-13), mark(wait-16, while-14), nsubj(wait-16, you-15), advcl(do-13, wait-16), case(hold-18, on-17), nmod:on(wait-16, hold-18), punct(find-8, .-19)] 	193
[nsubj(matter-5, It-1), cop(matter-5, 's-2), advmod(matter-5, also-3), det(matter-5, a-4), root(ROOT-0, matter-5), case(taste-7, of-6), nmod:of(matter-5, taste-7), punct(matter-5, .-8)] 	[nsubj(matter-5, It-1), cop(matter-5, 's-2), advmod(matter-5, mostly-3), det(matter-5, a-4), root(ROOT-0, matter-5), case(taste-7, of-6), nmod:of(matter-5, taste-7), punct(matter-5, .-8)] 	194
[nsubj(situation-6, I-1), cop(situation-6, was-2), case(situation-6, in-3), det(situation-6, a-4), amod(situation-6, similar-5), root(ROOT-0, situation-6), punct(situation-6, .-7)] 	[advmod(sent-10, Personally-1), advmod(situation-8, when-2), nsubj(situation-8, I-3), cop(situation-8, was-4), case(situation-8, in-5), det(situation-8, a-6), amod(situation-8, similar-7), dep(sent-10, situation-8), nsubj(sent-10, I-9), root(ROOT-0, sent-10), det(couple-12, the-11), dobj(sent-10, couple-12), det(card-14, a-13), dep(couple-12, card-14), cc(card-14, and-15), det(gift-17, a-16), conj:and(card-14, gift-17), punct(sent-10, .-18)] 	195
[nsubj(use-3, You-1), aux(use-3, can-2), root(ROOT-0, use-3), dobj(use-3, it-4), punct(use-3, ,-5), advmod(use-3, too-6), punct(use-3, .-7)] 	[discourse(do-5, Yes-1), punct(do-5, ,-2), nsubj(do-5, you-3), aux(do-5, can-4), root(ROOT-0, do-5), dobj(do-5, it-6), punct(do-5, .-7)] 	196
[nsubj(have-2, You-1), root(ROOT-0, have-2), mark(decide-4, to-3), xcomp(have-2, decide-4), dobj(want-7, what-5), nsubj(want-7, you-6), ccomp(decide-4, want-7), mark(get-9, to-8), xcomp(want-7, get-9), case(this-12, out-10), mwe(out-10, of-11), nmod:out_of(get-9, this-12), punct(have-2, .-13)] 	[nsubj(have-2, You-1), root(ROOT-0, have-2), mark(find-4, to-3), xcomp(have-2, find-4), compound:prt(find-4, out-5), det(works-7, what-6), dobj(find-4, works-7), case(you-9, for-8), nmod:for(works-7, you-9), punct(have-2, .-10)] 	197
[nsubj(depends-2, It-1), root(ROOT-0, depends-2), mark(are-6, on-3), dobj(are-6, what-4), nsubj(are-6, they-5), advcl(depends-2, are-6), punct(depends-2, .-7)] 	[nsubj(depends-2, It-1), root(ROOT-0, depends-2), mark(used-7, on-3), advmod(used-7, how-4), nsubjpass(used-7, it-5), auxpass(used-7, 's-6), advcl(depends-2, used-7), punct(depends-2, .-8)] 	198
[nsubj(had-2, I-1), root(ROOT-0, had-2), det(problem-5, the-3), amod(problem-5, same-4), dobj(had-2, problem-5), case(you-7, as-6), nmod:as(had-2, you-7), punct(had-2, .-8)] 	[nsubj(had-4, I-1), aux(had-4, have-2), advmod(had-4, just-3), root(ROOT-0, had-4), det(problem-7, the-5), amod(problem-7, same-6), dobj(had-4, problem-7), punct(had-4, .-8)] 	199
[advmod(want-5, Sometime-1), mark(want-5, if-2), nsubj(want-5, you-3), advmod(want-5, really-4), root(ROOT-0, want-5), dobj(need-9, it-6), nsubj(need-9, you-7), aux(need-9, might-8), ccomp(want-5, need-9), mark(pay-11, to-10), xcomp(need-9, pay-11), det(agency-13, an-12), dobj(pay-11, agency-13), mark(get-15, to-14), advcl(pay-11, get-15), det(place-17, the-16), dobj(get-15, place-17), case(you-19, for-18), nmod:for(get-15, you-19), punct(want-5, .-20)] 	[nsubj(get-4, You-1), aux(get-4, could-2), advmod(get-4, probably-3), root(ROOT-0, get-4), det(agency-7, a-5), compound(agency-7, tour-6), dobj(get-4, agency-7), mark(do-9, to-8), acl(agency-7, do-9), dobj(do-9, it-10), case(you-12, for-11), nmod:for(do-9, you-12), cc(do-9, but-13), nsubj(cost-16, it-14), aux(cost-16, would-15), conj:but(do-9, cost-16), dobj(cost-16, you-17), punct(get-4, .-18)] 	200
[nsubj(need-4, You-1), aux(need-4, do-2), neg(need-4, n't-3), root(ROOT-0, need-4), mark(know-6, to-5), xcomp(need-4, know-6), dobj(know-6, everything-7), punct(need-4, .-8)] 	[nsubj(want-5, They-1), advmod(want-5, just-2), aux(want-5, do-3), neg(want-5, n't-4), root(ROOT-0, want-5), dobj(want-5, you-6), mark(know-8, to-7), xcomp(want-5, know-8), dobj(know-8, it-9), punct(want-5, .-10)] 	201
[advmod(useful-4, Also-1), nsubj(useful-4, it-2), cop(useful-4, is-3), root(ROOT-0, useful-4), mark(keep-6, to-5), xcomp(useful-4, keep-6), det(consistency-8, the-7), dobj(keep-6, consistency-8), case(story-11, in-9), nmod:poss(story-11, your-10), nmod:in(keep-6, story-11), punct(useful-4, .-12)] 	[nsubj(important-3, It-1), cop(important-3, is-2), root(ROOT-0, important-3), mark(keep-5, to-4), xcomp(important-3, keep-5), det(story-7, the-6), dobj(keep-5, story-7), case(scope-10, in-8), det(scope-10, the-9), nmod:in(keep-5, scope-10), case(limit-13, of-11), nmod:poss(limit-13, your-12), nmod:of(scope-10, limit-13), punct(important-3, .-14)] 	202
[nsubj(think-2, I-1), root(ROOT-0, think-2), nsubj(habit-7, it-3), cop(habit-7, 's-4), advmod(habit-7, just-5), det(habit-7, a-6), ccomp(think-2, habit-7), punct(think-2, .-8)] 	[nsubj(think-2, I-1), root(ROOT-0, think-2), nsubj(idea-7, it-3), cop(idea-7, 's-4), det(idea-7, a-5), amod(idea-7, bad-6), ccomp(think-2, idea-7), punct(think-2, .-8)] 	203
[nsubj(idea-6, It-1), cop(idea-6, 's-2), neg(idea-6, not-3), det(idea-6, a-4), amod(idea-6, good-5), root(ROOT-0, idea-6), punct(idea-6, .-7)] 	[discourse(thing-8, No-1), punct(thing-8, ,-2), nsubj(thing-8, it-3), cop(thing-8, 's-4), neg(thing-8, not-5), det(thing-8, a-6), amod(thing-8, good-7), root(ROOT-0, thing-8), punct(thing-8, .-9)] 	204
[nsubj(thinking-3, I-1), aux(thinking-3, 'm-2), root(ROOT-0, thinking-3), nsubj(idea-8, it-4), cop(idea-8, 's-5), det(idea-8, a-6), amod(idea-8, bad-7), ccomp(thinking-3, idea-8), punct(thinking-3, .-9)] 	[nsubj(think-2, I-1), root(ROOT-0, think-2), nsubj(idea-7, it-3), cop(idea-7, 's-4), det(idea-7, a-5), amod(idea-7, bad-6), ccomp(think-2, idea-7), punct(think-2, .-8)] 	205
[nsubj(depends-2, It-1), root(ROOT-0, depends-2), mark(want-6, on-3), dobj(want-6, what-4), nsubj(want-6, you-5), advcl(depends-2, want-6), mark(do-8, to-7), xcomp(want-6, do-8), dep(want-14, next-9), punct(want-14, ,-10), cc(want-14, and-11), advmod(want-14, where-12), nsubj(want-14, you-13), ccomp(do-8, want-14), mark(do-16, to-15), xcomp(want-14, do-16), dobj(do-16, it-17), punct(depends-2, .-18)] 	[nsubj(need-2, You-1), root(ROOT-0, need-2), mark(pick-4, to-3), xcomp(need-2, pick-4), dobj(pick-4, how-5), cc(how-5, and-6), advmod(want-9, where-7), nsubj(want-9, you-8), conj:and(how-5, want-9), mark(place-11, to-10), xcomp(want-9, place-11), nmod:poss(foot-13, your-12), dobj(place-11, foot-13), cc(how-5, and-14), conj:and(how-5, do-15), dobj(do-15, it-16), punct(need-2, .-17)] 	206
[nsubj(have-2, You-1), root(ROOT-0, have-2), det(problem-4, a-3), dobj(have-2, problem-4), punct(have-2, .-5)] 	[nsubj(problem-5, This-1), cop(problem-5, is-2), det(problem-5, a-3), amod(problem-5, big-4), root(ROOT-0, problem-5), punct(problem-5, .-6)] 	207
[advmod(know-12, Unfortunately-1), det(answer-3, the-2), nsubjpass(know-12, answer-3), case(question-6, to-4), nmod:poss(question-6, your-5), nmod:to(answer-3, question-6), auxpass(know-12, is-7), nsubjpass(know-12, we-8), advmod(know-12, simply-9), aux(know-12, do-10), neg(know-12, not-11), root(ROOT-0, know-12), punct(know-12, .-13)] 	[mark(work-7, If-1), det(conversation-3, the-2), nsubj(work-7, conversation-3), cop(work-7, is-4), neg(work-7, not-5), case(work-7, about-6), advcl:about(know-10, work-7), punct(know-10, ,-8), nsubj(know-10, you-9), root(ROOT-0, know-10), dobj(is-14, what-11), det(answer-13, the-12), nsubj(is-14, answer-13), ccomp(know-10, is-14), case(question-18, to-15), nmod:poss(question-18, your-16), amod(question-18, own-17), nmod:to(is-14, question-18), punct(know-10, .-19)] 	208
[advmod(answered-8, Unfortunately-1), punct(answered-8, ,-2), det(question-4, this-3), nsubjpass(answered-8, question-4), aux(answered-8, can-5), neg(answered-8, not-6), auxpass(answered-8, be-7), root(ROOT-0, answered-8), case(generality-12, in-9), nmod:poss(generality-12, its-10), amod(generality-12, full-11), nmod:in(answered-8, generality-12), punct(answered-8, .-13)] 	[nsubjpass(answered-5, This-1), aux(answered-5, can-2), neg(answered-5, not-3), auxpass(answered-5, be-4), root(ROOT-0, answered-5), case(general-7, in-6), nmod:in(answered-5, general-7), punct(answered-5, .-8)] 	209
[nsubj(beware-4, I-1), aux(beware-4, would-2), advmod(beware-4, personally-3), root(ROOT-0, beware-4), case(Fool-8, of-5), det(Fool-8, the-6), compound(Fool-8, Motley-7), nmod:of(beware-4, Fool-8), punct(beware-4, .-9)] 	[nsubj(recommend-3, I-1), aux(recommend-3, would-2), root(ROOT-0, recommend-3), xcomp(recommend-3, looking-4), case(Fool-8, at-5), det(Fool-8, The-6), compound(Fool-8, Motley-7), nmod:at(looking-4, Fool-8), punct(recommend-3, .-9)] 	210
[nsubj(think-2, I-1), root(ROOT-0, think-2), expl(is-4, there-3), ccomp(think-2, is-4), neg(is-4, n't-5), det(answer-8, a-6), amod(answer-8, general-7), nsubj(is-4, answer-8), punct(think-2, .-9)] 	[nsubj(think-4, I-1), aux(think-4, do-2), neg(think-4, n't-3), root(ROOT-0, think-4), expl(is-6, there-5), ccomp(think-4, is-6), det(definition-9, a-7), amod(definition-9, single-8), nsubj(is-6, definition-9), punct(think-4, .-10)] 	211
[nsubj(idea-6, It-1), cop(idea-6, 's-2), neg(idea-6, not-3), det(idea-6, a-4), amod(idea-6, good-5), root(ROOT-0, idea-6), punct(idea-6, .-7)] 	[neg(idea-4, Not-1), det(idea-4, a-2), amod(idea-4, good-3), root(ROOT-0, idea-4), punct(idea-4, .-5)] 	212
[nsubj(need-4, You-1), aux(need-4, do-2), neg(need-4, n't-3), root(ROOT-0, need-4), det(visa-6, any-5), dobj(need-4, visa-6), punct(need-4, .-7)] 	[nsubj(have-4, You-1), aux(have-4, do-2), neg(have-4, n't-3), root(ROOT-0, have-4), mark(worry-6, to-5), xcomp(have-4, worry-6), punct(have-4, .-7)] 	213
[nsubj(have-2, You-1), root(ROOT-0, have-2), mark(decide-4, to-3), xcomp(have-2, decide-4), dobj(want-7, what-5), nsubj(want-7, you-6), ccomp(decide-4, want-7), mark(get-9, to-8), xcomp(want-7, get-9), case(this-12, out-10), mwe(out-10, of-11), nmod:out_of(get-9, this-12), punct(have-2, .-13)] 	[nsubj(going-4, You-1), aux(going-4, 're-2), advmod(going-4, probably-3), root(ROOT-0, going-4), mark(have-6, to-5), xcomp(going-4, have-6), mark(read-8, to-7), xcomp(have-6, read-8), amod(blogs-10, various-9), dobj(read-8, blogs-10), mark(get-12, to-11), advcl(read-8, get-12), det:predet(information-15, all-13), det(information-15, the-14), dobj(get-12, information-15), nsubj(want-17, you-16), acl:relcl(information-15, want-17), punct(going-4, .-18)] 	214
[nsubj(had-2, I-1), root(ROOT-0, had-2), det(problem-5, the-3), amod(problem-5, same-4), dobj(had-2, problem-5), case(you-7, as-6), nmod:as(had-2, you-7), punct(had-2, .-8)] 	[nsubj(have-2, I-1), root(ROOT-0, have-2), advmod(problem-6, exactly-3), det(problem-6, the-4), amod(problem-6, same-5), dobj(have-2, problem-6), punct(have-2, .-7)] 	215
[nmod:poss(answer-2, My-1), root(ROOT-0, answer-2), case(question-5, to-3), nmod:poss(question-5, your-4), nmod:to(answer-2, question-5), dep(answer-2, is-6), punct(is-6, ``-7), root(``-7, Probably-8), dep(Probably-8, Not-9), punct(Not-9, ''-10), punct(Probably-8, .-11)] 	[det(answer-2, The-1), nsubj(really-8, answer-2), case(question-5, to-3), nmod:poss(question-5, your-4), nmod:to(answer-2, question-5), cop(really-8, is-6), neg(really-8, not-7), root(ROOT-0, really-8), punct(really-8, .-9)] 	216
[nsubj(do-3, You-1), aux(do-3, should-2), root(ROOT-0, do-3), dobj(do-3, it-4), punct(do-3, .-5)] 	[nsubj(do-4, You-1), aux(do-4, should-2), neg(do-4, never-3), root(ROOT-0, do-4), dobj(do-4, it-5), punct(do-4, .-6)] 	217
[nsubj(had-2, I-1), root(ROOT-0, had-2), det(problem-5, the-3), amod(problem-5, same-4), dobj(had-2, problem-5), case(you-7, as-6), nmod:as(had-2, you-7), punct(had-2, .-8)] 	[nsubj(had-2, I-1), root(ROOT-0, had-2), det(issue-5, the-3), amod(issue-5, same-4), dobj(had-2, issue-5), punct(had-2, .-6)] 	218
[root(ROOT-0, Hope-1), nsubj(is-3, this-2), acl:relcl(Hope-1, is-3), dobj(looking-7, what-4), nsubj(looking-7, you-5), aux(looking-7, are-6), ccomp(is-3, looking-7), nmod(looking-7, for-8), punct(Hope-1, .-9)] 	[root(ROOT-0, Is-1), det(kind-4, this-2), det(kind-4, the-3), nsubj(Is-1, kind-4), case(thing-6, of-5), nmod:of(kind-4, thing-6), nsubj(looking-9, you-7), aux(looking-9, 're-8), acl:relcl(thing-6, looking-9), nmod(looking-9, for-10), punct(Is-1, ?-11)] 	219
[expl(are-2, There-1), root(ROOT-0, are-2), nummod(things-4, two-3), nsubj(are-2, things-4), mark(consider-6, to-5), acl(things-4, consider-6), punct(are-2, :-7)] 	[nsubj(think-2, I-1), root(ROOT-0, think-2), expl(are-4, there-3), ccomp(think-2, are-4), nummod(things-7, two-5), amod(things-7, important-6), nsubj(are-4, things-7), mark(consider-9, to-8), acl(things-7, consider-9), punct(think-2, :-10)] 	220
[nsubj(much-4, It-1), cop(much-4, 's-2), advmod(much-4, pretty-3), root(ROOT-0, much-4), case(you-7, up-5), case(you-7, to-6), nmod:to(much-4, you-7), punct(much-4, .-8)] 	[nsubj(is-2, It-1), root(ROOT-0, is-2), advmod(is-2, up-3), case(you-5, to-4), nmod:to(up-3, you-5), punct(is-2, .-6)] 	221
[expl(are-2, There-1), root(ROOT-0, are-2), det(things-5, a-3), amod(things-5, few-4), nsubj(are-2, things-5), nsubj(do-8, you-6), aux(do-8, can-7), acl:relcl(things-5, do-8), punct(are-2, :-9)] 	[expl(are-2, There-1), root(ROOT-0, are-2), det(things-5, a-3), amod(things-5, few-4), nsubj(are-2, things-5), nsubj(need-7, you-6), acl:relcl(things-5, need-7), mark(consider-9, to-8), xcomp(need-7, consider-9), punct(are-2, :-10)] 	222
[det(answer-2, The-1), nsubj(stages-13, answer-2), case(this-4, to-3), nmod:to(answer-2, this-4), cc(this-4, and-5), det(questions-9, all-6), amod(questions-9, such-7), amod(questions-9, similar-8), conj:and(this-4, questions-9), cop(stages-13, is-10), case(stages-13, in-11), nummod(stages-13, two-12), root(ROOT-0, stages-13), punct(stages-13, :-14)] 	[det(answer-2, The-1), nsubj(is-6, answer-2), case(questions-5, to-3), det(questions-5, both-4), nmod:to(answer-2, questions-5), root(ROOT-0, is-6), punct(is-6, :-7), dep(is-6, Yes-8), punct(is-6, .-9)] 	223
[nsubj(impossible-3, It-1), cop(impossible-3, is-2), root(ROOT-0, impossible-3), mark(answer-5, to-4), xcomp(impossible-3, answer-5), det(question-7, this-6), dobj(answer-5, question-7), case(check-11, without-8), det(check-11, a-9), compound(check-11, form-10), nmod:without(answer-5, check-11), punct(impossible-3, .-12)] 	[nsubj(answer-5, This-1), cop(answer-5, is-2), det(answer-5, a-3), compound(answer-5, part-4), root(ROOT-0, answer-5), case(question-8, to-6), nmod:poss(question-8, your-7), nmod:to(answer-5, question-8)] 	224
[expl(are-2, There-1), root(ROOT-0, are-2), det(things-5, a-3), amod(things-5, few-4), nsubj(are-2, things-5), nsubj(do-8, you-6), aux(do-8, can-7), acl:relcl(things-5, do-8), punct(are-2, :-9)] 	[expl(are-2, There-1), root(ROOT-0, are-2), det(things-5, a-3), amod(things-5, few-4), nsubj(are-2, things-5), nsubj(think-7, I-6), acl:relcl(things-5, think-7), nsubj(do-10, you-8), aux(do-10, should-9), ccomp(think-7, do-10), punct(are-2, .-11)] 	225
[nsubj(depends-2, It-1), root(ROOT-0, depends-2), mark(want-6, on-3), dobj(want-6, what-4), nsubj(want-6, you-5), advcl(depends-2, want-6), mark(do-8, to-7), xcomp(want-6, do-8), dep(want-14, next-9), punct(want-14, ,-10), cc(want-14, and-11), advmod(want-14, where-12), nsubj(want-14, you-13), ccomp(do-8, want-14), mark(do-16, to-15), xcomp(want-14, do-16), dobj(do-16, it-17), punct(depends-2, .-18)] 	[nsubj(depends-2, It-1), root(ROOT-0, depends-2), case(what-4, on-3), nmod:on(depends-2, what-4), cc(what-4, and-5), advmod(going-9, where-6), nsubj(going-9, you-7), aux(going-9, are-8), conj:and(what-4, going-9), mark(do-11, to-10), xcomp(going-9, do-11), punct(depends-2, .-12)] 	226
[expl(are-2, There-1), root(ROOT-0, are-2), det(reasons-6, a-3), amod(reasons-6, few-4), amod(reasons-6, possible-5), nsubj(are-2, reasons-6), punct(are-2, .-7)] 	[expl(are-2, There-1), root(ROOT-0, are-2), det(reasons-5, a-3), amod(reasons-5, few-4), nsubj(are-2, reasons-5), nsubj(paint-7, that-6), acl:relcl(reasons-5, paint-7), dobj(paint-7, wrinkles-8), punct(are-2, .-9)] 	227
[expl(are-2, There-1), root(ROOT-0, are-2), nummod(options-4, three-3), nsubj(are-2, options-4), punct(are-2, :-5)] 	[expl(are-2, There-1), root(ROOT-0, are-2), advmod(three-4, only-3), nummod(options-5, three-4), nsubj(are-2, options-5), punct(are-2, :-6)] 	228
[advmod(think-2, So-1), root(ROOT-0, think-2), dobj(think-2, it-3), case(way-6, in-4), det(way-6, this-5), nmod:in(it-3, way-6), punct(think-2, .-7)] 	[root(ROOT-0, Think-1), case(it-3, of-2), nmod:of(Think-1, it-3), det(way-5, this-4), dobj(Think-1, way-5), punct(Think-1, .-6)] 	229
[advmod(work-4, Maybe-1), nsubj(work-4, this-2), aux(work-4, could-3), root(ROOT-0, work-4), case(you-6, for-5), nmod:for(work-4, you-6), punct(work-4, .-7)] 	[advmod(work-4, Maybe-1), nsubj(work-4, this-2), aux(work-4, can-3), root(ROOT-0, work-4), case(you-6, for-5), nmod:for(work-4, you-6), punct(work-4, .-7)] 	230
[nsubj(depends-2, It-1), root(ROOT-0, depends-2), mark(want-6, on-3), dobj(want-6, what-4), nsubj(want-6, you-5), advcl(depends-2, want-6), mark(do-8, to-7), xcomp(want-6, do-8), dep(want-14, next-9), punct(want-14, ,-10), cc(want-14, and-11), advmod(want-14, where-12), nsubj(want-14, you-13), ccomp(do-8, want-14), mark(do-16, to-15), xcomp(want-14, do-16), dobj(do-16, it-17), punct(depends-2, .-18)] 	[nsubj(can-2, They-1), root(ROOT-0, can-2), punct(can-2, ,-3), cc(can-2, but-4), det(way-6, the-5), conj:but(can-2, way-6), mark(do-8, to-7), acl(way-6, do-8), nsubj(depends-10, it-9), ccomp(do-8, depends-10), mark(have-14, on-11), dobj(have-14, what-12), nsubj(have-14, you-13), advcl(depends-10, have-14), xcomp(have-14, available-15), punct(can-2, .-16)] 	231
[nsubj(bet-6, Microwave-1), aux(bet-6, would-2), cop(bet-6, be-3), nmod:poss(bet-6, your-4), amod(bet-6, best-5), root(ROOT-0, bet-6), punct(bet-6, .-7)] 	[nmod:poss(bet-3, Your-1), amod(bet-3, best-2), nsubj(research-5, bet-3), cop(research-5, is-4), root(ROOT-0, research-5), punct(research-5, .-6)] 	232
[case(US-3, In-1), det(US-3, the-2), nmod:in(depend-7, US-3), punct(depend-7, ,-4), nsubj(depend-7, it-5), aux(depend-7, will-6), root(ROOT-0, depend-7), case(school-10, on-8), det(school-10, the-9), nmod:on(depend-7, school-10), punct(depend-7, .-11)] 	[nsubj(depend-3, This-1), aux(depend-3, will-2), root(ROOT-0, depend-3), case(university-6, on-4), det(university-6, the-5), nmod:on(depend-3, university-6), punct(depend-3, .-7)] 	233
[nsubj(idea-6, It-1), cop(idea-6, 's-2), neg(idea-6, not-3), det(idea-6, a-4), amod(idea-6, good-5), root(ROOT-0, idea-6), punct(idea-6, .-7)] 	[nsubj(idea-7, It-1), cop(idea-7, 's-2), neg(idea-7, not-3), advmod(idea-7, just-4), det(idea-7, a-5), amod(idea-7, good-6), root(ROOT-0, idea-7), punct(idea-7, ,-8), nsubj(idea-13, it-9), cop(idea-13, 's-10), det(idea-13, an-11), amod(idea-13, excellent-12), acl:relcl(idea-7, idea-13), punct(idea-7, .-14)] 	234
[expl(are-2, There-1), root(ROOT-0, are-2), det(things-5, a-3), amod(things-5, few-4), nsubj(are-2, things-5), nsubj(think-7, I-6), acl:relcl(things-5, think-7), nsubj(do-10, you-8), aux(do-10, should-9), ccomp(think-7, do-10), punct(are-2, .-11)] 	[expl(are-2, There-1), root(ROOT-0, are-2), det(things-6, a-3), amod(things-6, few-4), amod(things-6, minimally-effective-5), nsubj(are-2, things-6), nsubj(do-9, you-7), aux(do-9, can-8), acl:relcl(things-6, do-9), case(level-13, at-10), det(level-13, the-11), amod(level-13, personal-12), nmod:at(do-9, level-13), punct(are-2, .-14)] 	235
[nsubj(had-3, I-1), aux(had-3, 've-2), root(ROOT-0, had-3), det(problem-6, this-4), amod(problem-6, same-5), dobj(had-3, problem-6), punct(had-3, .-7)] 	[nsubj(had-2, I-1), root(ROOT-0, had-2), det(situation-5, this-3), amod(situation-5, same-4), dobj(had-2, situation-5), punct(had-2, .-6)] 	236
[nsubj(idea-6, This-1), cop(idea-6, is-2), neg(idea-6, not-3), det(idea-6, a-4), amod(idea-6, good-5), root(ROOT-0, idea-6), punct(idea-6, .-7)] 	[neg(idea-4, Not-1), det(idea-4, a-2), amod(idea-4, good-3), root(ROOT-0, idea-4), punct(idea-4, .-5)] 	237
[nsubj(realized-2, I-1), root(ROOT-0, realized-2), expl(is-4, there-3), ccomp(realized-2, is-4), advmod(answer-8, already-5), det(answer-8, an-6), amod(answer-8, accepted-7), nsubj(is-4, answer-8), cc(is-4, but-9), nsubj(figure-11, I-10), conj:but(is-4, figure-11), nsubj(add-14, I-12), aux(add-14, would-13), ccomp(figure-11, add-14), nmod:poss(cents-17, my-15), nummod(cents-17, 2-16), dobj(add-14, cents-17), punct(realized-2, .-18)] 	[nsubj(know-2, I-1), root(ROOT-0, know-2), nsubj(question-7, this-3), cop(question-7, is-4), det(question-7, an-5), amod(question-7, old-6), ccomp(know-2, question-7), cc(question-7, but-8), nsubj(feel-10, I-9), conj:but(question-7, feel-10), nsubj(add-13, I-11), aux(add-13, should-12), ccomp(feel-10, add-13), nmod:poss(cents-16, my-14), nummod(cents-16, 2-15), dobj(add-13, cents-16), punct(know-2, .-17)] 	238
[advmod(is-4, Yes-1), punct(is-4, ,-2), expl(is-4, there-3), root(ROOT-0, is-4), det(reason-6, a-5), nsubj(is-4, reason-6), mark(do-9, to-7), neg(do-9, not-8), acl(reason-6, do-9), dobj(propose-12, what-10), nsubj(propose-12, you-11), ccomp(do-9, propose-12), punct(is-4, .-13)] 	[dep(is-4, Yes-1), punct(is-4, ,-2), expl(is-4, there-3), root(ROOT-0, is-4), det(difference-7, a-5), compound(difference-7, chemical-6), nsubj(is-4, difference-7), punct(is-4, .-8)] 	239
[discourse(is-4, Yes-1), punct(is-4, ,-2), expl(is-4, there-3), root(ROOT-0, is-4), case(least-6, at-5), nmod:npmod(one-7, least-6), nsubj(is-4, one-7), case(knowledge-10, to-8), nmod:poss(knowledge-10, my-9), nmod:to(one-7, knowledge-10), punct(is-4, .-11)] 	[case(knowledge-3, To-1), nmod:poss(knowledge-3, my-2), nmod:to('s-6, knowledge-3), punct('s-6, ,-4), expl('s-6, there-5), root(ROOT-0, 's-6), neg(requirement-9, no-7), compound(requirement-9, time-8), nsubj('s-6, requirement-9), punct('s-6, .-10)] 	240
[nsubj(have-4, You-1), aux(have-4, do-2), neg(have-4, n't-3), root(ROOT-0, have-4), mark(worry-6, to-5), xcomp(have-4, worry-6), punct(have-4, .-7)] 	[nsubj(have-4, You-1), aux(have-4, do-2), neg(have-4, n't-3), root(ROOT-0, have-4), mark(do-6, to-5), xcomp(have-4, do-6), dobj(do-6, anything-7), mark(season-9, to-8), advcl(do-6, season-9), dobj(season-9, it-10), punct(have-4, .-11)] 	241
[expl(is-2, There-1), root(ROOT-0, is-2), neg(test-4, no-3), nsubj(is-2, test-4), nsubj(tell-7, that-5), aux(tell-7, can-6), acl:relcl(test-4, tell-7), dobj(tell-7, you-8), mark(sealed-12, if-9), nsubjpass(sealed-12, it-10), auxpass(sealed-12, is-11), advcl(tell-7, sealed-12), cc(sealed-12, or-13), conj:or(sealed-12, not-14), punct(is-2, .-15)] 	[expl(is-2, There-1), root(ROOT-0, is-2), neg(code-4, no-3), nsubj(is-2, code-4), acl(code-4, telling-5), dobj(telling-5, you-6), mark(do-11, that-7), nsubj(do-11, you-8), aux(do-11, can-9), neg(do-11, not-10), ccomp(telling-5, do-11), dobj(do-11, this-12), punct(is-2, .-13)] 	242
[advmod(make-5, Yes-1), punct(make-5, ,-2), nsubj(make-5, you-3), aux(make-5, should-4), root(ROOT-0, make-5), det(résumé-7, a-6), dobj(make-5, résumé-7), punct(make-5, .-8)] 	[discourse(talk-5, Yes-1), punct(talk-5, ,-2), nsubj(talk-5, you-3), aux(talk-5, should-4), root(ROOT-0, talk-5), case(professor-8, to-6), nmod:poss(professor-8, your-7), nmod:to(talk-5, professor-8), punct(talk-5, .-9)] 	243
[nsubj(feel-4, You-1), aux(feel-4, should-2), neg(feel-4, n't-3), root(ROOT-0, feel-4), det(obligation-6, any-5), dobj(feel-4, obligation-6), case(all-8, at-7), nmod:at(obligation-6, all-8), punct(feel-4, .-9)] 	[nsubj(need-4, You-1), aux(need-4, do-2), neg(need-4, n't-3), root(ROOT-0, need-4), dobj(need-4, sauce-5), case(all-7, at-6), nmod:at(need-4, all-7), punct(need-4, .-8)] 	244
[nsubj(had-3, I-1), aux(had-3, 've-2), root(ROOT-0, had-3), det(problem-6, this-4), amod(problem-6, same-5), dobj(had-3, problem-6), punct(had-3, .-7)] 	[nsubj(had-2, I-1), root(ROOT-0, had-2), det(problem-4, this-3), dobj(had-2, problem-4), advmod(had-2, before-5), punct(had-2, .-6)] 	245
[nsubj(have-3, You-1), aux(have-3, may-2), root(ROOT-0, have-3), case(experiment-5, to-4), nmod:to(have-3, experiment-5), cc(have-3, and-6), conj:and(have-3, find-7), dobj(like-10, what-8), nsubj(like-10, you-9), ccomp(find-7, like-10), punct(have-3, .-11)] 	[nsubj(have-2, You-1), root(ROOT-0, have-2), mark(find-4, to-3), xcomp(have-2, find-4), compound:prt(find-4, out-5), det(works-7, what-6), dobj(find-4, works-7), case(you-9, for-8), nmod:for(works-7, you-9), punct(have-2, .-10)] 	246
[nmod:poss(answer-2, My-1), root(ROOT-0, answer-2), case(question-5, to-3), nmod:poss(question-5, your-4), nmod:to(answer-2, question-5), dep(answer-2, is-6), punct(is-6, ``-7), root(``-7, Probably-8), dep(Probably-8, Not-9), punct(Not-9, ''-10), punct(Probably-8, .-11)] 	[nsubj(answer-5, This-1), cop(answer-5, is-2), det(answer-5, a-3), compound(answer-5, part-4), root(ROOT-0, answer-5), case(question-8, to-6), nmod:poss(question-8, your-7), nmod:to(answer-5, question-8)] 	247
[det(thing-3, The-1), amod(thing-3, key-2), nsubj(is-7, thing-3), mark(realize-5, to-4), acl(thing-3, realize-5), advmod(realize-5, here-6), root(ROOT-0, is-7), mark(job-13, that-8), nsubj(job-13, it-9), cop(job-13, 's-10), neg(job-13, not-11), nmod:poss(job-13, your-12), ccomp(is-7, job-13), mark(make-15, to-14), acl(job-13, make-15), dobj(make-15, people-16), dep(job-13, do-17), nmod:poss(work-19, their-18), dobj(do-17, work-19), punct(is-7, .-20)] 	[nsubj(problem-6, It-1), advmod(problem-6, really-2), cop(problem-6, is-3), neg(problem-6, n't-4), nmod:poss(problem-6, your-5), root(ROOT-0, problem-6), advmod(going-10, how-7), nsubj(going-10, they-8), aux(going-10, are-9), ccomp(problem-6, going-10), mark(find-12, to-11), xcomp(going-10, find-12), det(person-15, a-13), amod(person-15, qualified-14), dobj(find-12, person-15), mark(do-17, to-16), acl(person-15, do-17), det(job-19, the-18), dobj(do-17, job-19), punct(problem-6, .-20)] 	248
[neg(answer-4, Not-1), det(answer-4, a-2), amod(answer-4, direct-3), root(ROOT-0, answer-4), case(question-7, to-5), det(question-7, the-6), nmod:to(answer-4, question-7), punct(answer-4, ,-8), cc(answer-4, but-9), conj:but(answer-4, something-10), mark(consider-12, to-11), acl(something-10, consider-12), punct(answer-4, .-13)] 	[neg(answer-4, Not-1), det(answer-4, a-2), amod(answer-4, real-3), root(ROOT-0, answer-4), case(question-7, to-5), nmod:poss(question-7, your-6), nmod:to(answer-4, question-7), punct(answer-4, ,-8), cc(answer-4, but-9), advmod(helps-12, maybe-10), nsubj(helps-12, it-11), conj:but(answer-4, helps-12), punct(answer-4, .-13)] 	249
[expl(are-2, There-1), root(ROOT-0, are-2), nummod(causes-5, two-3), amod(causes-5, possible-4), nsubj(are-2, causes-5), case(this-7, for-6), nmod:for(causes-5, this-7), punct(are-2, :-8)] 	[expl(are-2, There-1), root(ROOT-0, are-2), nummod(options-4, two-3), nsubj(are-2, options-4), case(you-6, for-5), nmod:for(options-4, you-6), punct(are-2, --7)] 	250
[nsubj(agree-2, I-1), root(ROOT-0, agree-2), case(comments-6, with-3), det(comments-6, the-4), amod(comments-6, other-5), nmod:with(agree-2, comments-6), punct(agree-2, .-7)] 	[nsubj(agree-2, I-1), root(ROOT-0, agree-2), case(comments-6, with-3), det(comments-6, the-4), amod(comments-6, previous-5), nmod:with(agree-2, comments-6), punct(agree-2, .-7)] 	251
[det(answer-2, The-1), nsubj(is-6, answer-2), case(questions-5, to-3), det(questions-5, both-4), nmod:to(answer-2, questions-5), root(ROOT-0, is-6), punct(is-6, :-7), dep(is-6, Yes-8), punct(is-6, .-9)] 	[mark(yes-10, If-1), det(answer-3, the-2), nsubj(yes-10, answer-3), case(any-5, to-4), nmod:to(answer-3, any-5), case(questions-8, of-6), det(questions-8, these-7), nmod:of(any-5, questions-8), cop(yes-10, is-9), advcl(worthwhile-16, yes-10), punct(worthwhile-16, ,-11), det(PhD-13, a-12), nsubj(worthwhile-16, PhD-13), aux(worthwhile-16, may-14), cop(worthwhile-16, be-15), root(ROOT-0, worthwhile-16), case(you-18, for-17), nmod:for(worthwhile-16, you-18), punct(worthwhile-16, .-19)] 	252
[nsubj(depends-3, It-1), advmod(depends-3, rather-2), root(ROOT-0, depends-3), case(which-5, on-4), nmod:on(depends-3, which-5), dep(which-5, country-6), nsubj(in-9, you-7), cop(in-9, 're-8), acl:relcl(country-6, in-9), punct(depends-3, .-10)] 	[nsubj(depends-2, That-1), root(ROOT-0, depends-2), case(which-4, on-3), nmod:on(depends-2, which-4), dep(which-4, country-5), nsubj(in-8, you-6), cop(in-8, are-7), acl:relcl(country-5, in-8), punct(depends-2, .-9)] 	253
[nsubj(idea-5, This-1), cop(idea-5, is-2), det(idea-5, a-3), amod(idea-5, terrible-4), root(ROOT-0, idea-5), punct(idea-5, .-6)] 	[nsubj(idea-5, This-1), cop(idea-5, is-2), det(idea-5, a-3), amod(idea-5, bad-4), root(ROOT-0, idea-5), punct(idea-5, .-6)] 	254

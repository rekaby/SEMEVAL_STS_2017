[advmod(make-4, How-1), aux(make-4, do-2), nsubj(make-4, I-3), root(ROOT-0, make-4), det(desk-8, a-5), compound(desk-8, height-6), amod(desk-8, adjustable-7), dobj(make-4, desk-8), punct(make-4, ?-9)] 	[advmod(build-4, How-1), aux(build-4, can-2), nsubj(build-4, I-3), root(ROOT-0, build-4), det(wall-6, a-5), nsubj(mounted-7, wall-6), xcomp(build-4, mounted-7), amod(desk-10, adjustable-8), compound(desk-10, height-9), dobj(mounted-7, desk-10), punct(build-4, ?-11)] 	1
[advmod(find-4, How-1), aux(find-4, can-2), nsubj(find-4, I-3), root(ROOT-0, find-4), compound:prt(find-4, out-5), advmod(outlet-12, why-6), nmod:poss(trips-10, my-7), amod(trips-10, washing-8), compound(trips-10, machine-9), nsubj(outlet-12, trips-10), det(outlet-12, the-11), advcl(find-4, outlet-12), punct(find-4, ?-13)] 	[advmod(figure-4, How-1), aux(figure-4, can-2), nsubj(figure-4, I-3), root(ROOT-0, figure-4), compound:prt(figure-4, out-5), advmod(tripping-11, why-6), nmod:poss(machine-9, my-7), amod(machine-9, washing-8), nsubj(tripping-11, machine-9), aux(tripping-11, is-10), advcl(figure-4, tripping-11), det(receptacle-14, the-12), compound(receptacle-14, GFCI-13), dobj(tripping-11, receptacle-14), punct(figure-4, ?-15)] 	2
[aux(use-3, Should-1), nsubj(use-3, I-2), root(ROOT-0, use-3), compound(money-5, IRA-4), dobj(use-3, money-5), mark(pay-7, to-6), advcl(use-3, pay-7), compound:prt(pay-7, down-8), nmod:poss(loans-11, my-9), compound(loans-11, student-10), dobj(pay-7, loans-11), punct(use-3, ?-12)] 	[aux(cash-3, Should-1), nsubj(cash-3, I-2), root(ROOT-0, cash-3), compound:prt(cash-3, out-4), nmod:poss(IRA-6, my-5), dobj(cash-3, IRA-6), mark(pay-8, to-7), advcl(cash-3, pay-8), nmod:poss(loans-11, my-9), compound(loans-11, student-10), dobj(pay-8, loans-11), punct(cash-3, ?-12)] 	3
[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(repair-7, to-6), acl(way-5, repair-7), det(bathtub-10, a-8), amod(bathtub-10, cracked-9), dobj(repair-7, bathtub-10), punct(What-1, ?-11)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(fix-7, to-6), acl(way-5, fix-7), det(floor-10, this-8), compound(floor-10, garage-9), dobj(fix-7, floor-10), punct(What-1, ?-11)] 	4
[root(ROOT-0, What-1), cop(What-1, 's-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(store-7, to-6), acl(way-5, store-7), dobj(store-7, asparagus-8), punct(What-1, ?-9)] 	[root(ROOT-0, What-1), cop(What-1, 's-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(store-7, to-6), acl(way-5, store-7), amod(rice-10, unused-8), compound(rice-10, sushi-9), dobj(store-7, rice-10), punct(What-1, ?-11)] 	5
[root(ROOT-0, What-1), cop(What-1, are-2), det(coach-6, the-3), compound(coach-6, bus-4), punct(coach-6, -LRB--5), nsubj(What-1, coach-6), punct(coach-6, -RRB--7), dep(coach-6, connections-8), case(Thessaloniki-10, from-9), nmod:from(connections-8, Thessaloniki-10), punct(Thessaloniki-10, ,-11), appos(Thessaloniki-10, Greece-12), case(Tbilisi-14, to-13), nmod:to(Greece-12, Tbilisi-14), punct(Tbilisi-14, ,-15), appos(Tbilisi-14, Georgia-16), punct(What-1, ?-17)] 	[cop(bus-4, Is-1), expl(bus-4, there-2), det(bus-4, a-3), root(ROOT-0, bus-4), case(Tbilisi-6, from-5), nmod:from(bus-4, Tbilisi-6), punct(Tbilisi-6, ,-7), appos(Tbilisi-6, Georgia-8), case(Thessaloniki-10, to-9), nmod:to(Georgia-8, Thessaloniki-10), punct(Thessaloniki-10, ,-11), appos(Thessaloniki-10, Greece-12), punct(bus-4, ?-13)] 	6
[advmod(replace-4, How-1), aux(replace-4, can-2), nsubj(replace-4, I-3), root(ROOT-0, replace-4), det(chain-10, a-5), compound(chain-10, ceiling-6), compound(chain-10, fan-7), amod(chain-10, light-8), compound(chain-10, pull-9), dobj(replace-4, chain-10), punct(replace-4, ?-11)] 	[advmod(replace-4, How-1), aux(replace-4, can-2), nsubj(replace-4, I-3), root(ROOT-0, replace-4), nmod:poss(fixture-7, my-5), amod(fixture-7, light-6), dobj(replace-4, fixture-7), case(fan-11, with-8), det(fan-11, a-9), compound(fan-11, ceiling-10), nmod:with(fixture-7, fan-11), punct(replace-4, ?-12)] 	7
[advmod(connect-4, How-1), aux(connect-4, can-2), nsubj(connect-4, I-3), root(ROOT-0, connect-4), amod(wires-6, additional-5), dobj(connect-4, wires-6), case(receptacle-9, to-7), det(receptacle-9, a-8), nmod:to(connect-4, receptacle-9), punct(connect-4, ?-10)] 	[advmod(connect-4, How-1), aux(connect-4, do-2), nsubj(connect-4, I-3), root(ROOT-0, connect-4), det(wires-6, the-5), dobj(connect-4, wires-6), case(receptacle-10, to-7), det(receptacle-10, this-8), amod(receptacle-10, USB-9), nmod:to(connect-4, receptacle-10), punct(connect-4, ?-11)] 	8
[det(kind-2, What-1), dep(is-5, kind-2), case(socket-4, of-3), nmod:of(kind-2, socket-4), root(ROOT-0, is-5), nsubj(is-5, this-6), punct(is-5, ?-7)] 	[det(type-2, What-1), dep(is-5, type-2), case(faucet-4, of-3), nmod:of(type-2, faucet-4), root(ROOT-0, is-5), nsubj(is-5, this-6), punct(is-5, ?-7)] 	9
[root(ROOT-0, What-1), cop(What-1, is-2), det(difference-4, the-3), nsubj(What-1, difference-4), case(stock-7, between-5), det(stock-7, a-6), nmod:between(difference-4, stock-7), cc(stock-7, and-8), det(bond-10, a-9), conj:and(stock-7, bond-10), punct(What-1, ?-11)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(difference-4, the-3), nsubj(What-1, difference-4), case(mode-7, between-5), det(mode-7, a-6), nmod:between(difference-4, mode-7), cc(mode-7, and-8), det(scale-10, a-9), conj:and(mode-7, scale-10), punct(What-1, ?-11)] 	10
[advmod(maintain-4, How-1), aux(maintain-4, do-2), nsubj(maintain-4, I-3), root(ROOT-0, maintain-4), det(relationship-7, a-5), amod(relationship-7, good-6), dobj(maintain-4, relationship-7), case(boss-11, with-8), nmod:poss(boss-11, my-9), amod(boss-11, old-10), nmod:with(relationship-7, boss-11), mark(promoted-14, after-12), auxpass(promoted-14, being-13), advcl(maintain-4, promoted-14), punct(maintain-4, ?-15)] 	[advmod(maintain-4, How-1), aux(maintain-4, do-2), nsubj(maintain-4, I-3), root(ROOT-0, maintain-4), det(relationship-7, a-5), amod(relationship-7, good-6), dobj(maintain-4, relationship-7), case(employer-10, with-8), det(employer-10, an-9), nmod:with(relationship-7, employer-10), mark(resigning-12, after-11), advcl(maintain-4, resigning-12), punct(maintain-4, ?-13)] 	11
[advmod(keep-4, How-1), aux(keep-4, do-2), nsubj(keep-4, I-3), root(ROOT-0, keep-4), det(egg-6, an-5), dobj(keep-4, egg-6), mark(cracking-8, from-7), advcl(keep-4, cracking-8), mark(boiled-11, while-9), auxpass(boiled-11, being-10), advcl(cracking-8, boiled-11), punct(keep-4, ?-12)] 	[advmod(prevent-4, How-1), aux(prevent-4, do-2), nsubj(prevent-4, I-3), root(ROOT-0, prevent-4), det(egg-6, an-5), dobj(prevent-4, egg-6), acl(egg-6, cracking-7), mark(boiling-10, while-8), amod(boiling-10, hard-9), advcl(cracking-7, boiling-10), dobj(boiling-10, it-11), punct(prevent-4, ?-12)] 	12
[advmod(prepare-4, How-1), aux(prepare-4, can-2), nsubj(prepare-4, I-3), root(ROOT-0, prepare-4), det(wall-8, this-5), amod(wall-8, old-6), compound(wall-8, exterior-7), dobj(prepare-4, wall-8), case(painting-10, for-9), nmod:for(prepare-4, painting-10), punct(prepare-4, ?-11)] 	[advmod(prepare-4, How-1), aux(prepare-4, do-2), nsubj(prepare-4, I-3), root(ROOT-0, prepare-4), det(wall-8, this-5), amod(wall-8, porous-6), amod(wall-8, interior-7), dobj(prepare-4, wall-8), case(paint-10, for-9), nmod:for(prepare-4, paint-10), punct(prepare-4, ?-11)] 	13
[advmod(water-5, Why-1), cop(water-5, is-2), expl(water-5, there-3), neg(water-5, no-4), root(ROOT-0, water-5), case(kitchen-8, in-6), det(kitchen-8, the-7), nmod:in(water-5, kitchen-8), punct(water-5, ?-9)] 	[advmod(water-6, Why-1), cop(water-6, is-2), expl(water-6, there-3), neg(water-6, no-4), amod(water-6, hot-5), root(ROOT-0, water-6), case(kitchen-9, in-7), det(kitchen-9, the-8), nmod:in(water-6, kitchen-9), punct(water-6, ?-10)] 	14
[nsubj(do-5, What-1), advmod(do-5, more-2), aux(do-5, can-3), nsubj(do-5, I-4), root(ROOT-0, do-5), mark(improve-7, to-6), xcomp(do-5, improve-7), nmod:poss(score-10, my-8), compound(score-10, credit-9), dobj(improve-7, score-10), punct(do-5, ?-11)] 	[aux(pay-3, Can-1), nsubj(pay-3, I-2), root(ROOT-0, pay-3), det(agency-6, a-4), compound(agency-6, collection-5), dobj(pay-3, agency-6), case(way-9, in-7), det(way-9, a-8), nmod:in(pay-3, way-9), nsubj(improve-12, that-10), aux(improve-12, will-11), acl:relcl(way-9, improve-12), nmod:poss(score-15, my-13), compound(score-15, credit-14), dobj(improve-12, score-15), punct(pay-3, ?-16)] 	15
[advmod(track-4, How-1), aux(track-4, do-2), nsubj(track-4, I-3), root(ROOT-0, track-4), compound(performance-6, investment-5), dobj(track-4, performance-6), case(Quicken-8, in-7), nmod:in(performance-6, Quicken-8), case(rollovers-10, across-9), nmod:across(performance-6, rollovers-10), punct(track-4, ?-11)] 	[advmod(track-4, How-1), aux(track-4, do-2), nsubj(track-4, I-3), root(ROOT-0, track-4), amod(rollovers-6, 401k-5), dobj(track-4, rollovers-6), case(Quicken-8, in-7), nmod:in(track-4, Quicken-8), punct(track-4, ?-9)] 	16
[aux(ask-3, Can-1), nsubj(ask-3, I-2), root(ROOT-0, ask-3), det(company-5, a-4), dobj(ask-3, company-5), dobj(wear-9, what-6), nsubj(wear-9, I-7), aux(wear-9, should-8), acl:relcl(company-5, wear-9), case(interview-12, to-10), det(interview-12, an-11), nmod:to(wear-9, interview-12), punct(ask-3, ?-13)] 	[dobj(ask-4, What-1), aux(ask-4, should-2), nsubj(ask-4, I-3), root(ROOT-0, ask-4), case(applicant-7, as-5), det(applicant-7, an-6), nmod:as(ask-4, applicant-7), case(interview-11, in-8), det(interview-11, a-9), compound(interview-11, job-10), nmod:in(ask-4, interview-11), punct(ask-4, ?-12)] 	17
[advmod(remove-4, How-1), aux(remove-4, do-2), nsubj(remove-4, you-3), root(ROOT-0, remove-4), dobj(remove-4, mold-5), case(tent-8, from-6), det(tent-8, a-7), nmod:from(remove-4, tent-8), punct(remove-4, ?-9)] 	[advmod(remove-4, How-1), aux(remove-4, do-2), nsubj(remove-4, I-3), root(ROOT-0, remove-4), dobj(remove-4, mildew-5), case(tent-8, from-6), det(tent-8, a-7), nmod:from(remove-4, tent-8), punct(remove-4, ?-9)] 	18
[compound(tax-3, U.S.-1), compound(tax-3, income-2), root(ROOT-0, tax-3), cc(tax-3, &-4), amod(donations-6, charitable-5), conj:&(tax-3, donations-6), punct(tax-3, :-7), advmod(much-9, How-8), nsubj(tax-12, much-9), cop(tax-12, is-10), compound(tax-12, income-11), dep(tax-3, tax-12), acl(tax-12, reduced-13), case(donations-15, by-14), nmod:by(reduced-13, donations-15), punct(tax-12, ?-16)] 	[compound(tax-3, UK-1), compound(tax-3, income-2), root(ROOT-0, tax-3), cc(tax-3, &-4), amod(donations-6, charitable-5), conj:&(tax-3, donations-6), punct(tax-3, :-7), advmod(much-9, How-8), nsubj(tax-12, much-9), cop(tax-12, is-10), compound(tax-12, income-11), dep(tax-3, tax-12), acl(tax-12, reduced-13), case(donations-15, by-14), nmod:by(reduced-13, donations-15), punct(tax-12, ?-16)] 	19
[root(ROOT-0, Bar-1), dep(Bar-1, ware-2), punct(ware-2, --3), det(kind-5, What-4), dep(is-8, kind-5), case(glass-7, of-6), nmod:of(kind-5, glass-7), dep(ware-2, is-8), nsubj(is-8, this-9), punct(Bar-1, ?-10)] 	[det(kind-2, What-1), dep(is-5, kind-2), case(glass-4, of-3), nmod:of(kind-2, glass-4), root(ROOT-0, is-5), nsubj(is-5, this-6), punct(is-5, ?-7)] 	20
[aux(need-8, Would-1), det(citizen-4, a-2), amod(citizen-4, Colombian-3), nsubj(need-8, citizen-4), case(residency-7, with-5), amod(residency-7, Canadian-6), nmod:with(citizen-4, residency-7), root(ROOT-0, need-8), det(visa-11, a-9), compound(visa-11, transit-10), dobj(need-8, visa-11), case(UK-14, for-12), det(UK-14, the-13), nmod:for(visa-11, UK-14), punct(need-8, ?-15)] 	[aux(Need-3, Will-1), nsubj(Need-3, I-2), root(ROOT-0, Need-3), det(visa-6, a-4), compound(visa-6, Transit-5), dobj(Need-3, visa-6), cc(visa-6, or-7), conj:or(visa-6, ESTA-8), case(US-11, for-9), det(US-11, the-10), nmod:for(visa-6, US-11), case(Canadian-14, as-12), det(Canadian-14, a-13), nmod:as(Need-3, Canadian-14), punct(Need-3, ?-15)] 	21
[aux(need-3, Do-1), nsubj(need-3, I-2), root(ROOT-0, need-3), mark(apply-5, to-4), xcomp(need-3, apply-5), case(visa-10, for-6), det(visa-10, a-7), compound(visa-10, UK-8), compound(visa-10, transit-9), nmod:for(apply-5, visa-10), advmod(have-13, when-11), nsubj(have-13, I-12), advcl(apply-5, have-13), det(visa-16, a-14), compound(visa-16, visitor-15), dobj(have-13, visa-16), punct(need-3, ?-17)] 	[aux(need-3, Do-1), nsubj(need-3, I-2), root(ROOT-0, need-3), det(visa-8, a-4), compound(visa-8, UK-5), compound(visa-8, airside-6), compound(visa-8, transit-7), dobj(need-3, visa-8), punct(need-3, ,-9), mark(have-13, if-10), nsubj(have-13, I-11), advmod(have-13, already-12), advcl(need-3, have-13), det(visa-17, a-14), compound(visa-17, UK-15), compound(visa-17, visitor-16), dobj(have-13, visa-17), punct(need-3, ?-18)] 	22
[root(ROOT-0, Is-1), nsubj(possible-3, it-2), xcomp(Is-1, possible-3), mark(replace-5, to-4), xcomp(possible-3, replace-5), det(switch-7, a-6), dobj(replace-5, switch-7), case(receptacle-10, with-8), det(receptacle-10, a-9), nmod:with(switch-7, receptacle-10), punct(Is-1, ?-11)] 	[root(ROOT-0, Is-1), nsubj(safe-3, it-2), xcomp(Is-1, safe-3), mark(replace-5, to-4), xcomp(safe-3, replace-5), det(switch-7, a-6), dobj(replace-5, switch-7), case(dimmer-10, with-8), det(dimmer-10, a-9), nmod:with(switch-7, dimmer-10), case(spots-13, on-11), compound(spots-13, halogen-12), nmod:on(dimmer-10, spots-13), punct(Is-1, ?-14)] 	23
[root(ROOT-0, Do-1), nsubj(need-4, I-2), advmod(need-4, really-3), ccomp(Do-1, need-4), det(pump-8, a-5), amod(pump-8, redundant-6), compound(pump-8, sump-7), dobj(need-4, pump-8), punct(Do-1, ?-9)] 	[aux(need-3, Do-1), nsubj(need-3, I-2), root(ROOT-0, need-3), mark(install-5, to-4), xcomp(need-3, install-5), det(pump-8, a-6), compound(pump-8, sump-7), dobj(install-5, pump-8), punct(need-3, ?-9)] 	24
[root(ROOT-0, Layover-1), case(Narita-3, at-2), nmod:at(Layover-1, Narita-3), case(hours-6, for-4), nummod(hours-6, 3-5), nmod:for(Layover-1, hours-6), punct(Layover-1, .-7)] [aux(need-3, Do-1), nsubj(need-3, i-2), root(ROOT-0, need-3), det(visa-6, a-4), compound(visa-6, transit-5), dobj(need-3, visa-6), punct(need-3, ?-7)] 	[root(ROOT-0, Layover-1), case(Narita-3, at-2), nmod:at(Layover-1, Narita-3), punct(Narita-3, ,-4), appos(Narita-3, Japan-5), punct(Layover-1, .-6)] [aux(need-3, Do-1), nsubj(need-3, I-2), root(ROOT-0, need-3), det(visa-6, a-4), compound(visa-6, transit-5), dobj(need-3, visa-6), punct(need-3, ?-7)] 	25
[aux(connect-3, Can-1), nsubj(connect-3, I-2), root(ROOT-0, connect-3), nummod(lines-6, two-4), compound(lines-6, load-5), dobj(connect-3, lines-6), case(receptacle-10, to-7), det(receptacle-10, a-8), compound(receptacle-10, GFCI-9), nmod:to(connect-3, receptacle-10), punct(connect-3, ?-11)] 	[advmod(connect-4, How-1), aux(connect-4, can-2), nsubj(connect-4, I-3), root(ROOT-0, connect-4), amod(wires-6, additional-5), dobj(connect-4, wires-6), case(receptacle-9, to-7), det(receptacle-9, a-8), nmod:to(connect-4, receptacle-9), punct(connect-4, ?-10)] 	26
[advmod(work-4, How-1), aux(work-4, can-2), nsubj(work-4, I-3), root(ROOT-0, work-4), compound:prt(work-4, out-5), advmod(valuable-7, how-6), dep(boss-12, valuable-7), nsubj(boss-12, I-8), cop(boss-12, am-9), case(boss-12, to-10), nmod:poss(boss-12, my-11), dep(work-4, boss-12), cc(boss-12, and-13), conj:and(boss-12, company-14), punct(work-4, ?-15)] 	[advmod(convince-4, How-1), aux(convince-4, can-2), nsubj(convince-4, I-3), root(ROOT-0, convince-4), nmod:poss(boss-6, my-5), dobj(convince-4, boss-6), nsubj(person-11, I-7), cop(person-11, am-8), det(person-11, the-9), amod(person-11, right-10), acl:relcl(boss-6, person-11), mark(lead-13, to-12), acl(person-11, lead-13), det(team-16, a-14), amod(team-16, future-15), dobj(lead-13, team-16), punct(convince-4, ?-17)] 	27
[advmod(replace-4, How-1), aux(replace-4, do-2), nsubj(replace-4, I-3), root(ROOT-0, replace-4), det(bulb-8, a-5), amod(bulb-8, broken-6), compound(bulb-8, halogen-7), dobj(replace-4, bulb-8), case(light-12, in-9), det(light-12, the-10), amod(light-12, recessed-11), nmod:in(replace-4, light-12), case(bathroom-15, in-13), nmod:poss(bathroom-15, my-14), nmod:in(light-12, bathroom-15), punct(replace-4, ?-16)] 	[advmod(replace-4, How-1), aux(replace-4, can-2), nsubj(replace-4, I-3), root(ROOT-0, replace-4), det(bulb-6, the-5), dobj(replace-4, bulb-6), case(fan-10, in-7), det(fan-10, this-8), compound(fan-10, ceiling-9), nmod:in(replace-4, fan-10), punct(replace-4, ?-11)] 	28
[aux(need-3, Do-1), nsubj(need-3, I-2), root(ROOT-0, need-3), mark(apply-5, to-4), xcomp(need-3, apply-5), case(ESTA-7, for-6), nmod:for(apply-5, ESTA-7), punct(need-3, ?-8)] 	[root(ROOT-0, Flying-1), case(California-3, from-2), nmod:from(Flying-1, California-3), case(Texas-5, to-4), nmod:to(Flying-1, Texas-5), punct(Flying-1, :-6), aux(need-9, do-7), nsubj(need-9, I-8), parataxis(Flying-1, need-9), dobj(need-9, ESTA-10), punct(Flying-1, ?-11)] 	29
[advmod(patch-4, How-1), aux(patch-4, should-2), nsubj(patch-4, I-3), root(ROOT-0, patch-4), det(ceiling-7, a-5), compound(ceiling-7, popcorn-6), dobj(patch-4, ceiling-7), punct(patch-4, ?-8)] 	[aux(replace-3, Should-1), nsubj(replace-3, I-2), root(ROOT-0, replace-3), cc(replace-3, or-4), conj:or(replace-3, patch-5), det(ceiling-8, a-6), compound(ceiling-8, plaster-7), dobj(patch-5, ceiling-8), punct(replace-3, ?-9)] 	30
[dobj(do-4, What-1), aux(do-4, do-2), nsubj(do-4, I-3), root(ROOT-0, do-4), mark(respond-14, if-5), det(professor-7, a-6), nsubj(respond-14, professor-7), case(university-11, at-8), det(university-11, a-9), amod(university-11, foreign-10), nmod:at(professor-7, university-11), aux(respond-14, does-12), neg(respond-14, n't-13), advcl(do-4, respond-14), case(emails-17, to-15), nmod:poss(emails-17, my-16), nmod:to(respond-14, emails-17), punct(do-4, ?-18)] 	[dobj(do-4, What-1), aux(do-4, should-2), nsubj(do-4, I-3), root(ROOT-0, do-4), mark(says-8, if-5), det(professor-7, a-6), nsubj(says-8, professor-7), advcl(do-4, says-8), nsubj(understand-12, she-9), aux(understand-12, does-10), neg(understand-12, n't-11), ccomp(says-8, understand-12), nmod:poss(questions-14, my-13), dobj(understand-12, questions-14), case(hours-17, in-15), compound(hours-17, office-16), nmod:in(questions-14, hours-17), punct(do-4, ?-18)] 	31
[advmod(keep-4, How-1), aux(keep-4, can-2), nsubj(keep-4, I-3), root(ROOT-0, keep-4), nmod:poss(dog-6, my-5), dobj(keep-4, dog-6), case(barking-8, from-7), nmod:from(keep-4, barking-8), advmod(know-13, when-9), nsubj(know-13, I-10), aux(know-13, do-11), neg(know-13, n't-12), advcl(keep-4, know-13), dobj(barking-17, what-14), nsubj(barking-17, he-15), aux(barking-17, 's-16), ccomp(know-13, barking-17), compound:prt(barking-17, at-18), punct(keep-4, ?-19)] 	[advmod(stop-4, How-1), aux(stop-4, do-2), nsubj(stop-4, I-3), root(ROOT-0, stop-4), nmod:poss(dog-6, my-5), dobj(stop-4, dog-6), case(barking-8, from-7), nmod:from(stop-4, barking-8), case(people-10, at-9), nmod:at(barking-8, people-10), case(fence-13, through-11), det(fence-13, the-12), nmod:through(barking-8, fence-13), punct(stop-4, ?-14)] 	32
[root(ROOT-0, Travelling-1), case(Romania-3, to-2), nmod:to(Travelling-1, Romania-3), case(days-6, for-4), nummod(days-6, 4-5), nmod:for(Travelling-1, days-6), case(visa-9, by-7), compound(visa-9, Schengen-8), nmod:by(days-6, visa-9), acl(visa-9, issued-10), case(Germany-12, by-11), nmod:by(issued-10, Germany-12), punct(Travelling-1, ?-13)] 	[root(ROOT-0, Travelling-1), case(Romania-3, to-2), nmod:to(Travelling-1, Romania-3), case(visa-9, on-4), det(visa-9, a-5), amod(visa-9, short-6), compound(visa-9, stay-7), compound(visa-9, Schengen-8), nmod:on(Travelling-1, visa-9), acl(visa-9, issued-10), case(France-12, by-11), nmod:by(issued-10, France-12), punct(Travelling-1, ?-13)] 	33
[root(ROOT-0, Is-1), nsubj(ok-3, it-2), ccomp(Is-1, ok-3), mark(apply-5, to-4), xcomp(ok-3, apply-5), case(program-12, for-6), advmod(one-9, more-7), mwe(more-7, than-8), nummod(program-12, one-9), compound(program-12, Phd-10), compound(program-12, student-11), nmod:for(apply-5, program-12), punct(Is-1, ?-13)] 	[root(ROOT-0, Is-1), nsubj(advisable-3, it-2), xcomp(Is-1, advisable-3), mark(apply-5, to-4), xcomp(advisable-3, apply-5), case(program-11, to-6), advmod(one-9, more-7), mwe(more-7, than-8), nummod(program-11, one-9), compound(program-11, PhD-10), nmod:to(apply-5, program-11), punct(Is-1, ?-12)] 	34
[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, professional-4), nsubj(What-1, way-5), mark(follow-7, to-6), acl(way-5, follow-7), compound:prt(follow-7, up-8), case(manager-11, with-9), det(manager-11, a-10), nmod:with(follow-7, manager-11), case(opportunity-14, for-12), compound(opportunity-14, project-13), nmod:for(manager-11, opportunity-14), punct(What-1, ?-15)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, professional-4), nsubj(What-1, way-5), mark(deal-7, to-6), acl(way-5, deal-7), case(boss-12, with-8), nmod:poss(manager-10, my-9), nmod:poss(boss-12, manager-10), case(manager-10, 's-11), nmod:with(deal-7, boss-12), punct(What-1, ?-13)] 	35
[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(toast-7, to-6), acl(way-5, toast-7), dobj(toast-7, pecans-8), punct(What-1, ?-9)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(introduce-7, to-6), acl(way-5, introduce-7), dobj(introduce-7, cats-8), case(newborns-10, to-9), nmod:to(introduce-7, newborns-10), punct(What-1, ?-11)] 	36
[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(repair-7, to-6), acl(way-5, repair-7), det(bathtub-10, a-8), amod(bathtub-10, cracked-9), dobj(repair-7, bathtub-10), punct(What-1, ?-11)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(clean-7, to-6), acl(way-5, clean-7), det(grater-9, a-8), dobj(clean-7, grater-9), punct(What-1, ?-10)] 	37
[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(store-7, to-6), acl(way-5, store-7), amod(berries-9, fresh-8), dobj(store-7, berries-9), punct(What-1, ?-10)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(store-7, to-6), acl(way-5, store-7), amod(vegetables-9, chopped-8), dobj(store-7, vegetables-9), punct(What-1, ?-10)] 	38
[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(store-7, to-6), acl(way-5, store-7), amod(berries-9, fresh-8), dobj(store-7, berries-9), punct(What-1, ?-10)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(store-7, to-6), acl(way-5, store-7), dobj(store-7, carrots-8), punct(What-1, ?-9)] 	39
[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(store-7, to-6), acl(way-5, store-7), amod(berries-9, fresh-8), dobj(store-7, berries-9), punct(What-1, ?-10)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(cite-7, to-6), acl(way-5, cite-7), det(writer-10, an-8), amod(writer-10, anonymous-9), dobj(cite-7, writer-10), punct(What-1, ?-11)] 	40
[advmod(remove-4, How-1), aux(remove-4, do-2), nsubj(remove-4, I-3), root(ROOT-0, remove-4), dobj(remove-4, paint-5), case(floor-9, from-6), det(floor-9, a-7), compound(floor-9, wood-8), nmod:from(remove-4, floor-9), punct(remove-4, ?-10)] 	[advmod(remove-4, How-1), aux(remove-4, can-2), nsubj(remove-4, I-3), root(ROOT-0, remove-4), amod(paint-6, small-5), dobj(remove-4, paint-6), dobj(remove-4, specks-7), case(floor-11, from-8), det(floor-11, a-9), amod(floor-11, wooden-10), nmod:from(specks-7, floor-11), punct(remove-4, ?-12)] 	41
[advmod(higher-6, Why-1), cop(higher-6, is-2), nmod:npmod(higher-6, compensation-3), advmod(much-5, so-4), advmod(higher-6, much-5), root(ROOT-0, higher-6), case(US-9, in-7), det(US-9, the-8), nmod:in(higher-6, US-9), case(Europe-13, than-10), case(Europe-13, in-11), compound(Europe-13, Western-12), nmod:in(higher-6, Europe-13), case(average-15, on-14), nmod:on(higher-6, average-15), punct(higher-6, ?-16)] 	[advmod(lower-6, Why-1), cop(lower-6, is-2), nsubj(lower-6, interest-3), case(MMA-5, on-4), nmod:on(interest-3, MMA-5), root(ROOT-0, lower-6), case(US-9, in-7), det(US-9, the-8), nmod:in(lower-6, US-9), case(Europe-12, than-10), case(Europe-12, in-11), nmod:in(lower-6, Europe-12), punct(lower-6, ?-13)] 	42
[nsubj(wrong-4, What-1), aux(wrong-4, could-2), cop(wrong-4, be-3), root(ROOT-0, wrong-4), case(conditioner-8, with-5), nmod:poss(conditioner-8, my-6), compound(conditioner-8, air-7), nmod:with(wrong-4, conditioner-8), punct(wrong-4, ?-9)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(significance-4, the-3), nsubj(What-1, significance-4), case(cat-7, of-5), det(cat-7, the-6), nmod:of(significance-4, cat-7), punct(What-1, ?-8)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(significance-4, the-3), nsubj(What-1, significance-4), case(painting-8, of-5), det(painting-8, the-6), amod(painting-8, abstract-7), nmod:of(significance-4, painting-8), punct(What-1, ?-9)] 	44
[aux(let-3, Should-1), nsubj(let-3, I-2), root(ROOT-0, let-3), amod(employers-5, potential-4), nsubj(know-6, employers-5), ccomp(let-3, know-6), nsubj(have-8, I-7), ccomp(know-6, have-8), det(offer-11, a-9), compound(offer-11, job-10), dobj(have-8, offer-11), punct(let-3, ?-12)] 	[aux(tell-3, Should-1), nsubj(tell-3, I-2), root(ROOT-0, tell-3), nmod:poss(boss-5, my-4), dobj(tell-3, boss-5), nsubj(have-7, I-6), acl:relcl(boss-5, have-7), det(offer-12, a-8), amod(offer-12, full-9), compound(offer-12, time-10), compound(offer-12, job-11), dobj(have-7, offer-12), punct(tell-3, ?-13)] 	45
[advmod(repair-4, How-1), aux(repair-4, do-2), nsubj(repair-4, I-3), root(ROOT-0, repair-4), amod(floors-7, water-damaged-5), compound(floors-7, hardwood-6), dobj(repair-4, floors-7), punct(repair-4, ?-8)] 	[advmod(repair-4, How-1), aux(repair-4, can-2), nsubj(repair-4, I-3), root(ROOT-0, repair-4), nmod:poss(floors-6, my-5), nmod:poss(finish-8, floors-6), case(floors-6, '-7), dobj(repair-4, finish-8), punct(repair-4, ?-9)] 	46
[nsubj(causing-4, What-1), aux(causing-4, could-2), aux(causing-4, be-3), root(ROOT-0, causing-4), compound(pressure-6, water-5), dobj(causing-4, pressure-6), mark(build-8, to-7), xcomp(causing-4, build-8), compound:prt(build-8, up-9), mark(changing-11, after-10), advcl(build-8, changing-11), dobj(changing-11, my-12), case(filter-15, under-13), compound(filter-15, sink-14), nmod:under(my-12, filter-15), punct(causing-4, ?-16)] 	[nsubj(causing-4, What-1), aux(causing-4, could-2), aux(causing-4, be-3), root(ROOT-0, causing-4), dobj(causing-4, water-5), mark(back-7, to-6), advcl(causing-4, back-7), compound:prt(back-7, up-8), case(bathroom-11, into-9), nmod:poss(bathroom-11, my-10), nmod:into(back-7, bathroom-11), dep(bathroom-11, basin-12), punct(causing-4, ?-13)] 	47
[advmod(find-4, Where-1), aux(find-4, can-2), nsubj(find-4, I-3), root(ROOT-0, find-4), det(list-8, a-5), amod(list-8, good-6), compound(list-8, vocabulary-7), dobj(find-4, list-8), punct(find-4, ?-9)] 	[advmod(find-4, Where-1), aux(find-4, can-2), nsubj(find-4, I-3), root(ROOT-0, find-4), det(list-7, a-5), amod(list-7, complete-6), dobj(find-4, list-7), case(chords-11, of-8), compound(chords-11, Freddie-9), compound(chords-11, Green-10), nmod:of(list-7, chords-11), punct(find-4, ?-12)] 	48
[root(ROOT-0, Glue-1), dobj(Glue-1, underlayment-2), case(concrete-4, to-3), nmod:to(underlayment-2, concrete-4), punct(Glue-1, :-5), advmod(long-7, how-6), advmod(take-10, long-7), aux(take-10, does-8), nsubj(take-10, it-9), dep(Glue-1, take-10), mark(cure-12, to-11), xcomp(take-10, cure-12), punct(Glue-1, ?-13)] 	[advmod(long-2, How-1), advmod(take-5, long-2), aux(take-5, should-3), nsubj(take-5, it-4), root(ROOT-0, take-5), dobj(take-5, concrete-6), mark(cure-9, to-7), advmod(cure-9, fully-8), advcl(take-5, cure-9), punct(take-5, ?-10)] 	49
[root(ROOT-0, Does-1), det(hook-4, this-2), amod(hook-4, beginning-3), dobj(Does-1, hook-4), det(reader-6, the-5), dobj(hook-4, reader-6), punct(Does-1, ?-7)] 	[aux(hook-5, Does-1), nmod:poss(story-3, my-2), nsubj(hook-5, story-3), amod(hook-5, beginning-4), root(ROOT-0, hook-5), det(reader-7, the-6), dobj(hook-5, reader-7), punct(hook-5, ?-8)] [punct(dialogue-2, -LRB--1), root(ROOT-0, dialogue-2), cc(dialogue-2, +-3), conj:+(dialogue-2, narration-4), punct(dialogue-2, -RRB--5), punct(dialogue-2, ?-6)] 	50
[advmod(remove-4, How-1), aux(remove-4, can-2), nsubj(remove-4, I-3), root(ROOT-0, remove-4), det(screw-8, a-5), advmod(stuck-7, really-6), amod(screw-8, stuck-7), dobj(remove-4, screw-8), punct(remove-4, ?-9)] 	[advmod(remove-4, How-1), aux(remove-4, can-2), nsubj(remove-4, I-3), root(ROOT-0, remove-4), det(screw-6, this-5), dobj(remove-4, screw-6), punct(remove-4, ?-7)] 	51
[root(ROOT-0, Is-1), nsubj(better-3, it-2), ccomp(Is-1, better-3), mark(request-5, to-4), xcomp(better-3, request-5), conj:or(request-5, request-5'), det(letter-8, a-6), compound(letter-8, recommendation-7), dobj(request-5, letter-8), case(person-10, in-9), nmod:in(request-5, person-10), case(class-12, after-11), nmod:after(request-5, class-12), cc(request-5, or-13), case(email-15, by-14), nmod:by(request-5', email-15), punct(Is-1, ?-16)] 	[root(ROOT-0, Is-1), nsubj(appropriate-3, it-2), xcomp(Is-1, appropriate-3), mark(ask-5, to-4), xcomp(appropriate-3, ask-5), det(professor-7, a-6), dobj(ask-5, professor-7), case(e-mail-9, via-8), nmod:via(ask-5, e-mail-9), case(letter-12, for-10), det(letter-12, a-11), nmod:for(e-mail-9, letter-12), case(recommendation-14, of-13), nmod:of(letter-12, recommendation-14), punct(Is-1, ?-15)] 	52
[nsubj(eat-4, What-1), aux(eat-4, can-2), nsubj(eat-4, I-3), root(ROOT-0, eat-4), det(night-6, the-5), dobj(eat-4, night-6), mark(help-9, before-7), mark(help-9, to-8), advcl(eat-4, help-9), nsubj(get-11, me-10), ccomp(help-9, get-11), compound:prt(get-11, up-12), case(morning-15, in-13), det(morning-15, the-14), nmod:in(get-11, morning-15), punct(eat-4, ?-16)] 	[det(trigger-2, What-1), dobj(use-5, trigger-2), aux(use-5, do-3), nsubj(use-5, you-4), root(ROOT-0, use-5), mark(get-7, to-6), xcomp(use-5, get-7), compound:prt(get-7, up-8), advmod(get-7, early-9), case(morning-12, in-10), det(morning-12, the-11), nmod:in(early-9, morning-12), punct(use-5, ?-13)] 	53
[nsubj(have-2, I-1), root(ROOT-0, have-2), det(visa-5, a-3), compound(visa-5, Schengen-4), dobj(have-2, visa-5), cc(visa-5, but-6), nmod:poss(visa-10, my-7), compound(visa-10, UAE-8), compound(visa-10, Residence-9), nsubj(cancelled-11, visa-10), conj:but(visa-5, cancelled-11), punct(have-2, .-12)] [aux(travel-4, Can-1), nsubj(travel-4, I-2), advmod(travel-4, still-3), root(ROOT-0, travel-4), advmod(travel-4, then-5), punct(travel-4, ?-6)] 	[aux(travel-3, Can-1), nsubj(travel-3, I-2), root(ROOT-0, travel-3), case(UK-6, to-4), det(UK-6, the-5), nmod:to(travel-3, UK-6), mark(expired-11, if-7), nmod:poss(visa-10, my-8), compound(visa-10, Schengen-9), nsubj(expired-11, visa-10), advcl(travel-3, expired-11), punct(travel-3, ?-12)] 	54
[nsubj(causing-4, What-1), aux(causing-4, could-2), aux(causing-4, be-3), root(ROOT-0, causing-4), nmod:poss(GFCI-6, my-5), dobj(causing-4, GFCI-6), case(trip-8, to-7), nmod:to(causing-4, trip-8), punct(causing-4, ?-9)] 	[nsubj(causing-4, What-1), aux(causing-4, could-2), aux(causing-4, be-3), root(ROOT-0, causing-4), compound(breakers-6, GFCI-5), dobj(causing-4, breakers-6), cc(breakers-6, and-7), conj:and(breakers-6, receptacles-8), case(trip-10, to-9), nmod:to(receptacles-8, trip-10), punct(causing-4, ?-11)] 	55
[advmod(convert-4, How-1), aux(convert-4, do-2), nsubj(convert-4, I-3), csubj(switches-12, convert-4), det(fan-7, a-5), compound(fan-7, ceiling-6), dobj(convert-4, fan-7), case(wall-11, with-8), nummod(wall-11, 2-9), amod(wall-11, separate-10), nmod:with(convert-4, wall-11), root(ROOT-0, switches-12), case(fan-16, to-13), det(fan-16, a-14), amod(fan-16, separate-15), nmod:to(switches-12, fan-16), cc(fan-16, &-17), conj:&(fan-16, light-18), dobj(switches-12, switch-19), punct(switches-12, ?-20)] 	[advmod(wire-4, How-1), aux(wire-4, do-2), nsubj(wire-4, I-3), nsubj(switches-6, wire-4), nummod(wire-4, 2-5), root(ROOT-0, switches-6), mark(control-8, to-7), xcomp(switches-6, control-8), det(light-11, a-9), compound(light-11, ceiling-10), dobj(control-8, light-11), punct(switches-6, ?-12)] 	56
[advmod(long-2, How-1), advmod(cooked-4, long-2), aux(cooked-4, does-3), root(ROOT-0, cooked-4), nsubj(keep-6, TVP-5), ccomp(cooked-4, keep-6), case(fridge-9, in-7), det(fridge-9, the-8), nmod:in(keep-6, fridge-9), punct(cooked-4, ?-10)] 	[advmod(long-2, How-1), advmod(uncooked-4, long-2), aux(uncooked-4, will-3), root(ROOT-0, uncooked-4), compound(keep-6, chicken-5), dobj(uncooked-4, keep-6), case(fridge-9, in-7), det(fridge-9, the-8), nmod:in(keep-6, fridge-9), punct(uncooked-4, ?-10)] 	57
[advmod(get-4, How-1), aux(get-4, can-2), nsubj(get-4, I-3), root(ROOT-0, get-4), nmod:poss(colleagues-6, my-5), dobj(get-4, colleagues-6), mark(stop-8, to-7), xcomp(get-4, stop-8), xcomp(stop-8, interrupting-9), dobj(interrupting-9, me-10), punct(get-4, ?-11)] 	[advmod(get-4, How-1), aux(get-4, can-2), nsubj(get-4, I-3), root(ROOT-0, get-4), nmod:poss(colleague-6, my-5), dobj(get-4, colleague-6), mark(stop-8, to-7), xcomp(get-4, stop-8), xcomp(stop-8, calling-9), dobj(calling-9, me-10), case(desk-14, over-11), case(desk-14, to-12), nmod:poss(desk-14, his-13), nmod:to(calling-9, desk-14), advmod(wants-17, when-15), nsubj(wants-17, he-16), advcl(get-4, wants-17), nmod:poss(help-19, my-18), dobj(wants-17, help-19), punct(get-4, ?-20)] 	58
[root(ROOT-0, What-1), cop(What-1, is-2), det(difference-4, the-3), nsubj(What-1, difference-4), case(words-9, between-5), amod(words-9, assertive-6), cc(assertive-6, and-7), conj:and(assertive-6, non-assertive-8), nmod:between(difference-4, words-9), punct(What-1, ?-10)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(difference-4, the-3), nsubj(What-1, difference-4), case(portamento-6, between-5), nmod:between(difference-4, portamento-6), cc(portamento-6, and-7), conj:and(portamento-6, glissando-8), punct(What-1, ?-9)] 	59
[case(interview-4, After-1), det(interview-4, a-2), compound(interview-4, job-3), nmod:after(inappropriate-8, interview-4), punct(inappropriate-8, ,-5), cop(inappropriate-8, is-6), nsubj(inappropriate-8, it-7), root(ROOT-0, inappropriate-8), mark(want-11, if-9), nsubj(want-11, I-10), advcl(inappropriate-8, want-11), mark(talk-13, to-12), xcomp(want-11, talk-13), case(employee-16, to-14), det(employee-16, an-15), nmod:to(talk-13, employee-16), case(private-18, in-17), nmod:in(employee-16, private-18), punct(inappropriate-8, ?-19)] 	[advmod(appropriate-12, When-1), punct(process-9, -LRB--2), mark(process-9, if-3), advmod(process-9, ever-4), punct(process-9, -RRB--5), case(process-9, in-6), det(process-9, the-7), compound(process-9, interview-8), nmod:in(appropriate-12, process-9), cop(appropriate-12, is-10), nsubj(appropriate-12, it-11), root(ROOT-0, appropriate-12), mark(recommend-14, to-13), xcomp(appropriate-12, recommend-14), det(colleague-16, a-15), dobj(recommend-14, colleague-16), punct(appropriate-12, ?-17)] 	60
[root(ROOT-0, What-1), mark(have-6, if-2), nsubj(have-6, I-3), aux(have-6, do-4), neg(have-6, n't-5), dep(What-1, have-6), amod(sample-9, enough-7), compound(sample-9, work-8), dobj(have-6, sample-9), case(interview-12, for-10), det(interview-12, an-11), nmod:for(sample-9, interview-12), punct(What-1, ?-13)] 	[dobj(do-4, What-1), aux(do-4, should-2), nsubj(do-4, I-3), root(ROOT-0, do-4), mark(have-7, if-5), nsubj(have-7, I-6), advcl(do-4, have-7), det(idea-9, an-8), dobj(have-7, idea-9), cc(have-7, but-10), aux(work-13, ca-11), neg(work-13, n't-12), conj:but(have-7, work-13), case(it-15, on-14), nmod:on(work-13, it-15), advmod(work-13, immediately-16), punct(do-4, ?-17)] 	61
[advmod(remove-4, How-1), aux(remove-4, do-2), nsubj(remove-4, you-3), root(ROOT-0, remove-4), dobj(remove-4, paint-5), case(hair-7, from-6), nmod:from(remove-4, hair-7), punct(remove-4, ?-8)] 	[advmod(remove-4, How-1), aux(remove-4, do-2), nsubj(remove-4, I-3), root(ROOT-0, remove-4), dobj(remove-4, paint-5), case(pipes-7, from-6), nmod:from(remove-4, pipes-7), punct(remove-4, ?-8)] 	62
[root(ROOT-0, Is-1), nmod:poss(driver-4, my-2), compound(driver-4, U.S.-3), nmod:poss(license-6, driver-4), case(driver-4, 's-5), nsubj(Is-1, license-6), amod(license-6, valid-7), case(Europe-9, in-8), nmod:in(valid-7, Europe-9), punct(Is-1, ?-10)] 	[root(ROOT-0, Is-1), amod(driver-3, Greek-2), nmod:poss(license-5, driver-3), case(driver-3, 's-4), nsubj(Is-1, license-5), amod(license-5, valid-6), case(US-9, in-7), det(US-9, the-8), nmod:in(valid-6, US-9), punct(Is-1, ?-10)] 	63
[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(store-7, to-6), acl(way-5, store-7), amod(berries-9, fresh-8), dobj(store-7, berries-9), punct(What-1, ?-10)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(filter-7, to-6), acl(way-5, filter-7), det(coffee-10, the-8), amod(coffee-10, Turkish-9), dobj(filter-7, coffee-10), punct(What-1, ?-11)] 	64
[root(ROOT-0, Is-1), nsubj(safe-3, it-2), xcomp(Is-1, safe-3), mark(leave-5, to-4), xcomp(safe-3, leave-5), dobj(leave-5, butter-6), case(temperature-9, at-7), compound(temperature-9, room-8), nmod:at(leave-5, temperature-9), punct(Is-1, ?-10)] 	[advmod(know-4, How-1), aux(know-4, do-2), nsubj(know-4, I-3), csubj(safe-13, know-4), mark(left-7, if-5), nsubj(left-7, food-6), advcl(know-4, left-7), case(temperature-10, at-8), compound(temperature-10, room-9), nmod:at(left-7, temperature-10), cop(safe-13, is-11), advmod(safe-13, still-12), root(ROOT-0, safe-13), mark(eat-15, to-14), xcomp(safe-13, eat-15), punct(safe-13, ?-16)] 	65
[advmod(remove-4, How-1), aux(remove-4, do-2), nsubj(remove-4, I-3), root(ROOT-0, remove-4), dobj(remove-4, paint-5), case(floor-9, from-6), det(floor-9, a-7), compound(floor-9, wood-8), nmod:from(remove-4, floor-9), punct(remove-4, ?-10)] 	[advmod(remove-4, How-1), aux(remove-4, do-2), nsubj(remove-4, I-3), root(ROOT-0, remove-4), det(layer-7, a-5), amod(layer-7, thick-6), dobj(remove-4, layer-7), case(paint-9, of-8), nmod:of(layer-7, paint-9), case(tiles-11, from-10), nmod:from(remove-4, tiles-11), punct(remove-4, ?-12)] 	66
[advmod(remove-4, How-1), aux(remove-4, do-2), nsubj(remove-4, I-3), root(ROOT-0, remove-4), dobj(remove-4, paint-5), case(floor-9, from-6), det(floor-9, a-7), compound(floor-9, wood-8), nmod:from(remove-4, floor-9), punct(remove-4, ?-10)] 	[advmod(remove-4, How-1), aux(remove-4, can-2), nsubj(remove-4, I-3), root(ROOT-0, remove-4), dobj(remove-4, paint-5), case(deck-8, from-6), det(deck-8, a-7), nmod:from(remove-4, deck-8), punct(remove-4, ?-9)] 	67
[advmod(remove-4, How-1), aux(remove-4, do-2), nsubj(remove-4, I-3), root(ROOT-0, remove-4), dobj(remove-4, paint-5), case(floor-9, from-6), det(floor-9, a-7), compound(floor-9, wood-8), nmod:from(remove-4, floor-9), punct(remove-4, ?-10)] 	[advmod(remove-4, How-1), aux(remove-4, do-2), nsubj(remove-4, I-3), root(ROOT-0, remove-4), dobj(remove-4, paint-5), case(pipes-7, from-6), nmod:from(remove-4, pipes-7), punct(remove-4, ?-8)] 	68
[advmod(blackout-3, how-1), mark(blackout-3, to-2), root(ROOT-0, blackout-3), det(window-7, a-4), amod(window-7, large-5), compound(window-7, bedroom-6), dobj(blackout-3, window-7), case(budget-10, on-8), det(budget-10, a-9), nmod:on(blackout-3, budget-10), punct(blackout-3, ?-11)] 	[advmod(blackout-5, How-1), aux(blackout-5, can-2), nsubj(blackout-5, I-3), advmod(blackout-5, thoroughly-4), root(ROOT-0, blackout-5), det(window-8, a-6), compound(window-8, bedroom-7), dobj(blackout-5, window-8), case(budget-11, on-9), det(budget-11, a-10), nmod:on(blackout-5, budget-11), punct(blackout-5, ?-12)] 	69
[det(language-2, What-1), root(ROOT-0, language-2), dep(language-2, does-3), det(look-5, this-4), dobj(does-3, look-5), dep(look-5, like-6), punct(language-2, ?-7)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(language-4, this-3), nsubj(What-1, language-4), punct(What-1, ?-5)] 	70
[det(type-2, What-1), nsubj(good-6, type-2), case(pants-4, of-3), nmod:of(type-2, pants-4), cop(good-6, are-5), root(ROOT-0, good-6), case(lifting-9, for-7), compound(lifting-9, weight-8), nmod:for(good-6, lifting-9), punct(good-6, ?-10)] 	[root(ROOT-0, What-1), cop(What-1, is-2), amod(attire-5, good-3), compound(attire-5, workout-4), nsubj(What-1, attire-5), case(lifting-8, for-6), compound(lifting-8, weight-7), nmod:for(attire-5, lifting-8), punct(What-1, ?-9)] 	71
[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(clean-7, to-6), acl(way-5, clean-7), nmod:poss(exhaust-11, your-8), compound(exhaust-11, clothes-9), compound(exhaust-11, dryer-10), dobj(clean-7, exhaust-11), punct(What-1, ?-12)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(clean-7, to-6), acl(way-5, clean-7), det(grater-9, a-8), dobj(clean-7, grater-9), punct(What-1, ?-10)] 	72
[nsubj(do-5, What-1), advmod(do-5, more-2), aux(do-5, can-3), nsubj(do-5, I-4), root(ROOT-0, do-5), mark(improve-7, to-6), xcomp(do-5, improve-7), nmod:poss(score-10, my-8), compound(score-10, credit-9), dobj(improve-7, score-10), punct(do-5, ?-11)] 	[dobj(do-5, What-1), aux(do-5, can-2), nsubj(do-5, I-3), advmod(do-5, realistically-4), root(ROOT-0, do-5), mark(raise-7, to-6), xcomp(do-5, raise-7), nmod:poss(score-10, my-8), compound(score-10, credit-9), dobj(raise-7, score-10), punct(do-5, ?-11)] 	73
[advmod(remove-4, How-1), aux(remove-4, can-2), nsubj(remove-4, I-3), root(ROOT-0, remove-4), det(screw-8, a-5), advmod(stuck-7, really-6), amod(screw-8, stuck-7), dobj(remove-4, screw-8), punct(remove-4, ?-9)] 	[advmod(remove-4, How-1), aux(remove-4, can-2), nsubj(remove-4, I-3), root(ROOT-0, remove-4), dobj(remove-4, paint-5), case(heads-9, from-6), amod(heads-9, slotted-7), compound(heads-9, screw-8), nmod:from(remove-4, heads-9), punct(remove-4, ?-10)] 	74
[nsubj(causes-2, What-1), root(ROOT-0, causes-2), det(chips-4, these-3), dobj(causes-2, chips-4), case(wall-9, in-5), det(wall-9, a-6), compound(wall-9, cement-7), compound(wall-9, brick-8), nmod:in(causes-2, wall-9), punct(causes-2, ,-10), cc(causes-2, and-11), advmod(fix-15, how-12), aux(fix-15, can-13), nsubj(fix-15, I-14), conj:and(causes-2, fix-15), dobj(fix-15, them-16), punct(causes-2, ?-17)] 	[root(ROOT-0, What-1), cop(What-1, are-2), det(holes-4, these-3), nsubj(What-1, holes-4), case(wall-8, in-5), nmod:poss(wall-8, my-6), amod(wall-8, concrete-7), nmod:in(holes-4, wall-8), cc(wall-8, and-9), advmod(mount-13, how-10), aux(mount-13, can-11), nsubj(mount-13, I-12), conj:and(wall-8, mount-13), dobj(mount-13, things-14), case(them-16, to-15), nmod:to(mount-13, them-16), punct(What-1, ?-17)] 	75
[nsubj(causing-4, What-1), aux(causing-4, could-2), aux(causing-4, be-3), root(ROOT-0, causing-4), nmod:poss(toilet-6, my-5), dobj(causing-4, toilet-6), mark(back-8, to-7), advcl(causing-4, back-8), compound:prt(back-8, up-9), punct(causing-4, ?-10)] 	[nsubj(causing-4, What-1), aux(causing-4, could-2), aux(causing-4, be-3), root(ROOT-0, causing-4), dobj(causing-4, water-5), mark(back-7, to-6), advcl(causing-4, back-7), compound:prt(back-7, up-8), case(bathroom-11, into-9), nmod:poss(bathroom-11, my-10), nmod:into(back-7, bathroom-11), dep(bathroom-11, basin-12), punct(causing-4, ?-13)] 	76
[root(ROOT-0, What-1), cop(What-1, is-2), det(difference-4, the-3), nsubj(What-1, difference-4), case(IRA-8, between-5), det(IRA-8, a-6), compound(IRA-8, Rollover-7), nmod:between(difference-4, IRA-8), cc(IRA-8, and-9), det(IRA-12, a-10), compound(IRA-12, Roth-11), conj:and(IRA-8, IRA-12), punct(What-1, ?-13)] 	[root(ROOT-0, What-1), cop(What-1, are-2), det(differences-4, the-3), nsubj(What-1, differences-4), case(IRA-10, between-5), det(IRA-10, a-6), punct(IRA-10, ``-7), amod(IRA-10, traditional-8), punct(IRA-10, ''-9), nmod:between(differences-4, IRA-10), cc(IRA-10, and-11), det(IRA-14, a-12), compound(IRA-14, Roth-13), conj:and(IRA-10, IRA-14), punct(What-1, ?-15)] 	77
[advmod(deal-3, How-1), mark(deal-3, to-2), root(ROOT-0, deal-3), case(child-6, with-4), det(child-6, the-5), nmod:with(deal-3, child-6), advmod(page-16, when-7), det:predet(parents-10, both-8), det(parents-10, the-9), nsubj(page-16, parents-10), cop(page-16, are-11), neg(page-16, not-12), case(page-16, on-13), det(page-16, the-14), amod(page-16, same-15), advcl:on(deal-3, page-16), punct(deal-3, ?-17)] 	[advmod(deal-3, How-1), mark(deal-3, to-2), root(ROOT-0, deal-3), case(toddler-6, with-4), det(toddler-6, the-5), nmod:with(deal-3, toddler-6), advmod(page-17, when-7), nsubj(page-17, me-8), cc(me-8, and-9), nmod:poss(partner-11, my-10), conj:and(me-8, partner-11), cop(page-17, are-12), neg(page-17, not-13), case(page-17, on-14), det(page-17, the-15), amod(page-17, same-16), advcl:on(deal-3, page-17), punct(deal-3, ?-18)] 	78
[advmod(reconnect-4, How-1), aux(reconnect-4, do-2), nsubj(reconnect-4, I-3), root(ROOT-0, reconnect-4), det(chain-9, a-5), compound(chain-9, ceiling-6), compound(chain-9, fan-7), amod(chain-9, light-8), dobj(reconnect-4, chain-9), punct(reconnect-4, ?-10)] 	[advmod(wire-4, How-1), aux(wire-4, do-2), nsubj(wire-4, I-3), root(ROOT-0, wire-4), det(fan-8, a-5), compound(fan-8, replacement-6), compound(fan-8, ceiling-7), dobj(wire-4, fan-8), punct(wire-4, ?-9)] 	79
[advmod(pump-4, How-1), aux(pump-4, do-2), nsubj(pump-4, I-3), root(ROOT-0, pump-4), compound:prt(pump-4, up-5), compound(pressure-7, water-6), dobj(pump-4, pressure-7), case(shower-10, in-8), nmod:poss(shower-10, my-9), nmod:in(pump-4, shower-10), punct(pump-4, ?-11)] 	[advmod(fix-4, How-1), aux(fix-4, can-2), nsubj(fix-4, I-3), root(ROOT-0, fix-4), amod(pressure-7, low-5), compound(pressure-7, water-6), dobj(fix-4, pressure-7), case(shower-10, in-8), nummod(shower-10, one-9), nmod:in(fix-4, shower-10), punct(fix-4, ?-11)] 	80
[amod(visa-4, Greek-1), compound(visa-4, type-2), compound(visa-4, D-3), root(ROOT-0, visa-4), punct(visa-4, :-5), aux(travel-8, Can-6), nsubj(travel-8, I-7), dep(visa-4, travel-8), case(countries-12, to-9), amod(countries-12, other-10), amod(countries-12, Schengen-11), nmod:to(travel-8, countries-12), punct(travel-8, ?-13)] 	[aux(go-3, Can-1), nsubj(go-3, I-2), root(ROOT-0, go-3), mark(visit-5, to-4), xcomp(go-3, visit-5), amod(countries-7, Schengen-6), dobj(visit-5, countries-7), case(D-mult-11, with-8), compound(D-mult-11, visa-9), compound(D-mult-11, type-10), nmod:with(visit-5, D-mult-11), punct(go-3, ?-12)] 	81
[advmod(store-4, How-1), aux(store-4, should-2), nsubj(store-4, I-3), root(ROOT-0, store-4), dobj(store-4, eggs-5), case(refrigerator-8, in-6), det(refrigerator-8, the-7), nmod:in(store-4, refrigerator-8), punct(store-4, ?-9)] 	[advmod(long-2, How-1), advmod(store-5, long-2), aux(store-5, can-3), nsubj(store-5, I-4), root(ROOT-0, store-5), amod(rice-7, cooked-6), dobj(store-5, rice-7), case(refrigerator-10, in-8), det(refrigerator-10, the-9), nmod:in(store-5, refrigerator-10), punct(store-5, ?-11)] 	82
[dobj(do-4, What-1), aux(do-4, can-2), nsubj(do-4, I-3), root(ROOT-0, do-4), advmod(opening-10, about-5), case(opening-10, out-6), mwe(out-6, of-7), amod(opening-10, square-8), amod(opening-10, rough-9), nmod:out_of(do-4, opening-10), case(windows-13, for-11), amod(windows-13, new-12), nmod:for(opening-10, windows-13), punct(do-4, ?-14)] 	[dobj(do-4, What-1), aux(do-4, can-2), nsubj(do-4, I-3), root(ROOT-0, do-4), case(opening-8, about-5), det(opening-8, a-6), amod(opening-8, Rough-7), nmod:about(do-4, opening-8), nsubj(REALLY-11, that-9), cop(REALLY-11, is-10), acl:relcl(opening-8, REALLY-11), case(square-14, out-12), mwe(out-12, of-13), nmod:out_of(REALLY-11, square-14), punct(do-4, ?-15)] 	83
[root(ROOT-0, What-1), cop(What-1, 's-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(store-7, to-6), acl(way-5, store-7), dobj(store-7, potatoes-8), cc(store-7, and-9), conj:and(store-7, maximize-10), nmod:poss(shelf-life-12, their-11), dobj(maximize-10, shelf-life-12), punct(What-1, ?-13)] 	[root(ROOT-0, What-1), cop(What-1, 's-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(store-7, to-6), acl(way-5, store-7), dobj(store-7, asparagus-8), punct(What-1, ?-9)] 	84
[advmod(bake-3, How-1), mark(bake-3, to-2), root(ROOT-0, bake-3), det(chicken-5, a-4), dobj(bake-3, chicken-5), punct(bake-3, ?-6)] 	[advmod(truss-3, How-1), mark(truss-3, to-2), root(ROOT-0, truss-3), det(chicken-5, a-4), dobj(truss-3, chicken-5), punct(truss-3, ?-6)] 	85
[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(treat-7, to-6), acl(way-5, treat-7), amod(ringworm-9, feline-8), dobj(treat-7, ringworm-9), punct(What-1, ?-10)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(clean-7, to-6), acl(way-5, clean-7), det(grater-9, a-8), dobj(clean-7, grater-9), punct(What-1, ?-10)] 	86
[det(kind-2, What-1), dep(is-6, kind-2), case(web-5, of-3), compound(web-5, spider-4), nmod:of(kind-2, web-5), root(ROOT-0, is-6), nsubj(is-6, this-7), punct(this-7, --8), cc(this-7, and-9), advmod(rid-14, how-10), aux(rid-14, do-11), nsubj(rid-14, I-12), dep(rid-14, get-13), conj:and(this-7, rid-14), case(it-16, of-15), nmod:of(rid-14, it-16), punct(is-6, ?-17)] 	[root(ROOT-0, What-1), cop(What-1, are-2), det(bugs-4, these-3), nsubj(What-1, bugs-4), cc(bugs-4, and-5), advmod(rid-10, how-6), aux(rid-10, do-7), nsubj(rid-10, I-8), dep(rid-10, get-9), conj:and(bugs-4, rid-10), case(them-12, of-11), nmod:of(rid-10, them-12), punct(What-1, ?-13)] 	87
[root(ROOT-0, What-1), cop(What-1, 's-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(seal-7, to-6), acl(way-5, seal-7), case(faucet-10, around-8), det(faucet-10, this-9), nmod:around(seal-7, faucet-10), punct(What-1, ?-11)] 	[root(ROOT-0, What-1), cop(What-1, 's-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(store-7, to-6), acl(way-5, store-7), dobj(store-7, asparagus-8), punct(What-1, ?-9)] 	88
[advmod(remove-3, How-1), mark(remove-3, to-2), root(ROOT-0, remove-3), compound(adhesive-5, construction-4), dobj(remove-3, adhesive-5), case(concrete-7, from-6), nmod:from(remove-3, concrete-7), punct(remove-3, ?-8)] 	[advmod(remove-4, How-1), aux(remove-4, do-2), nsubj(remove-4, I-3), root(ROOT-0, remove-4), dobj(remove-4, adhesive-5), case(deck-9, from-6), amod(deck-9, outdoor-7), amod(deck-9, concrete-8), nmod:from(adhesive-5, deck-9), nsubjpass(textured-12, that-10), auxpass(textured-12, is-11), acl:relcl(deck-9, textured-12), punct(remove-4, ?-13)] 	89
[root(ROOT-0, What-1), cop(What-1, is-2), det(difference-4, the-3), nsubj(What-1, difference-4), case(stock-7, between-5), det(stock-7, a-6), nmod:between(difference-4, stock-7), cc(stock-7, and-8), det(bond-10, a-9), conj:and(stock-7, bond-10), punct(What-1, ?-11)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(difference-4, the-3), nsubj(What-1, difference-4), case(riff-7, between-5), det(riff-7, a-6), nmod:between(difference-4, riff-7), cc(riff-7, and-8), det(lick-10, a-9), conj:and(riff-7, lick-10), punct(What-1, ?-11)] 	90
[advmod(teach-4, How-1), aux(teach-4, do-2), nsubj(teach-4, I-3), root(ROOT-0, teach-4), nmod:poss(toddler-6, my-5), dobj(teach-4, toddler-6), mark(chew-8, to-7), advcl(teach-4, chew-8), nmod:poss(food-10, his-9), dobj(chew-8, food-10), punct(teach-4, ?-11)] 	[advmod(teach-4, How-1), aux(teach-4, do-2), nsubj(teach-4, you-3), root(ROOT-0, teach-4), det(toddler-6, a-5), dobj(teach-4, toddler-6), neg(share-9, not-7), mark(share-9, to-8), xcomp(teach-4, share-9), punct(teach-4, ?-10)] 	91
[nsubj(goes-2, What-1), root(ROOT-0, goes-2), case(statement-7, in-3), det(statement-7, a-4), compound(statement-7, student-5), compound(statement-7, success-6), nmod:in(goes-2, statement-7), case(application-11, for-8), det(application-11, a-9), compound(application-11, faculty-10), nmod:for(statement-7, application-11), punct(goes-2, ?-12)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(length-5, a-3), amod(length-5, good-4), nsubj(What-1, length-5), case(statement-8, for-6), det(statement-8, the-7), nmod:for(length-5, statement-8), case(purpose-10, of-9), nmod:of(statement-8, purpose-10), case(application-15, in-11), det(application-15, a-12), compound(application-15, U.S.-13), compound(application-15, PhD-14), nmod:in(purpose-10, application-15), punct(What-1, ?-16)] 	92
[root(ROOT-0, What-1), cop(What-1, is-2), det(difference-4, the-3), nsubj(What-1, difference-4), case(shawarma-6, between-5), nmod:between(difference-4, shawarma-6), cc(shawarma-6, and-7), conj:and(shawarma-6, gyros-8), punct(What-1, ?-9)] 	[root(ROOT-0, what-1), cop(what-1, is-2), det(difference-4, the-3), nsubj(what-1, difference-4), case(Erebor-6, between-5), nmod:between(difference-4, Erebor-6), cc(Erebor-6, and-7), conj:and(Erebor-6, Moria-8), punct(what-1, ?-9)] 	93
[aux(enter-3, Must-1), nsubj(enter-3, I-2), root(ROOT-0, enter-3), dobj(enter-3, Europe-4), case(visa-7, with-5), compound(visa-7, Schengen-6), nmod:with(enter-3, visa-7), case(country-10, from-8), det(country-10, the-9), nmod:from(visa-7, country-10), advmod(applied-13, where-11), nsubj(applied-13, I-12), acl:relcl(country-10, applied-13), punct(enter-3, ?-14)] 	[mark(have-3, If-1), nsubj(have-3, I-2), advcl(enter-9, have-3), amod(visa-5, Schengen-4), dobj(have-3, visa-5), punct(enter-9, ,-6), aux(enter-9, can-7), nsubj(enter-9, I-8), root(ROOT-0, enter-9), compound(area-11, Schengen-10), dobj(enter-9, area-11), case(country-14, from-12), amod(country-14, different-13), nmod:from(enter-9, country-14), punct(enter-9, ?-15)] 	94
[nsubj(causing-4, What-1), aux(causing-4, could-2), aux(causing-4, be-3), root(ROOT-0, causing-4), nmod:poss(toilet-6, my-5), dobj(causing-4, toilet-6), mark(back-8, to-7), advcl(causing-4, back-8), compound:prt(back-8, up-9), punct(causing-4, ?-10)] 	[nsubj(causing-4, What-1), aux(causing-4, could-2), aux(causing-4, be-3), csubj(drains-7, causing-4), nmod:poss(bathroom-6, my-5), dobj(causing-4, bathroom-6), root(ROOT-0, drains-7), mark(back-9, to-8), xcomp(drains-7, back-9), compound:prt(back-9, up-10), punct(drains-7, ?-11)] 	95
[advmod(apply-3, How-1), mark(apply-3, to-2), root(ROOT-0, apply-3), case(visa-7, for-4), det(visa-7, a-5), compound(visa-7, Schengen-6), nmod:for(apply-3, visa-7), punct(apply-3, ?-8)] 	[advmod(apply-4, How-1), aux(apply-4, should-2), nsubj(apply-4, I-3), root(ROOT-0, apply-4), case(visa-8, for-5), det(visa-8, a-6), compound(visa-8, Schengen-7), nmod:for(apply-4, visa-8), case(UK-11, from-9), det(UK-11, the-10), nmod:from(visa-8, UK-11), punct(apply-4, ?-12)] 	96
[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(apply-7, to-6), acl(way-5, apply-7), amod(primer-9, Shellac-based-8), dobj(apply-7, primer-9), punct(What-1, ?-10)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(clean-7, to-6), acl(way-5, clean-7), det(grater-9, a-8), dobj(clean-7, grater-9), punct(What-1, ?-10)] 	97
[advmod(make-4, How-1), aux(make-4, do-2), nsubj(make-4, I-3), root(ROOT-0, make-4), amod(chapattis-6, soft-5), dobj(make-4, chapattis-6), punct(make-4, ?-7)] 	[advmod(make-3, How-1), mark(make-3, to-2), root(ROOT-0, make-3), compound(round-5, chapattis-4), dobj(make-3, round-5), cc(round-5, and-6), case(thickness-9, of-7), amod(thickness-9, same-8), conj:and(round-5, thickness-9), punct(make-3, ?-10)] 	98
[advmod(respond-4, How-1), aux(respond-4, should-2), nsubj(respond-4, you-3), root(ROOT-0, respond-4), case(teacher-7, to-5), nmod:poss(teacher-7, your-6), nmod:to(respond-4, teacher-7), nsubj(help-11, who-8), aux(help-11, can-9), neg(help-11, not-10), acl:relcl(teacher-7, help-11), dobj(help-11, you-12), case(recommendation-15, with-13), det(recommendation-15, a-14), nmod:with(help-11, recommendation-15), punct(respond-4, ?-16)] 	[advmod(deal-4, How-1), aux(deal-4, should-2), nsubj(deal-4, you-3), root(ROOT-0, deal-4), case(teacher-7, with-5), det(teacher-7, a-6), nmod:with(deal-4, teacher-7), nsubj(difficult-10, who-8), cop(difficult-10, is-9), acl:relcl(teacher-7, difficult-10), mark(understand-12, to-11), xcomp(difficult-10, understand-12), punct(deal-4, ?-13)] 	99
[advmod(replace-4, How-1), aux(replace-4, can-2), nsubj(replace-4, I-3), root(ROOT-0, replace-4), det(chain-10, a-5), compound(chain-10, ceiling-6), compound(chain-10, fan-7), amod(chain-10, light-8), compound(chain-10, pull-9), dobj(replace-4, chain-10), punct(replace-4, ?-11)] 	[advmod(replace-4, How-1), aux(replace-4, can-2), nsubj(replace-4, I-3), root(ROOT-0, replace-4), det(fan-7, a-5), compound(fan-7, ceiling-6), dobj(replace-4, fan-7), case(fixture-12, with-8), det(fixture-12, a-9), amod(fixture-12, regular-10), amod(fixture-12, light-11), nmod:with(fan-7, fixture-12), punct(replace-4, ?-13)] 	100
[dobj(do-4, What-1), aux(do-4, should-2), nsubj(do-4, I-3), root(ROOT-0, do-4), case(debt-9, with-5), nmod:poss(debt-9, my-6), compound(debt-9, credit-7), compound(debt-9, card-8), nmod:with(do-4, debt-9), punct(do-4, ?-10)] 	[dobj(be-6, What-1), aux(be-6, should-2), nmod:poss(limit-5, my-3), compound(limit-5, credit-4), nsubj(be-6, limit-5), root(ROOT-0, be-6), punct(be-6, ?-7)] 	101
[root(ROOT-0, What-1), cop(What-1, 's-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(store-7, to-6), acl(way-5, store-7), dobj(store-7, asparagus-8), punct(What-1, ?-9)] 	[root(ROOT-0, What-1), cop(What-1, 's-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(keep-7, to-6), acl(way-5, keep-7), nmod:poss(garage-9, my-8), dobj(keep-7, garage-9), case(freezing-11, from-10), nmod:from(keep-7, freezing-11), punct(What-1, ?-12)] 	102
[root(ROOT-0, What-1), cop(What-1, is-2), det(difference-4, the-3), nsubj(What-1, difference-4), case(word-8, between-5), det(word-8, a-6), compound(word-8, filler-7), nmod:between(difference-4, word-8), cc(word-8, and-9), det(marker-12, a-10), compound(marker-12, discourse-11), conj:and(word-8, marker-12), punct(What-1, ?-13)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(difference-4, the-3), nsubj(What-1, difference-4), case(copula-7, between-5), det(copula-7, a-6), nmod:between(difference-4, copula-7), cc(copula-7, and-8), det(verb-11, a-9), amod(verb-11, transitive-10), conj:and(copula-7, verb-11), punct(What-1, ?-12)] 	103
[root(ROOT-0, What-1), cop(What-1, 's-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(run-7, to-6), acl(way-5, run-7), det(wire-9, a-8), dobj(run-7, wire-9), case(garage-13, from-10), case(garage-13, inside-11), nmod:poss(garage-13, my-12), nmod:inside(run-7, garage-13), case(outside-16, to-14), det(outside-16, the-15), nmod:to(run-7, outside-16), punct(What-1, ?-17)] 	[advmod(repair-4, How-1), aux(repair-4, can-2), nsubj(repair-4, I-3), root(ROOT-0, repair-4), nmod:poss(slabs-9, my-5), nummod(slabs-9, two-6), amod(slabs-9, sloping-7), amod(slabs-9, concrete-8), dobj(repair-4, slabs-9), punct(repair-4, ?-10)] 	[advmod(repair-4, How-1), aux(repair-4, can-2), nsubj(repair-4, I-3), root(ROOT-0, repair-4), nmod:poss(floors-6, my-5), nmod:poss(finish-8, floors-6), case(floors-6, '-7), dobj(repair-4, finish-8), punct(repair-4, ?-9)] 	105
[advmod(blowing-5, Why-1), aux(blowing-5, is-2), nmod:poss(furnace-4, my-3), nsubj(blowing-5, furnace-4), root(ROOT-0, blowing-5), amod(air-7, hot-6), dobj(blowing-5, air-7), case(pipe-12, outside-8), case(pipe-12, through-9), det(pipe-12, a-10), compound(pipe-12, PVC-11), nmod:through(blowing-5, pipe-12), punct(blowing-5, ?-13)] 	[advmod(blowing-5, Why-1), aux(blowing-5, is-2), nmod:poss(furnace-4, my-3), nsubj(blowing-5, furnace-4), root(ROOT-0, blowing-5), amod(air-7, hot-6), dobj(blowing-5, air-7), advmod(blowing-5, outside-8), punct(blowing-5, ?-9)] 	106
[advmod(find-4, Where-1), aux(find-4, can-2), nsubj(find-4, I-3), root(ROOT-0, find-4), det(list-8, a-5), amod(list-8, good-6), compound(list-8, vocabulary-7), dobj(find-4, list-8), punct(find-4, ?-9)] 	[advmod(find-4, Where-1), aux(find-4, can-2), nsubj(find-4, I-3), root(ROOT-0, find-4), det(thesaurus-8, a-5), amod(thesaurus-8, good-6), compound(thesaurus-8, online-7), dobj(find-4, thesaurus-8), punct(find-4, ?-9)] 	107
[advmod(taking-5, Why-1), aux(taking-5, is-2), nmod:poss(dryer-4, my-3), nsubj(taking-5, dryer-4), root(ROOT-0, taking-5), dobj(taking-5, longer-6), case(clothes-9, to-7), amod(clothes-9, dry-8), nmod:to(longer-6, clothes-9), punct(taking-5, ?-10)] 	[advmod(take-4, Why-1), aux(take-4, does-2), nsubj(take-4, it-3), root(ROOT-0, take-4), nmod:poss(dryer-6, my-5), dobj(take-4, dryer-6), nummod(hours-8, 3-7), dep(dryer-6, hours-8), mark(dry-10, to-9), acl(hours-8, dry-10), det(load-12, a-11), dobj(dry-10, load-12), case(clothes-14, of-13), nmod:of(load-12, clothes-14), punct(take-4, ?-15)] 	108
[advmod(stop-4, How-1), aux(stop-4, do-2), nsubj(stop-4, I-3), root(ROOT-0, stop-4), nmod:poss(dog-6, my-5), dobj(stop-4, dog-6), mark(jumping-8, from-7), advcl(stop-4, jumping-8), case(me-10, on-9), nmod:on(jumping-8, me-10), punct(stop-4, ?-11)] 	[advmod(stop-4, How-1), aux(stop-4, do-2), nsubj(stop-4, I-3), root(ROOT-0, stop-4), nmod:poss(dog-6, my-5), dobj(stop-4, dog-6), case(barking-8, from-7), nmod:from(stop-4, barking-8), advmod(bring-11, when-9), nsubj(bring-11, I-10), advcl(stop-4, bring-11), dobj(bring-11, him-12), compound:prt(bring-11, outside-13), punct(stop-4, ?-14)] 	109
[dobj(called-6, What-1), cop(What-1, is-2), det(technique-5, this-3), amod(technique-5, vocal-4), nsubjpass(called-6, technique-5), root(ROOT-0, called-6), punct(called-6, ?-7)] 	[dobj(called-6, What-1), cop(What-1, is-2), det(finish-5, this-3), amod(finish-5, stucco-like-4), nsubjpass(called-6, finish-5), root(ROOT-0, called-6), punct(called-6, ?-7)] 	110
[advmod(repair-4, How-1), aux(repair-4, can-2), nsubj(repair-4, I-3), root(ROOT-0, repair-4), nmod:poss(floors-6, my-5), nmod:poss(finish-8, floors-6), case(floors-6, '-7), dobj(repair-4, finish-8), punct(repair-4, ?-9)] 	[advmod(repair-4, How-1), aux(repair-4, can-2), nsubj(repair-4, I-3), root(ROOT-0, repair-4), det(shower-7, a-5), amod(shower-7, leaking-6), dobj(repair-4, shower-7), punct(repair-4, ?-8)] 	111
[root(ROOT-0, What-1), cop(What-1, are-2), det(exercises-6, some-3), amod(exercises-6, good-4), compound(exercises-6, strength-5), nsubj(What-1, exercises-6), case(runners-9, for-7), compound(runners-9, marathon-8), nmod:for(exercises-6, runners-9), punct(What-1, ?-10)] 	[root(ROOT-0, What-1), cop(What-1, are-2), det(routines-7, some-3), amod(routines-7, good-4), compound(routines-7, strength-5), compound(routines-7, training-6), nsubj(What-1, routines-7), case(runners-9, for-8), nmod:for(routines-7, runners-9), punct(What-1, ?-10)] 	112
[det(kind-2, What-1), dep(is-5, kind-2), case(socket-4, of-3), nmod:of(kind-2, socket-4), root(ROOT-0, is-5), nsubj(is-5, this-6), punct(is-5, ?-7)] 	[det(kind-2, What-1), dep(is-5, kind-2), case(bug-4, of-3), nmod:of(kind-2, bug-4), root(ROOT-0, is-5), nsubj(is-5, this-6), punct(is-5, ?-7)] 	113
[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(toast-7, to-6), acl(way-5, toast-7), dobj(toast-7, pecans-8), punct(What-1, ?-9)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(start-7, to-6), acl(way-5, start-7), xcomp(start-7, learning-8), det(course-11, a-9), amod(course-11, new-10), dobj(learning-8, course-11), punct(What-1, ?-12)] 	115
[advmod(stop-4, How-1), aux(stop-4, can-2), nsubj(stop-4, I-3), root(ROOT-0, stop-4), det(leak-8, this-5), compound(leak-8, Shower-6), compound(leak-8, faucet-7), dobj(stop-4, leak-8), punct(stop-4, ?-9)] 	[advmod(remove-4, How-1), aux(remove-4, do-2), nsubj(remove-4, I-3), root(ROOT-0, remove-4), det(fixture-7, this-5), compound(fixture-7, shower-6), dobj(remove-4, fixture-7), punct(remove-4, ?-8)] 	116
[root(ROOT-0, What-1), cop(What-1, is-2), det(difference-5, the-3), amod(difference-5, actual-4), nsubj(What-1, difference-5), case(Graduate-7, between-6), nmod:between(difference-5, Graduate-7), cc(Graduate-7, and-8), amod(texts-10, Undergraduate-9), conj:and(Graduate-7, texts-10), punct(What-1, ?-11)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(difference-4, the-3), nsubj(What-1, difference-4), case(portamento-6, between-5), nmod:between(difference-4, portamento-6), cc(portamento-6, and-7), conj:and(portamento-6, glissando-8), punct(What-1, ?-9)] 	117
[aux(tell-3, Should-1), nsubj(tell-3, I-2), root(ROOT-0, tell-3), amod(employer-5, prospective-4), dobj(tell-3, employer-5), mark(got-8, that-6), nsubj(got-8, I-7), ccomp(tell-3, got-8), det(raise-10, a-9), dobj(got-8, raise-10), case(job-14, at-11), nmod:poss(job-14, my-12), amod(job-14, current-13), nmod:at(raise-10, job-14), punct(tell-3, ?-15)] 	[advmod(bring-4, How-1), aux(bring-4, do-2), nsubj(bring-4, I-3), root(ROOT-0, bring-4), compound:prt(bring-4, up-5), mark(got-8, that-6), nsubj(got-8, I-7), ccomp(bring-4, got-8), det(offer-12, a-9), amod(offer-12, better-10), compound(offer-12, job-11), dobj(got-8, offer-12), case(employer-17, to-13), nmod:poss(employer-17, my-14), amod(employer-17, new-15), amod(employer-17, current-16), nmod:to(got-8, employer-17), punct(bring-4, ?-18)] 	118
[aux(need-3, Do-1), nsubj(need-3, I-2), root(ROOT-0, need-3), mark(replace-5, to-4), xcomp(need-3, replace-5), nmod:poss(tank-9, my-6), amod(tank-9, hot-7), compound(tank-9, water-8), nmod:poss(valve-13, tank-9), case(tank-9, 's-10), compound(valve-13, pressure-11), compound(valve-13, release-12), dobj(replace-5, valve-13), punct(need-3, ?-14)] 	[aux(need-3, Do-1), nsubj(need-3, I-2), root(ROOT-0, need-3), mark(replace-5, to-4), xcomp(need-3, replace-5), det(valve-9, this-6), compound(valve-9, water-7), compound(valve-9, pressure-8), dobj(replace-5, valve-9), punct(need-3, ?-10)] 	119
[advmod(judge-3, How-1), mark(judge-3, to-2), root(ROOT-0, judge-3), det(quality-5, the-4), dobj(judge-3, quality-5), case(paper-9, of-6), nmod:poss(paper-9, my-7), amod(paper-9, own-8), nmod:of(quality-5, paper-9), punct(judge-3, ?-10)] 	[advmod(assess-4, How-1), aux(assess-4, can-2), nsubj(assess-4, I-3), root(ROOT-0, assess-4), det(quality-6, the-5), dobj(assess-4, quality-6), case(paper-9, of-7), det(paper-9, a-8), nmod:of(quality-6, paper-9), case(field-12, outside-10), nmod:poss(field-12, my-11), nmod:outside(assess-4, field-12), punct(assess-4, ?-13)] 	120
[det(way-2, Which-1), root(ROOT-0, way-2), acl(way-2, does-3), det(flow-6, the-4), compound(flow-6, air-5), dobj(does-3, flow-6), case(furnace-9, through-7), nmod:poss(furnace-9, my-8), nmod:through(flow-6, furnace-9), punct(way-2, ?-10)] 	[det(way-2, Which-1), root(ROOT-0, way-2), acl(way-2, does-3), compound(flow-5, air-4), dobj(does-3, flow-5), case(furnace-8, into-6), det(furnace-8, a-7), nmod:into(flow-5, furnace-8), punct(way-2, ?-9)] 	121
[root(ROOT-0, What-1), cop(What-1, is-2), det(difference-4, the-3), nsubj(What-1, difference-4), case(EFTA-6, between-5), nmod:between(difference-4, EFTA-6), cc(EFTA-6, and-7), det(EU-9, the-8), conj:and(EFTA-6, EU-9), punct(What-1, ?-10)] 	[root(ROOT-0, what-1), cop(what-1, is-2), det(difference-4, the-3), nsubj(what-1, difference-4), case(Erebor-6, between-5), nmod:between(difference-4, Erebor-6), cc(Erebor-6, and-7), conj:and(Erebor-6, Moria-8), punct(what-1, ?-9)] 	122
[advmod(making-6, Why-1), aux(making-6, is-2), nmod:poss(machine-5, my-3), amod(machine-5, washing-4), nsubj(making-6, machine-5), root(ROOT-0, making-6), det(sound-8, this-7), dobj(making-6, sound-8), punct(making-6, ?-9)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(sound-4, this-3), nsubj(What-1, sound-4), case(machine-8, from-5), nmod:poss(machine-8, my-6), amod(machine-8, washing-7), nmod:from(sound-4, machine-8), punct(What-1, ?-9)] 	123
[advmod(stop-4, How-1), aux(stop-4, can-2), nsubj(stop-4, I-3), root(ROOT-0, stop-4), nmod:poss(cat-6, my-5), nmod:poss(playful-8, cat-6), case(cat-6, 's-7), dobj(stop-4, playful-8), cc(stop-4, yet-9), amod(behavior-11, aggressive-10), conj:yet(stop-4, behavior-11), punct(stop-4, ?-12)] 	[root(ROOT-0, Is-1), nmod:poss(cat-3, my-2), nmod:poss(behavior-6, cat-3), case(cat-3, 's-4), amod(behavior-6, aggressive-5), nsubj(playful-7, behavior-6), xcomp(Is-1, playful-7), cc(playful-7, or-8), conj:or(playful-7, mean-9), punct(playful-7, ,-10), cc(playful-7, and-11), advmod(stop-15, how-12), aux(stop-15, do-13), nsubj(stop-15, I-14), conj:and(playful-7, stop-15), dobj(stop-15, it-16), punct(Is-1, ?-17)] 	124
[advmod(convert-4, How-1), aux(convert-4, do-2), nsubj(convert-4, I-3), csubj(switches-12, convert-4), det(fan-7, a-5), compound(fan-7, ceiling-6), dobj(convert-4, fan-7), case(wall-11, with-8), nummod(wall-11, 2-9), amod(wall-11, separate-10), nmod:with(convert-4, wall-11), root(ROOT-0, switches-12), case(fan-16, to-13), det(fan-16, a-14), amod(fan-16, separate-15), nmod:to(switches-12, fan-16), cc(fan-16, &-17), conj:&(fan-16, light-18), dobj(switches-12, switch-19), punct(switches-12, ?-20)] 	[advmod(add-4, How-1), aux(add-4, can-2), nsubj(add-4, I-3), root(ROOT-0, add-4), det(fixture-8, a-5), amod(fixture-8, new-6), amod(fixture-8, light-7), dobj(add-4, fixture-8), mark(wired-14, off-9), case(fan-13, of-10), det(fan-13, a-11), compound(fan-13, ceiling-12), nmod:of(off-9, fan-13), acl(fixture-8, wired-14), case(switches-17, to-15), nummod(switches-17, two-16), nmod:to(wired-14, switches-17), punct(add-4, ?-18)] 	125
[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(store-7, to-6), acl(way-5, store-7), amod(berries-9, fresh-8), dobj(store-7, berries-9), punct(What-1, ?-10)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(fix-7, to-6), acl(way-5, fix-7), det(floor-10, this-8), compound(floor-10, garage-9), dobj(fix-7, floor-10), punct(What-1, ?-11)] 	126
[advmod(remove-4, How-1), aux(remove-4, do-2), nsubj(remove-4, I-3), root(ROOT-0, remove-4), dobj(remove-4, paint-5), case(floor-9, from-6), det(floor-9, a-7), compound(floor-9, wood-8), nmod:from(remove-4, floor-9), punct(remove-4, ?-10)] 	[advmod(remove-4, How-1), aux(remove-4, do-2), nsubj(remove-4, I-3), root(ROOT-0, remove-4), dobj(remove-4, paint-5), case(table-9, from-6), det(table-9, a-7), amod(table-9, porous-8), nmod:from(remove-4, table-9), dep(table-9, top-10), punct(remove-4, ?-11)] 	127
[advmod(repair-4, How-1), aux(repair-4, can-2), nsubj(repair-4, I-3), csubj(ripped-11, repair-4), det(bar-7, a-5), compound(bar-7, towel-6), dobj(repair-4, bar-7), case(end-10, with-8), nummod(end-10, one-9), nmod:with(repair-4, end-10), root(ROOT-0, ripped-11), case(wall-15, out-12), mwe(out-12, of-13), det(wall-15, the-14), nmod:out_of(ripped-11, wall-15), punct(ripped-11, ?-16)] 	[advmod(repair-4, How-1), aux(repair-4, can-2), nsubj(repair-4, I-3), root(ROOT-0, repair-4), det(rack-7, a-5), compound(rack-7, towel-6), dobj(repair-4, rack-7), nsubjpass(ripped-10, that-8), auxpass(ripped-10, was-9), acl:relcl(rack-7, ripped-10), case(wall-14, out-11), mwe(out-11, of-12), det(wall-14, the-13), nmod:out_of(ripped-10, wall-14), punct(repair-4, ?-15)] 	128
[root(ROOT-0, What-1), cop(What-1, is-2), det(difference-4, the-3), nsubj(What-1, difference-4), case(stock-7, between-5), det(stock-7, a-6), nmod:between(difference-4, stock-7), cc(stock-7, and-8), det(bond-10, a-9), conj:and(stock-7, bond-10), punct(What-1, ?-11)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(difference-4, the-3), nsubj(What-1, difference-4), case(cubes-7, between-5), compound(cubes-7, chicken-6), nmod:between(difference-4, cubes-7), cc(cubes-7, and-8), compound(chicken-10, ground-9), conj:and(cubes-7, chicken-10), punct(What-1, ?-11)] 	129
[advmod(remove-3, How-1), mark(remove-3, to-2), root(ROOT-0, remove-3), det(ticks-5, a-4), dobj(remove-3, ticks-5), case(dog-8, on-6), nmod:poss(dog-8, my-7), nmod:on(ticks-5, dog-8), punct(remove-3, ?-9)] 	[advmod(remove-3, How-1), mark(remove-3, to-2), root(ROOT-0, remove-3), det(tick-5, a-4), dobj(remove-3, tick-5), case(dog-8, on-6), det(dog-8, a-7), nmod:on(remove-3, dog-8), punct(remove-3, ?-9)] 	130
[advmod(remove-4, How-1), aux(remove-4, can-2), nsubj(remove-4, I-3), root(ROOT-0, remove-4), det(screw-8, a-5), advmod(stuck-7, really-6), amod(screw-8, stuck-7), dobj(remove-4, screw-8), punct(remove-4, ?-9)] 	[advmod(remove-4, How-1), aux(remove-4, can-2), nsubj(remove-4, I-3), root(ROOT-0, remove-4), det(screw-7, a-5), amod(screw-7, stuck-6), dobj(remove-4, screw-7), nsubj(turn-11, that-8), aux(turn-11, will-9), advmod(turn-11, still-10), acl:relcl(screw-7, turn-11), punct(remove-4, ?-12)] 	131
[root(ROOT-0, Is-1), nsubj(practice-6, it-2), det(practice-6, a-3), amod(practice-6, bad-4), compound(practice-6, writing-5), xcomp(Is-1, practice-6), mark(start-8, to-7), xcomp(practice-6, start-8), dobj(start-8, sentences-9), case(verb-12, with-10), det(verb-12, a-11), nmod:with(start-8, verb-12), punct(Is-1, ?-13)] 	[compound(Title-2, Paper-1), nsubj(better-6, Title-2), punct(Title-2, ,-3), cop(better-6, Is-4), nsubj(better-6, it-5), root(ROOT-0, better-6), mark(start-8, to-7), xcomp(better-6, start-8), case(verb-11, with-9), det(verb-11, a-10), nmod:with(start-8, verb-11), punct(better-6, ?-12)] 	133
[dobj(called-6, What-1), cop(What-1, is-2), det(technique-5, this-3), amod(technique-5, vocal-4), nsubjpass(called-6, technique-5), root(ROOT-0, called-6), punct(called-6, ?-7)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(technique-4, this-3), nsubj(What-1, technique-4), acl(technique-4, called-5), punct(What-1, ?-6)] 	134
[nsubjpass(refereed-3, What-1), auxpass(refereed-3, are-2), root(ROOT-0, refereed-3), cc(refereed-3, and-4), amod(journals-6, non-refereed-5), conj:and(refereed-3, journals-6), punct(refereed-3, ?-7)] 	[root(ROOT-0, What-1), cop(What-1, are-2), det(differences-4, the-3), nsubj(What-1, differences-4), case(Journals-8, between-5), compound(Journals-8, Peer-6), compound(Journals-8, Reviewed-7), nmod:between(differences-4, Journals-8), cc(Journals-8, and-9), compound(Journals-11, Refereed-10), conj:and(Journals-8, Journals-11), punct(What-1, ?-12)] 	135
[advmod(pump-4, How-1), aux(pump-4, do-2), nsubj(pump-4, I-3), root(ROOT-0, pump-4), compound:prt(pump-4, up-5), compound(pressure-7, water-6), dobj(pump-4, pressure-7), case(shower-10, in-8), nmod:poss(shower-10, my-9), nmod:in(pump-4, shower-10), punct(pump-4, ?-11)] 	[advmod(improve-4, How-1), aux(improve-4, can-2), nsubj(improve-4, I-3), root(ROOT-0, improve-4), det(pressure-7, the-5), compound(pressure-7, water-6), dobj(improve-4, pressure-7), case(shower-10, in-8), nmod:poss(shower-10, my-9), nmod:in(pressure-7, shower-10), punct(improve-4, ?-11)] 	136
[compound(visa-2, Schengen-1), root(ROOT-0, visa-2), case(citizen-5, for-3), compound(citizen-5, UK-4), nmod:for(visa-2, citizen-5), punct(visa-2, ?-6)] 	[advmod(apply-3, How-1), mark(apply-3, to-2), root(ROOT-0, apply-3), case(visa-7, for-4), det(visa-7, a-5), compound(visa-7, Schengen-6), nmod:for(apply-3, visa-7), punct(apply-3, ?-8)] 	137
[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(toast-7, to-6), acl(way-5, toast-7), dobj(toast-7, pecans-8), punct(What-1, ?-9)] 	[root(ROOT-0, What-1), cop(What-1, 's-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(store-7, to-6), acl(way-5, store-7), dobj(store-7, asparagus-8), punct(What-1, ?-9)] 	138
[nsubj(eat-4, What-1), aux(eat-4, can-2), nsubj(eat-4, I-3), root(ROOT-0, eat-4), det(night-6, the-5), dobj(eat-4, night-6), mark(help-9, before-7), mark(help-9, to-8), advcl(eat-4, help-9), nsubj(get-11, me-10), ccomp(help-9, get-11), compound:prt(get-11, up-12), case(morning-15, in-13), det(morning-15, the-14), nmod:in(get-11, morning-15), punct(eat-4, ?-16)] 	[det(foods-2, What-1), dobj(eat-5, foods-2), aux(eat-5, can-3), nsubj(eat-5, I-4), root(ROOT-0, eat-5), mark(keep-7, to-6), xcomp(eat-5, keep-7), nmod:poss(energy-9, my-8), nsubj(up-10, energy-9), compound:prt(keep-7, up-10), case(job-14, in-11), det(job-14, an-12), compound(job-14, office-13), nmod:in(keep-7, job-14), case(afternoon-17, in-15), det(afternoon-17, the-16), nmod:in(job-14, afternoon-17), punct(eat-5, ?-18)] 	139
[nsubj(wrong-4, What-1), aux(wrong-4, could-2), cop(wrong-4, be-3), root(ROOT-0, wrong-4), case(furnace-7, with-5), nmod:poss(furnace-7, my-6), nmod:with(wrong-4, furnace-7), punct(wrong-4, ?-8)] 	[nsubj(wrong-4, What-1), aux(wrong-4, could-2), cop(wrong-4, be-3), root(ROOT-0, wrong-4), case(conditioner-8, with-5), nmod:poss(conditioner-8, my-6), compound(conditioner-8, air-7), nmod:with(wrong-4, conditioner-8), punct(wrong-4, ?-9)] 	140
[det(kind-2, What-1), dep(is-5, kind-2), case(socket-4, of-3), nmod:of(kind-2, socket-4), root(ROOT-0, is-5), nsubj(is-5, this-6), punct(is-5, ?-7)] 	[det(type-2, What-1), dep(is-5, type-2), case(asbestos-4, of-3), nmod:of(type-2, asbestos-4), root(ROOT-0, is-5), nsubj(is-5, this-6), punct(is-5, ?-7)] 	141
[dobj(refer-11, What-1), aux(refer-11, does-2), det(term-4, the-3), nsubj(refer-11, term-4), punct(refer-11, ``-5), case(Furnace-9, Out-6), mwe(Out-6, of-7), det(Furnace-9, the-8), nmod:out_of(refer-11, Furnace-9), punct(refer-11, ''-10), root(ROOT-0, refer-11), nmod(refer-11, to-12), punct(refer-11, ?-13)] 	[nsubj(mean-7, What-1), aux(mean-7, does-2), det(mean-7, the-3), punct(mean-7, ``-4), mark(mean-7, to-5), punct(mean-7, ''-6), root(ROOT-0, mean-7), case(Clause-12, in-8), det(Clause-12, the-9), compound(Clause-12, General-10), compound(Clause-12, Welfare-11), nmod:in(mean-7, Clause-12), punct(mean-7, ?-13)] 	142
[advmod(prepare-4, How-1), aux(prepare-4, can-2), nsubj(prepare-4, I-3), root(ROOT-0, prepare-4), det(wall-8, this-5), amod(wall-8, old-6), compound(wall-8, exterior-7), dobj(prepare-4, wall-8), case(painting-10, for-9), nmod:for(prepare-4, painting-10), punct(prepare-4, ?-11)] 	[advmod(prepare-4, How-1), aux(prepare-4, do-2), nsubj(prepare-4, I-3), root(ROOT-0, prepare-4), det(wall-8, this-5), compound(wall-8, exterior-6), amod(wall-8, concrete-7), dobj(prepare-4, wall-8), case(paint-10, for-9), nmod:for(wall-8, paint-10), punct(prepare-4, ?-11)] 	143
[det(part-2, Which-1), nsubj(important-8, part-2), case(GRE-5, of-3), det(GRE-5, the-4), nmod:of(part-2, GRE-5), cop(important-8, is-6), advmod(important-8, more-7), root(ROOT-0, important-8), case(committees-11, to-9), compound(committees-11, admissions-10), nmod:to(important-8, committees-11), punct(important-8, ?-12)] 	[advmod(consider-5, Why-1), aux(consider-5, do-2), compound(committees-4, admissions-3), nsubj(consider-5, committees-4), root(ROOT-0, consider-5), det(Statement-7, the-6), dobj(consider-5, Statement-7), case(Purpose-9, of-8), nmod:of(Statement-7, Purpose-9), mark(important-12, to-10), cop(important-12, be-11), xcomp(consider-5, important-12), punct(consider-5, ?-13)] 	144
[advmod(teach-4, How-1), aux(teach-4, do-2), nsubj(teach-4, you-3), root(ROOT-0, teach-4), det(toddler-6, a-5), dobj(teach-4, toddler-6), neg(share-9, not-7), mark(share-9, to-8), xcomp(teach-4, share-9), punct(teach-4, ?-10)] 	[advmod(teach-4, How-1), aux(teach-4, do-2), nsubj(teach-4, you-3), root(ROOT-0, teach-4), det(views-8, a-5), compound(views-8, child-6), amod(views-8, religious-7), dobj(teach-4, views-8), punct(teach-4, ?-9)] 	145
[root(ROOT-0, What-1), cop(What-1, was-2), det(meaning-4, the-3), nsubj(What-1, meaning-4), case(grams-8, of-5), punct(grams-8, ``-6), nummod(grams-8, 21-7), nmod:of(meaning-4, grams-8), punct(grams-8, ''-9), punct(What-1, ?-10)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(meaning-4, the-3), nsubj(What-1, meaning-4), case(industry-9, of-5), punct(industry-9, ``-6), amod(industry-9, $-7), compound(industry-9, N-8), nmod:of(meaning-4, industry-9), punct(industry-9, ''-10), punct(What-1, ?-11)] 	146
[root(ROOT-0, What-1), cop(What-1, is-2), det(difference-4, the-3), nsubj(What-1, difference-4), case(shawarma-6, between-5), nmod:between(difference-4, shawarma-6), cc(shawarma-6, and-7), conj:and(shawarma-6, gyros-8), punct(What-1, ?-9)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(difference-4, the-3), nsubj(What-1, difference-4), case(portamento-6, between-5), nmod:between(difference-4, portamento-6), cc(portamento-6, and-7), conj:and(portamento-6, glissando-8), punct(What-1, ?-9)] 	147
[root(ROOT-0, What-1), cop(What-1, is-2), det(significance-4, the-3), nsubj(What-1, significance-4), case(cat-7, of-5), det(cat-7, the-6), nmod:of(significance-4, cat-7), punct(What-1, ?-8)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(significance-4, the-3), nsubj(What-1, significance-4), case(car-9, of-5), det(car-9, the-6), amod(car-9, missing-7), compound(car-9, elevator-8), nmod:of(significance-4, car-9), punct(What-1, ?-10)] 	148
[advmod(long-2, How-1), dep(is-3, long-2), root(ROOT-0, is-3), det(life-5, the-4), nsubj(is-3, life-5), case(shot-8, of-6), det(shot-8, a-7), nmod:of(life-5, shot-8), case(espresso-10, of-9), nmod:of(shot-8, espresso-10), punct(is-3, ?-11)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(length-5, the-3), amod(length-5, optimal-4), nsubj(What-1, length-5), case(time-7, of-6), nmod:of(length-5, time-7), mark(pulling-9, for-8), acl(length-5, pulling-9), det(shot-11, a-10), dobj(pulling-9, shot-11), case(espresso-13, of-12), nmod:of(shot-11, espresso-13), punct(What-1, ?-14)] 	149
[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(learn-7, to-6), acl(way-5, learn-7), dobj(learn-7, finger-picking-8), case(guitar-12, on-9), det(guitar-12, an-10), amod(guitar-12, acoustic-11), nmod:on(finger-picking-8, guitar-12), punct(What-1, ?-13)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(learn-7, to-6), acl(way-5, learn-7), mark(play-9, to-8), xcomp(learn-7, play-9), det(piece-11, a-10), dobj(play-9, piece-11), case(guitar-14, on-12), det(guitar-14, the-13), nmod:on(play-9, guitar-14), punct(What-1, ?-15)] 	150
[advmod(rid-5, How-1), aux(rid-5, can-2), nsubj(rid-5, I-3), dep(rid-5, get-4), root(ROOT-0, rid-5), case(fleas-7, of-6), nmod:of(rid-5, fleas-7), punct(rid-5, ?-8)] 	[advmod(rid-5, How-1), aux(rid-5, can-2), nsubj(rid-5, I-3), dep(rid-5, get-4), root(ROOT-0, rid-5), case(fleas-7, of-6), nmod:of(rid-5, fleas-7), case(crawlspace-10, in-8), nmod:poss(crawlspace-10, my-9), nmod:in(rid-5, crawlspace-10), advmod(rid-5, forever-11), punct(rid-5, ?-12)] 	151
[cop(possible-3, Is-1), nsubj(possible-3, it-2), root(ROOT-0, possible-3), mark(do-5, to-4), xcomp(possible-3, do-5), det(Master-7, a-6), dobj(do-5, Master-7), case(Master-7, 's-8), case(Mathematics-10, in-9), nmod:in(Master-7, Mathematics-10), advmod(do-5, after-11), det(Bachelor-13, a-12), dep(after-11, Bachelor-13), case(Bachelor-13, 's-14), case(Economics-16, in-15), nmod:in(Bachelor-13, Economics-16), punct(possible-3, ?-17)] 	[aux(get-3, Can-1), nsubj(get-3, I-2), root(ROOT-0, get-3), det(Master-5, a-4), dobj(get-3, Master-5), case(Master-5, 's-6), case(Economics-8, in-7), nmod:in(Master-5, Economics-8), nmod(get-3, with-9), det(Bachelor-11, a-10), dep(with-9, Bachelor-11), case(Bachelor-11, 's-12), case(Mathematics-14, in-13), nmod:in(Bachelor-11, Mathematics-14), punct(get-3, ?-15)] 	152
[aux(switch-3, Should-1), nsubj(switch-3, I-2), root(ROOT-0, switch-3), case(person-6, to-4), amod(person-6, third-5), nmod:to(switch-3, person-6), cc(switch-3, or-7), conj:or(switch-3, continue-8), case(person-11, in-9), amod(person-11, first-10), nmod:in(continue-8, person-11), punct(switch-3, ?-12)] 	[aux(write-3, Should-1), nsubj(write-3, I-2), root(ROOT-0, write-3), nmod:poss(biography-5, my-4), dobj(write-3, biography-5), case(person-11, in-6), det(person-11, the-7), amod(person-11, first-8), cc(first-8, or-9), conj:or(first-8, third-10), nmod:in(write-3, person-11), punct(write-3, ?-12)] 	153
[advmod(troubleshoot-4, How-1), aux(troubleshoot-4, do-2), nsubj(troubleshoot-4, I-3), root(ROOT-0, troubleshoot-4), nmod:poss(oven-7, my-5), amod(oven-7, electric-6), dobj(troubleshoot-4, oven-7), punct(troubleshoot-4, ?-8)] 	[advmod(troubleshoot-4, How-1), aux(troubleshoot-4, do-2), nsubj(troubleshoot-4, I-3), root(ROOT-0, troubleshoot-4), det(furnace-7, an-5), amod(furnace-7, electric-6), dobj(troubleshoot-4, furnace-7), punct(troubleshoot-4, ?-8)] 	154
[advmod(tell-4, How-1), aux(tell-4, can-2), nsubj(tell-4, I-3), root(ROOT-0, tell-4), mark(seems-9, whether-5), det(journal-8, a-6), compound(journal-8, mathematics-7), nsubj(seems-9, journal-8), ccomp(tell-4, seems-9), xcomp(seems-9, reputable-10), punct(tell-4, ?-11)] 	[advmod(tell-4, How-1), aux(tell-4, can-2), nsubj(tell-4, I-3), root(ROOT-0, tell-4), mark(reputable-9, if-5), det(journal-7, a-6), nsubj(reputable-9, journal-7), cop(reputable-9, is-8), advcl(tell-4, reputable-9), punct(tell-4, ?-10)] 	155
[cop(way-4, Is-1), expl(way-4, there-2), det(way-4, a-3), root(ROOT-0, way-4), mark(find-6, to-5), xcomp(way-4, find-6), compound:prt(find-6, out-7), mark(need-10, if-8), nsubj(need-10, I-9), advcl(find-6, need-10), det(visa-13, a-11), compound(visa-13, transit-12), dobj(need-10, visa-13), case(layover-16, for-14), det(layover-16, a-15), nmod:for(need-10, layover-16), case(UK-19, in-17), det(UK-19, the-18), nmod:in(layover-16, UK-19), punct(way-4, ?-20)] 	[nsubj(have-2, I-1), root(ROOT-0, have-2), det(Layover-4, a-3), nsubj(need-16, Layover-4), case(Japan-6, in-5), nmod:in(Layover-4, Japan-6), punct(Layover-4, ,-7), acl(Layover-4, Going-8), mark(stayfor-10, to-9), xcomp(Going-8, stayfor-10), det(month-12, a-11), nmod:tmod(stayfor-10, month-12), punct(Layover-4, ,-13), aux(need-16, Do-14), nsubj(need-16, I-15), ccomp(have-2, need-16), det(Visa-19, a-17), compound(Visa-19, Transit-18), dobj(need-16, Visa-19), punct(have-2, ?-20)] 	156
[advmod(help-4, How-1), aux(help-4, can-2), nsubj(help-4, I-3), root(ROOT-0, help-4), nmod:poss(dog-6, my-5), nsubj(adjust-7, dog-6), ccomp(help-4, adjust-7), case(move-10, to-8), det(move-10, a-9), nmod:to(adjust-7, move-10), punct(help-4, ?-11)] 	[advmod(help-4, How-1), aux(help-4, do-2), nsubj(help-4, I-3), root(ROOT-0, help-4), nmod:poss(dog-6, my-5), nsubj(adjust-7, dog-6), ccomp(help-4, adjust-7), mark(moving-9, after-8), advcl(adjust-7, moving-9), punct(help-4, ?-10)] 	157
[advmod(long-2, How-1), advmod(cooked-4, long-2), aux(cooked-4, does-3), root(ROOT-0, cooked-4), nsubj(keep-6, TVP-5), ccomp(cooked-4, keep-6), case(fridge-9, in-7), det(fridge-9, the-8), nmod:in(keep-6, fridge-9), punct(cooked-4, ?-10)] 	[advmod(long-2, How-1), root(ROOT-0, long-2), dep(long-2, does-3), amod(meat-5, uncooked-4), dobj(does-3, meat-5), amod(meat-5, last-6), advmod(kept-8, when-7), dep(last-6, kept-8), case(freezer-11, in-9), det(freezer-11, the-10), nmod:in(kept-8, freezer-11), punct(long-2, ?-12)] 	158
[cop(appropriate-3, Is-1), nsubj(appropriate-3, it-2), root(ROOT-0, appropriate-3), mark(call-5, to-4), xcomp(appropriate-3, call-5), det(professor-7, a-6), dobj(call-5, professor-7), case(recommendation-10, for-8), det(recommendation-10, a-9), nmod:for(call-5, recommendation-10), case(weekend-13, on-11), det(weekend-13, the-12), nmod:on(recommendation-10, weekend-13), punct(appropriate-3, ?-14)] 	[root(ROOT-0, Is-1), nsubj(appropriate-3, it-2), xcomp(Is-1, appropriate-3), mark(send-5, to-4), xcomp(appropriate-3, send-5), det(gift-7, a-6), dobj(send-5, gift-7), case(professor-10, to-8), det(professor-10, a-9), nmod:to(send-5, professor-10), case(course-14, for-11), det(course-14, an-12), amod(course-14, online-13), nmod:for(send-5, course-14), punct(Is-1, ?-15)] 	159
[advmod(pump-4, How-1), aux(pump-4, do-2), nsubj(pump-4, I-3), root(ROOT-0, pump-4), compound:prt(pump-4, up-5), compound(pressure-7, water-6), dobj(pump-4, pressure-7), case(shower-10, in-8), nmod:poss(shower-10, my-9), nmod:in(pump-4, shower-10), punct(pump-4, ?-11)] 	[advmod(boost-4, How-1), aux(boost-4, can-2), nsubj(boost-4, I-3), root(ROOT-0, boost-4), det(pressure-7, the-5), compound(pressure-7, water-6), dobj(boost-4, pressure-7), case(shower-10, in-8), nmod:poss(shower-10, my-9), nmod:in(boost-4, shower-10), punct(boost-4, ?-11)] 	160
[root(ROOT-0, What-1), cop(What-1, is-2), det(significance-4, the-3), nsubj(What-1, significance-4), case(cat-7, of-5), det(cat-7, the-6), nmod:of(significance-4, cat-7), punct(What-1, ?-8)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(significance-4, the-3), nsubj(What-1, significance-4), case(artwork-7, of-5), det(artwork-7, the-6), nmod:of(significance-4, artwork-7), punct(What-1, ?-8)] 	161
[dobj(do-4, What-1), aux(do-4, can-2), nsubj(do-4, I-3), root(ROOT-0, do-4), mark(fix-6, to-5), xcomp(do-4, fix-6), amod(mayonnaise-8, store-bought-7), dobj(fix-6, mayonnaise-8), det(split-10, that-9), dep(mayonnaise-8, split-10), punct(do-4, ?-11)] 	[advmod(make-4, How-1), aux(make-4, do-2), nsubj(make-4, I-3), root(ROOT-0, make-4), compound(split-6, mayonnaise-5), dobj(make-4, split-6), punct(make-4, ?-7)] 	162
[advmod(stop-4, How-1), aux(stop-4, can-2), nsubj(stop-4, I-3), root(ROOT-0, stop-4), nmod:poss(pie-6, my-5), dobj(stop-4, pie-6), case(burning-8, from-7), nmod:from(stop-4, burning-8), punct(stop-4, ?-9)] 	[advmod(re-heat-5, How-1), aux(re-heat-5, can-2), nsubj(re-heat-5, I-3), advmod(re-heat-5, safely-4), root(ROOT-0, re-heat-5), det(pie-8, a-6), compound(pie-8, chicken-7), dobj(re-heat-5, pie-8), mark(burning-10, without-9), advcl(re-heat-5, burning-10), det(crust-12, the-11), dobj(burning-10, crust-12), punct(re-heat-5, ?-13)] 	163
[advmod(work-4, How-1), aux(work-4, can-2), nsubj(work-4, I-3), root(ROOT-0, work-4), compound:prt(work-4, out-5), advmod(valuable-7, how-6), dep(boss-12, valuable-7), nsubj(boss-12, I-8), cop(boss-12, am-9), case(boss-12, to-10), nmod:poss(boss-12, my-11), dep(work-4, boss-12), cc(boss-12, and-13), conj:and(boss-12, company-14), punct(work-4, ?-15)] 	[advmod(tell-3, How-1), mark(tell-3, to-2), root(ROOT-0, tell-3), nmod:poss(company-5, my-4), dobj(tell-3, company-5), mark(having-9, that-6), nsubj(having-9, I-7), aux(having-9, am-8), ccomp(tell-3, having-9), dobj(having-9, issues-10), case(boss-13, with-11), nmod:poss(boss-13, my-12), nmod:with(having-9, boss-13), punct(tell-3, ?-14)] 	164
[advmod(need-4, Why-1), aux(need-4, do-2), nsubj(need-4, you-3), root(ROOT-0, need-4), mark(peel-6, to-5), xcomp(need-4, peel-6), dobj(peel-6, peaches-7), mark(can-9, to-8), advcl(peel-6, can-9), dobj(can-9, them-10), punct(need-4, ?-11)] 	[advmod(peel-3, How-1), mark(peel-3, to-2), root(ROOT-0, peel-3), dobj(peel-3, peaches-4), punct(peel-3, ?-5)] 	165
[advmod(increase-4, How-1), aux(increase-4, do-2), nsubj(increase-4, I-3), root(ROOT-0, increase-4), det(height-6, the-5), dobj(increase-4, height-6), case(lock-12, of-7), det(lock-12, a-8), amod(lock-12, sliding-9), compound(lock-12, glass-10), compound(lock-12, door-11), nmod:of(height-6, lock-12), punct(increase-4, ?-13)] 	[advmod(measure-4, How-1), aux(measure-4, do-2), nsubj(measure-4, I-3), root(ROOT-0, measure-4), det(door-9, a-5), amod(door-9, standard-6), amod(door-9, sliding-7), compound(door-9, glass-8), dobj(measure-4, door-9), punct(measure-4, ?-10)] 	166
[dobj(mean-4, What-1), aux(mean-4, does-2), nsubj(mean-4, it-3), root(ROOT-0, mean-4), case(university-9, by-5), det(university-9, a-6), punct(university-9, ``-7), compound(university-9, research-8), nmod:by(mean-4, university-9), punct(university-9, ''-10), punct(mean-4, ?-11)] 	[root(ROOT-0, What-1), dep(What-1, does-2), punct(ranking-5, ``-3), compound(ranking-5, university-4), nsubj(does-2, ranking-5), punct(ranking-5, ''-6), dep(ranking-5, mean-7), case(committee-12, for-8), det(committee-12, a-9), amod(committee-12, graduate-10), compound(committee-12, admissions-11), nmod:for(mean-7, committee-12), punct(does-2, ?-13)] 	167
[advmod(clean-4, How-1), aux(clean-4, do-2), nsubj(clean-4, I-3), root(ROOT-0, clean-4), det(refrigerator-8, a-5), advmod(dirty-7, very-6), amod(refrigerator-8, dirty-7), dobj(clean-4, refrigerator-8), punct(clean-4, ?-9)] 	[advmod(clean-4, How-1), aux(clean-4, do-2), nsubj(clean-4, I-3), root(ROOT-0, clean-4), det(brush-8, a-5), amod(brush-8, Hammerite-6), compound(brush-8, paint-7), dobj(clean-4, brush-8), punct(clean-4, ?-9)] 	168
[advmod(apply-3, How-1), mark(apply-3, to-2), root(ROOT-0, apply-3), case(visa-7, for-4), det(visa-7, a-5), compound(visa-7, Schengen-6), nmod:for(apply-3, visa-7), punct(apply-3, ?-8)] 	[cop(possible-3, Is-1), nsubj(possible-3, it-2), root(ROOT-0, possible-3), mark(get-5, to-4), xcomp(possible-3, get-5), det(visa-8, a-6), compound(visa-8, Schengen-7), dobj(get-5, visa-8), case(date-11, for-9), amod(date-11, future-10), nmod:for(get-5, date-11), punct(possible-3, ?-12)] 	169
[advmod(replace-4, How-1), aux(replace-4, do-2), nsubj(replace-4, I-3), root(ROOT-0, replace-4), det(bulb-8, a-5), amod(bulb-8, broken-6), compound(bulb-8, halogen-7), dobj(replace-4, bulb-8), case(light-12, in-9), det(light-12, the-10), amod(light-12, recessed-11), nmod:in(replace-4, light-12), case(bathroom-15, in-13), nmod:poss(bathroom-15, my-14), nmod:in(light-12, bathroom-15), punct(replace-4, ?-16)] 	[advmod(replace-3, How-1), mark(replace-3, to-2), root(ROOT-0, replace-3), amod(light-6, recessed-4), compound(light-6, halogen-5), dobj(replace-3, light-6), case(fixture-10, from-7), det(fixture-10, an-8), compound(fixture-10, eyeball-9), nmod:from(replace-3, fixture-10), punct(replace-3, ?-11)] 	170
[aux(negotiate-3, Should-1), nsubj(negotiate-3, I-2), root(ROOT-0, negotiate-3), mark(offered-7, if-4), nsubjpass(offered-7, I-5), auxpass(offered-7, 'm-6), advcl(negotiate-3, offered-7), advmod(asked-13, more-8), mwe(more-8, than-9), dobj(asked-13, what-10), nsubj(asked-13, I-11), advmod(asked-13, initially-12), ccomp(offered-7, asked-13), nmod(asked-13, for-14), punct(negotiate-3, ?-15)] 	[nsubjpass(offered-3, I-1), auxpass(offered-3, was-2), root(ROOT-0, offered-3), det(salary-6, the-4), amod(salary-6, minimum-5), dobj(offered-3, salary-6), nsubj(requested-8, I-7), acl:relcl(salary-6, requested-8), punct(offered-3, ,-9), aux(ask-12, should-10), nsubj(ask-12, I-11), parataxis(offered-3, ask-12), case(more-14, for-13), nmod:for(ask-12, more-14), punct(offered-3, ?-15)] 	171
[advmod(sure-5, How-1), aux(sure-5, can-2), nsubj(sure-5, I-3), cop(sure-5, be-4), root(ROOT-0, sure-5), nmod:poss(softener-8, my-6), compound(softener-8, water-7), nsubj(working-10, softener-8), aux(working-10, is-9), ccomp(sure-5, working-10), punct(sure-5, ?-11)] 	[advmod(determine-4, How-1), aux(determine-4, can-2), nsubj(determine-4, I-3), root(ROOT-0, determine-4), nsubj(water-9, what-5), cop(water-9, is-6), case(water-9, in-7), nmod:poss(water-9, my-8), ccomp(determine-4, water-9), punct(determine-4, ?-10)] 	172
[cop(acceptable-3, Is-1), nsubj(acceptable-3, it-2), root(ROOT-0, acceptable-3), case(referee-5, as-4), nmod:as(acceptable-3, referee-5), mark(contact-7, to-6), xcomp(acceptable-3, contact-7), det(author-9, an-8), dobj(contact-7, author-9), case(paper-12, on-10), det(paper-12, a-11), nmod:on(contact-7, paper-12), nsubj(review-14, you-13), acl:relcl(paper-12, review-14), punct(acceptable-3, ?-15)] 	[cop(appropriate-3, Is-1), nsubj(appropriate-3, it-2), root(ROOT-0, appropriate-3), case(referee-6, as-4), det(referee-6, a-5), nmod:as(appropriate-3, referee-6), mark(contact-8, to-7), acl(referee-6, contact-8), det(author-10, an-9), dobj(contact-8, author-10), mark(rejected-14, after-11), det(editor-13, the-12), nsubj(rejected-14, editor-13), advcl(contact-8, rejected-14), det(manuscript-16, the-15), dobj(rejected-14, manuscript-16), punct(appropriate-3, ?-17)] 	174
[det(kind-2, What-1), dep(is-6, kind-2), case(web-5, of-3), compound(web-5, spider-4), nmod:of(kind-2, web-5), root(ROOT-0, is-6), nsubj(is-6, this-7), punct(this-7, --8), cc(this-7, and-9), advmod(rid-14, how-10), aux(rid-14, do-11), nsubj(rid-14, I-12), dep(rid-14, get-13), conj:and(this-7, rid-14), case(it-16, of-15), nmod:of(rid-14, it-16), punct(is-6, ?-17)] 	[det(kind-2, What-1), dep(is-5, kind-2), case(board-4, of-3), nmod:of(kind-2, board-4), root(ROOT-0, is-5), nsubj(is-5, this-6), punct(is-5, ,-7), cc(is-5, and-8), advmod(get-12, where-9), aux(get-12, can-10), nsubj(get-12, I-11), conj:and(is-5, get-12), dobj(get-12, some-13), punct(is-5, ?-14)] 	175
[advmod(cite-4, How-1), aux(cite-4, should-2), nsubj(cite-4, I-3), root(ROOT-0, cite-4), det(screenshot-6, a-5), dobj(cite-4, screenshot-6), case(style-9, in-7), compound(style-9, APA-8), nmod:in(screenshot-6, style-9), case(paper-13, for-10), nmod:poss(paper-13, my-11), compound(paper-13, student-12), nmod:for(screenshot-6, paper-13), punct(cite-4, ?-14)] 	[advmod(cite-4, How-1), aux(cite-4, should-2), nsubj(cite-4, I-3), root(ROOT-0, cite-4), compound(questions-6, StackOverflow-5), dobj(cite-4, questions-6), case(paper-10, in-7), nmod:poss(paper-10, my-8), compound(paper-10, term-9), nmod:in(cite-4, paper-10), punct(cite-4, ?-11)] 	176
[root(ROOT-0, What-1), cop(What-1, is-2), det(solo-5, a-3), amod(solo-5, good-4), nsubj(What-1, solo-5), mark(learn-7, to-6), acl(solo-5, learn-7), case(mode-11, in-8), det(mode-11, the-9), compound(mode-11, Dorian-10), nmod:in(learn-7, mode-11), punct(What-1, ?-12)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(solo-6, a-3), amod(solo-6, good-4), compound(solo-6, guitar-5), nsubj(What-1, solo-6), mark(learn-8, to-7), acl(solo-6, learn-8), case(scale-12, in-9), det(scale-12, the-10), amod(scale-12, minor-11), nmod:in(learn-8, scale-12), punct(What-1, ?-13)] 	177
[advmod(cap-4, How-1), aux(cap-4, do-2), nsubj(cap-4, I-3), root(ROOT-0, cap-4), det(junction-7, a-5), compound(junction-7, T-6), dobj(cap-4, junction-7), case(ridge-11, on-8), det(ridge-11, a-9), compound(ridge-11, roof-10), nmod:on(cap-4, ridge-11), punct(cap-4, ?-12)] 	[advmod(finish-4, How-1), aux(finish-4, do-2), nsubj(finish-4, I-3), root(ROOT-0, finish-4), det(cap-7, a-5), compound(cap-7, ridge-6), dobj(finish-4, cap-7), punct(finish-4, ?-8)] 	178
[advmod(teach-4, How-1), aux(teach-4, do-2), nsubj(teach-4, you-3), root(ROOT-0, teach-4), det(toddler-6, a-5), dobj(teach-4, toddler-6), neg(share-9, not-7), mark(share-9, to-8), xcomp(teach-4, share-9), punct(teach-4, ?-10)] 	[advmod(get-4, How-1), aux(get-4, do-2), nsubj(get-4, you-3), root(ROOT-0, get-4), det(child-6, a-5), dobj(get-4, child-6), mark(eat-8, to-7), xcomp(get-4, eat-8), punct(get-4, ?-9)] 	179
[advmod(lick-6, Why-1), aux(lick-6, does-2), neg(lick-6, n't-3), nmod:poss(cat-5, my-4), nsubj(lick-6, cat-5), root(ROOT-0, lick-6), dobj(lick-6, me-7), punct(lick-6, ?-8)] 	[root(ROOT-0, Why-1), dep(Why-1, does-2), neg(cat-5, n't-3), nmod:poss(cat-5, my-4), dobj(does-2, cat-5), mark(held-8, like-6), auxpass(held-8, being-7), acl(cat-5, held-8), punct(Why-1, ?-9)] 	180
[advmod(stop-4, How-1), aux(stop-4, do-2), nsubj(stop-4, I-3), root(ROOT-0, stop-4), nmod:poss(dog-6, my-5), dobj(stop-4, dog-6), mark(jumping-8, from-7), advcl(stop-4, jumping-8), case(me-10, on-9), nmod:on(jumping-8, me-10), punct(stop-4, ?-11)] 	[advmod(stop-4, How-1), aux(stop-4, do-2), nsubj(stop-4, I-3), root(ROOT-0, stop-4), nmod:poss(dog-6, my-5), dobj(stop-4, dog-6), case(barking-8, from-7), nmod:from(stop-4, barking-8), case(people-10, at-9), nmod:at(barking-8, people-10), case(fence-13, through-11), det(fence-13, the-12), nmod:through(barking-8, fence-13), punct(stop-4, ?-14)] 	181
[advmod(make-3, How-1), mark(make-3, to-2), root(ROOT-0, make-3), det(mug-6, a-4), amod(mug-6, strong-5), dobj(make-3, mug-6), case(coffee-9, of-7), compound(coffee-9, filter-8), nmod:of(mug-6, coffee-9), case(machine-13, without-10), det(machine-13, any-11), compound(machine-13, Coffee-12), nmod:without(make-3, machine-13), punct(make-3, ?-14)] 	[advmod(make-3, How-1), mark(make-3, to-2), root(ROOT-0, make-3), det(mug-6, a-4), amod(mug-6, strong-5), dobj(make-3, mug-6), case(Coffee-9, of-7), amod(Coffee-9, instant-8), nmod:of(mug-6, Coffee-9), punct(make-3, ?-10)] 	182
[advmod(repair-4, How-1), aux(repair-4, do-2), nsubj(repair-4, I-3), root(ROOT-0, repair-4), det(pipe-7, this-5), amod(pipe-7, broken-6), dobj(repair-4, pipe-7), punct(repair-4, ?-8)] 	[advmod(level-4, How-1), aux(level-4, do-2), nsubj(level-4, I-3), root(ROOT-0, level-4), det(pipe-6, a-5), dobj(level-4, pipe-6), case(ground-9, with-7), det(ground-9, the-8), nmod:with(level-4, ground-9), punct(level-4, ?-10)] 	183
[root(ROOT-0, What-1), cop(What-1, are-2), det(types-4, the-3), nsubj(What-1, types-4), case(Guitar-6, of-5), nmod:of(types-4, Guitar-6), amod(Guitar-6, available-7), cc(Guitar-6, and-8), nsubj(pros-12, what-9), cop(pros-12, are-10), det(pros-12, the-11), conj:and(Guitar-6, pros-12), cc(pros-12, and-13), conj:and(pros-12, cons-14), case(each-16, of-15), nmod:of(cons-14, each-16), punct(What-1, ?-17)] 	[root(ROOT-0, What-1), cop(What-1, are-2), det(advantages-4, the-3), nsubj(What-1, advantages-4), cc(advantages-4, and-5), conj:and(advantages-4, disadvantages-6), case(methods-9, of-7), amod(methods-9, various-8), nmod:of(advantages-4, methods-9), mark(supporting-11, of-10), acl(methods-9, supporting-11), det(guitar-14, the-12), amod(guitar-14, classical-13), dobj(supporting-11, guitar-14), punct(What-1, ?-15)] 	184
[det(type-2, What-1), dobj(use-8, type-2), case(bolts-5, of-3), compound(bolts-5, lag-4), nmod:of(type-2, bolts-5), aux(use-8, should-6), nsubj(use-8, I-7), root(ROOT-0, use-8), case(deck-11, for-9), det(deck-11, a-10), nmod:for(use-8, deck-11), punct(use-8, ?-12)] 	[det(type-2, What-1), dobj(use-7, type-2), case(screws-4, of-3), nmod:of(type-2, screws-4), aux(use-7, should-5), nsubj(use-7, I-6), root(ROOT-0, use-7), punct(use-7, ?-8)] 	185
[advmod(paint-4, How-1), aux(paint-4, do-2), nsubj(paint-4, I-3), root(ROOT-0, paint-4), dobj(paint-4, art-5), case(wall-8, onto-6), det(wall-8, a-7), nmod:onto(paint-4, wall-8), punct(paint-4, ?-9)] 	[advmod(make-4, How-1), aux(make-4, do-2), nsubj(make-4, I-3), root(ROOT-0, make-4), det(match-7, this-5), compound(match-7, paint-6), dobj(make-4, match-7), punct(make-4, ?-8)] 	186
[root(ROOT-0, What-1), cop(What-1, 's-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(introduce-7, to-6), acl(way-5, introduce-7), det(chinchilla-9, a-8), dobj(introduce-7, chinchilla-9), case(household-12, to-10), det(household-12, a-11), nmod:to(introduce-7, household-12), case(cats-14, with-13), nmod:with(household-12, cats-14), punct(What-1, ?-15)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(introduce-7, to-6), acl(way-5, introduce-7), dobj(introduce-7, cats-8), case(newborns-10, to-9), nmod:to(introduce-7, newborns-10), punct(What-1, ?-11)] 	187
[root(ROOT-0, What-1), cop(What-1, 's-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(store-7, to-6), acl(way-5, store-7), dobj(store-7, potatoes-8), cc(store-7, and-9), conj:and(store-7, maximize-10), nmod:poss(shelf-life-12, their-11), dobj(maximize-10, shelf-life-12), punct(What-1, ?-13)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(store-7, to-6), acl(way-5, store-7), amod(berries-9, fresh-8), dobj(store-7, berries-9), punct(What-1, ?-10)] 	188
[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(store-7, to-6), acl(way-5, store-7), amod(berries-9, fresh-8), dobj(store-7, berries-9), punct(What-1, ?-10)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(store-7, to-6), acl(way-5, store-7), compound(coffee-9, ground-8), dobj(store-7, coffee-9), punct(What-1, ?-10)] 	190
[dobj(mean-6, What-1), aux(mean-6, does-2), det(notation-5, this-3), compound(notation-5, tablature-4), nsubj(mean-6, notation-5), root(ROOT-0, mean-6), punct(mean-6, ?-7)] 	[dobj(mean-5, What-1), aux(mean-5, does-2), det(notation-4, this-3), nsubj(mean-5, notation-4), root(ROOT-0, mean-5), punct(mean-5, ?-6)] 	191
[advmod(rid-5, How-1), aux(rid-5, can-2), nsubj(rid-5, I-3), dep(rid-5, get-4), root(ROOT-0, rid-5), case(fleas-7, of-6), nmod:of(rid-5, fleas-7), punct(rid-5, ?-8)] 	[advmod(rid-5, How-1), aux(rid-5, do-2), nsubj(rid-5, I-3), dep(rid-5, get-4), root(ROOT-0, rid-5), case(fleas-7, of-6), nmod:of(rid-5, fleas-7), case(rabbit-10, on-8), nmod:poss(rabbit-10, my-9), nmod:on(rid-5, rabbit-10), punct(rid-5, ?-11)] 	192
[advmod(add-4, How-1), aux(add-4, can-2), nsubj(add-4, I-3), root(ROOT-0, add-4), det(receptacle-7, a-5), compound(receptacle-7, GFCI-6), dobj(add-4, receptacle-7), case(circuit-10, on-8), det(circuit-10, a-9), nmod:on(receptacle-7, circuit-10), case(receptacles-13, with-11), amod(receptacles-13, split-12), nmod:with(circuit-10, receptacles-13), punct(add-4, ?-14)] 	[advmod(add-4, How-1), aux(add-4, can-2), nsubj(add-4, I-3), root(ROOT-0, add-4), det(breaker-7, a-5), compound(breaker-7, GFCI-6), dobj(add-4, breaker-7), case(circuits-10, on-8), nummod(circuits-10, two-9), nmod:on(add-4, circuits-10), case(neutral-14, with-11), det(neutral-14, a-12), amod(neutral-14, shared-13), nmod:with(circuits-10, neutral-14), case(rewiring-16, without-15), nmod:without(neutral-14, rewiring-16), punct(add-4, ?-17)] 	193
[dobj(mean-4, What-1), aux(mean-4, does-2), nsubj(mean-4, it-3), root(ROOT-0, mean-4), mark(write-6, to-5), xcomp(mean-4, write-6), det(song-8, a-7), dobj(write-6, song-8), case(key-12, in-9), det(key-12, a-10), amod(key-12, certain-11), nmod:in(write-6, key-12), punct(mean-4, ?-13)] 	[cop(possible-3, Is-1), nsubj(possible-3, it-2), root(ROOT-0, possible-3), mark(write-5, to-4), xcomp(possible-3, write-5), det(song-7, a-6), dobj(write-5, song-7), case(key-10, without-8), det(key-10, a-9), nmod:without(write-5, key-10), punct(possible-3, ?-11)] 	194
[root(ROOT-0, What-1), cop(What-1, is-2), det(solo-5, a-3), amod(solo-5, good-4), nsubj(What-1, solo-5), mark(learn-7, to-6), acl(solo-5, learn-7), case(mode-11, in-8), det(mode-11, the-9), compound(mode-11, Dorian-10), nmod:in(learn-7, mode-11), punct(What-1, ?-12)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(solo-5, a-3), amod(solo-5, good-4), nsubj(What-1, solo-5), mark(learn-7, to-6), acl(solo-5, learn-7), case(scale-11, in-8), det(scale-11, the-9), amod(scale-11, major-10), nmod:in(learn-7, scale-11), punct(What-1, ?-12)] 	195
[advmod(long-2, How-1), advmod(wait-5, long-2), aux(wait-5, should-3), nsubj(wait-5, I-4), root(ROOT-0, wait-5), case(application-8, between-6), compound(application-8, grout-7), nmod:between(wait-5, application-8), cc(application-8, and-9), conj:and(application-8, sealant-10), punct(wait-5, ?-11)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(difference-4, the-3), nsubj(What-1, difference-4), case(stock-7, between-5), det(stock-7, a-6), nmod:between(difference-4, stock-7), cc(stock-7, and-8), det(bond-10, a-9), conj:and(stock-7, bond-10), punct(What-1, ?-11)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(difference-4, the-3), nsubj(What-1, difference-4), case(tortoise-7, between-5), det(tortoise-7, a-6), nmod:between(difference-4, tortoise-7), cc(tortoise-7, and-8), det(turtle-10, a-9), conj:and(tortoise-7, turtle-10), punct(What-1, ?-11)] 	198
[advmod(remove-4, How-1), aux(remove-4, do-2), nsubj(remove-4, I-3), root(ROOT-0, remove-4), dobj(remove-4, paint-5), case(floor-9, from-6), det(floor-9, a-7), compound(floor-9, wood-8), nmod:from(remove-4, floor-9), punct(remove-4, ?-10)] 	[advmod(remove-3, How-1), mark(remove-3, to-2), root(ROOT-0, remove-3), compound(smell-5, milk-4), dobj(remove-3, smell-5), case(floor-8, from-6), compound(floor-8, hardwood-7), nmod:from(remove-3, floor-8), punct(remove-3, ?-9)] 	199
[advmod(Paying-3, How-1), aux(Paying-3, does-2), advcl(affect-13, Paying-3), compound(card-5, credit-4), dobj(Paying-3, card-5), case(VS-8, in-6), amod(VS-8, full-7), nmod:in(affect-13, VS-8), csubj(affect-13, paying-9), case(interest-11, with-10), nmod:with(paying-9, interest-11), aux(affect-13, will-12), root(ROOT-0, affect-13), nmod:poss(score-16, your-14), compound(score-16, credit-15), dobj(affect-13, score-16), punct(affect-13, ?-17)] 	[aux(paying-2, Will-1), root(ROOT-0, paying-2), compound:prt(paying-2, off-3), det(card-6, a-4), compound(card-6, credit-5), nsubj(affect-8, card-6), amod(affect-8, early-7), ccomp(paying-2, affect-8), nmod:poss(score-11, my-9), compound(score-11, credit-10), dobj(affect-8, score-11), punct(paying-2, ?-12)] 	200
[root(ROOT-0, What-1), cop(What-1, is-2), det(difference-4, the-3), nsubj(What-1, difference-4), case(mono-6, between-5), nmod:between(difference-4, mono-6), cc(mono-6, and-7), conj:and(mono-6, stereo-8), punct(What-1, ?-9)] 	[root(ROOT-0, What-1), cop(What-1, is-2), det(difference-4, the-3), nsubj(What-1, difference-4), case(balls-6, between-5), nmod:between(difference-4, balls-6), case(Test-8, in-7), nmod:in(balls-6, Test-8), cc(Test-8, and-9), compound(Cricket-11, ODI-10), conj:and(Test-8, Cricket-11), punct(What-1, ?-12)] 	201
[root(ROOT-0, What-1), cop(What-1, is-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(store-7, to-6), acl(way-5, store-7), nmod:poss(bag-10, my-8), amod(bag-10, sleeping-9), dobj(store-7, bag-10), case(periods-13, for-11), amod(periods-13, long-12), nmod:for(store-7, periods-13), case(time-15, of-14), nmod:of(periods-13, time-15), punct(What-1, ?-16)] 	[root(ROOT-0, What-1), cop(What-1, 's-2), det(way-5, the-3), amod(way-5, best-4), nsubj(What-1, way-5), mark(store-7, to-6), acl(way-5, store-7), dobj(store-7, asparagus-8), punct(What-1, ?-9)] 	202
[advmod(long-2, How-1), advmod(keep-5, long-2), aux(keep-5, can-3), nsubj(keep-5, you-4), root(ROOT-0, keep-5), dobj(keep-5, chocolate-6), case(freezer-9, in-7), det(freezer-9, the-8), nmod:in(keep-5, freezer-9), punct(keep-5, ?-10)] 	[advmod(long-2, How-1), advmod(keep-5, long-2), aux(keep-5, can-3), nsubj(keep-5, I-4), root(ROOT-0, keep-5), compound(dough-7, bread-6), dobj(keep-5, dough-7), case(refrigerator-10, in-8), det(refrigerator-10, the-9), nmod:in(keep-5, refrigerator-10), punct(keep-5, ?-11)] 	203
[aux(contact-3, Should-1), nsubj(contact-3, I-2), root(ROOT-0, contact-3), det(student-6, a-4), compound(student-6, PhD-5), dobj(contact-3, student-6), cc(student-6, or-7), nmod:poss(supervisor-9, his-8), conj:or(student-6, supervisor-9), case(collaboration-12, for-10), amod(collaboration-12, potential-11), nmod:for(supervisor-9, collaboration-12), punct(contact-3, ?-13)] 	[root(ROOT-0, How-1), dep(How-1, should-2), det(approach-6, a-3), compound(approach-6, PhD-4), compound(approach-6, student-5), dobj(should-2, approach-6), det(collaboration-8, a-7), dobj(approach-6, collaboration-8), punct(How-1, ?-9)] 	204
[advmod(make-3, How-1), mark(make-3, to-2), root(ROOT-0, make-3), amod(coffee-5, good-4), dobj(make-3, coffee-5), case(pot-9, in-6), det(pot-9, a-7), compound(pot-9, Moka-8), nmod:in(make-3, pot-9), punct(make-3, ?-10)] 	[advmod(make-3, How-1), mark(make-3, to-2), root(ROOT-0, make-3), advmod(one-6, more-4), mwe(more-4, than-5), nummod(cup-8, one-6), amod(cup-8, good-7), dobj(make-3, cup-8), case(coffee-10, of-9), nmod:of(cup-8, coffee-10), case(pot-14, with-11), det(pot-14, a-12), compound(pot-14, moka-13), nmod:with(make-3, pot-14), punct(make-3, ?-15)] 	205
[advmod(prepare-4, How-1), aux(prepare-4, do-2), nsubj(prepare-4, I-3), root(ROOT-0, prepare-4), det(wall-8, this-5), amod(wall-8, porous-6), amod(wall-8, interior-7), dobj(prepare-4, wall-8), case(paint-10, for-9), nmod:for(prepare-4, paint-10), punct(prepare-4, ?-11)] 	[advmod(install-4, How-1), aux(install-4, do-2), nsubj(install-4, I-3), root(ROOT-0, install-4), det(wall-9, a-5), amod(wall-9, new-6), amod(wall-9, interior-7), compound(wall-9, partition-8), dobj(install-4, wall-9), punct(install-4, ?-10)] 	206
[nsubj(causing-4, What-1), aux(causing-4, could-2), aux(causing-4, be-3), root(ROOT-0, causing-4), nmod:poss(GFCI-6, my-5), dobj(causing-4, GFCI-6), case(trip-8, to-7), nmod:to(causing-4, trip-8), punct(causing-4, ?-9)] 	[nsubj(causing-4, What-1), aux(causing-4, could-2), aux(causing-4, be-3), root(ROOT-0, causing-4), nmod:poss(outlet-7, my-5), compound(outlet-7, GFCI-6), dobj(causing-4, outlet-7), case(trip-9, to-8), nmod:to(causing-4, trip-9), punct(causing-4, ?-10)] 	207
[advmod(prepare-4, How-1), aux(prepare-4, do-2), nsubj(prepare-4, I-3), root(ROOT-0, prepare-4), det(wall-8, this-5), amod(wall-8, porous-6), amod(wall-8, interior-7), dobj(prepare-4, wall-8), case(paint-10, for-9), nmod:for(prepare-4, paint-10), punct(prepare-4, ?-11)] 	[advmod(make-4, How-1), aux(make-4, do-2), nsubj(make-4, I-3), root(ROOT-0, make-4), det(match-7, this-5), compound(match-7, paint-6), dobj(make-4, match-7), punct(make-4, ?-8)] 	208
[nsubj(wrong-4, What-1), aux(wrong-4, could-2), cop(wrong-4, be-3), root(ROOT-0, wrong-4), case(furnace-7, with-5), nmod:poss(furnace-7, my-6), nmod:with(wrong-4, furnace-7), punct(wrong-4, ?-8)] 	[nsubj(wrong-3, What-1), cop(wrong-3, is-2), root(ROOT-0, wrong-3), case(furnace-7, with-4), nmod:poss(furnace-7, my-5), compound(furnace-7, gas-6), nmod:with(wrong-3, furnace-7), punct(wrong-3, ?-8)] 	209

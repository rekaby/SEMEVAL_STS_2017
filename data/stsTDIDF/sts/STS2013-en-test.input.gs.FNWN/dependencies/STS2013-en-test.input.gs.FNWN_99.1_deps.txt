case	frame	in
det	frame	this
nmod:in	part	frame
det	part	a
nsubj	part	part
cop	part	is
root	ROOT	part
case	whole	of
det	whole	a
amod	whole	larger
nmod:of	part	whole
acl	whole	comprised
case	parts	of
nmod:of	comprised	parts
nsubjpass	ordered	that
auxpass	ordered	are
acl:relcl	parts	ordered
punct	part	.-18) det(parts-2, the
nsubjpass	ordered	parts
aux	ordered	can
auxpass	ordered	be
root	ROOT	ordered
advmod	first	temporally
punct	first	-LRB-
xcomp	ordered	first
dep	first	to
dep	to	last
cc	last	and
compound	versa	vice
conj:and	last	versa
punct	last	-RRB-
cc	to	or
advmod	down	vertically
punct	down	-LRB-
conj:or	to	down
case	up	to
compound:prt	down	up
cc	to	and
advmod	versa	vice
conj:or	to	versa
punct	first	-RRB-
punct	ordered	.-25) det(part-2, the
nsubjpass	modified	part
aux	modified	can
auxpass	modified	be
csubjpass	given	modified
case	part_prop	by
det	part_prop	the
nmod:agent	modified	part_prop
cc	part_prop	or
det	number	the
conj:or	part_prop	number
case	part	of
det	part	the
nmod:of	number	part
aux	given	can
auxpass	given	be
root	ROOT	given
case	ordinality	by
nmod:agent	given	ordinality
punct	given	.
